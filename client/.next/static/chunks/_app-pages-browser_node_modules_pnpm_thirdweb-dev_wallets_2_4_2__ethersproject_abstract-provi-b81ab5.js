"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_wallets_2_4_2__ethersproject_abstract-provi-b81ab5"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MagicAuthConnector: function() { return /* binding */ MagicAuthConnector; },\n/* harmony export */   MagicBaseConnector: function() { return /* binding */ MagicBaseConnector; }\n/* harmony export */ });\n/* harmony import */ var _dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-a5db7c83.browser.esm.js\");\n/* harmony import */ var _dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../dist/defineProperty-d7c057bf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/defineProperty-d7c057bf.browser.esm.js\");\n/* harmony import */ var _dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+providers@5.7.2/node_modules/@ethersproject/providers/lib.esm/web3-provider.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _magic_ext_oauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @magic-ext/oauth */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs\");\n/* harmony import */ var magic_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! magic-sdk */ \"(app-pages-browser)/./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs\");\n/* harmony import */ var _dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/WagmiConnector-2f14002d.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\nconst IS_SERVER = \"object\" === \"undefined\";\nclass MagicBaseConnector extends _dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.W {\n    async getAccount() {\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n        ;\n        const signer = provider.getSigner();\n        const account = await signer.getAddress();\n        if (account.startsWith(\"0x\")) {\n            return account;\n        }\n        return \"0x\".concat(account);\n    }\n    async getProvider() {\n        if (this.provider) {\n            return this.provider;\n        }\n        const magic = this.getMagicSDK();\n        this.provider = magic.rpcProvider;\n        return this.provider;\n    }\n    async getSigner() {\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n        ;\n        const signer = await provider.getSigner();\n        return signer;\n    }\n    async isAuthorized() {\n        const magic = this.getMagicSDK();\n        try {\n            return await magic.user.isLoggedIn();\n        } catch (e) {\n            return false;\n        }\n    }\n    onAccountsChanged(accounts) {\n        if (accounts.length === 0) {\n            this.emit(\"disconnect\");\n        } else {\n            if (accounts[0]) {\n                this.emit(\"change\", {\n                    account: ethers__WEBPACK_IMPORTED_MODULE_5__.getAddress(accounts[0])\n                });\n            }\n        }\n    }\n    onChainChanged(chainId) {\n        const id = (0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.n)(chainId);\n        const unsupported = this.isChainUnsupported(id);\n        this.emit(\"change\", {\n            chain: {\n                id,\n                unsupported\n            }\n        });\n    }\n    onDisconnect() {\n        this.emit(\"disconnect\");\n    }\n    async disconnect() {\n        const magic = this.getMagicSDK();\n        await magic.user.logout();\n    }\n    constructor(config){\n        super(config);\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__._)(this, \"id\", \"magic-link\");\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__._)(this, \"name\", \"Magic Link\");\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__._)(this, \"ready\", !IS_SERVER);\n        this.magicOptions = config.options;\n    }\n}\nvar _connectedChainId = /*#__PURE__*/ new WeakMap();\nvar _type = /*#__PURE__*/ new WeakMap();\nclass MagicAuthConnector extends MagicBaseConnector {\n    async connect(options) {\n        if (!this.magicOptions.apiKey) {\n            throw new Error(\"Magic API Key is not provided.\");\n        }\n        try {\n            if (options.chainId) {\n                this.initializeMagicSDK({\n                    chainId: options.chainId\n                });\n            }\n            const provider = await this.getProvider();\n            this.setupListeners();\n            this.emit(\"message\", {\n                type: \"connecting\"\n            });\n            // Check if there is a user logged in\n            const isAuthenticated = await this.isAuthorized();\n            // Check if we have a chainId, in case of error just assign 0 for legacy\n            let chainId;\n            try {\n                chainId = await this.getChainId();\n            } catch (e) {\n                chainId = 0;\n            }\n            (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a)(this, _connectedChainId, chainId);\n            // if there is a user logged in, return the user\n            if (isAuthenticated) {\n                return {\n                    provider,\n                    chain: {\n                        id: chainId,\n                        unsupported: false\n                    },\n                    account: await this.getAccount()\n                };\n            }\n            const magic = this.getMagicSDK();\n            if ((0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b)(this, _type) === \"connect\") {\n                if (\"email\" in options || \"phoneNumber\" in options) {\n                    console.warn(\"Passing email or phoneNumber is not required for Magic Connect\");\n                }\n                await magic.wallet.connectWithUI();\n            } else {\n                // LOGIN WITH MAGIC LINK WITH OAUTH PROVIDER\n                if (\"oauthProvider\" in options) {\n                    await magic.oauth.loginWithRedirect({\n                        provider: options.oauthProvider,\n                        redirectURI: this.oauthRedirectURI || window.location.href\n                    });\n                    await new Promise((res)=>{\n                        // never resolve - to keep the app in \"connecting...\" state until the redirect happens\n                        setTimeout(res, 10000); // timeout if takes if redirect doesn't happen for 10 seconds (will likely never happen)\n                    });\n                } else if (\"email\" in options) {\n                    await magic.auth.loginWithMagicLink({\n                        email: options.email,\n                        showUI: true\n                    });\n                } else if (\"phoneNumber\" in options) {\n                    await magic.auth.loginWithSMS({\n                        phoneNumber: options.phoneNumber\n                    });\n                } else {\n                    throw new Error(\"Invalid options: Either provide and email, phoneNumber or oauthProvider when using Magic Auth\");\n                }\n            }\n            const signer = await this.getSigner();\n            let account = await signer.getAddress();\n            if (!account.startsWith(\"0x\")) {\n                account = \"0x\".concat(account);\n            }\n            return {\n                account,\n                chain: {\n                    id: chainId,\n                    unsupported: false\n                },\n                provider\n            };\n        // throw new UserRejectedRequestError(\"User rejected request\");\n        } catch (error) {\n            console.error(error);\n            throw new Error(\"Something went wrong\");\n        }\n    }\n    async getChainId() {\n        var _this_magicSdkConfiguration;\n        const networkOptions = (_this_magicSdkConfiguration = this.magicSdkConfiguration) === null || _this_magicSdkConfiguration === void 0 ? void 0 : _this_magicSdkConfiguration.network;\n        if (typeof networkOptions === \"object\") {\n            const chainID = networkOptions.chainId;\n            if (chainID) {\n                return (0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.n)(chainID);\n            }\n        }\n        throw new Error(\"Chain ID is not defined\");\n    }\n    initializeMagicSDK() {\n        let { chainId } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const options = {\n            ...this.magicSdkConfiguration,\n            extensions: [\n                new _magic_ext_oauth__WEBPACK_IMPORTED_MODULE_0__.OAuthExtension()\n            ]\n        };\n        if (chainId) {\n            const chain = this.chains.find((c)=>c.chainId === chainId);\n            if (chain) {\n                options.network = {\n                    rpcUrl: chain.rpc[0] || \"\",\n                    // TODO handle empty RPC array\n                    chainId: chain.chainId\n                };\n            }\n        }\n        this.magicSDK = new magic_sdk__WEBPACK_IMPORTED_MODULE_1__.Magic(this.magicOptions.apiKey, options);\n        this.provider = this.magicSDK.rpcProvider;\n        return this.magicSDK;\n    }\n    getMagicSDK() {\n        if (!this.magicSDK) {\n            return this.initializeMagicSDK();\n        }\n        return this.magicSDK;\n    }\n    async setupListeners() {\n        const provider = await this.getProvider();\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n    }\n    async switchChain(chainId) {\n        const chain = this.chains.find((c)=>c.chainId === chainId);\n        if (!chain) {\n            throw new Error(\"Chain not found\");\n        }\n        if ((0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b)(this, _connectedChainId) !== chainId) {\n            this.initializeMagicSDK({\n                chainId\n            });\n        }\n        return chain;\n    }\n    constructor(config){\n        var _config_options_oauthOptions, _config_options_oauthOptions1;\n        super(config);\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__._)(this, _connectedChainId, {\n            writable: true,\n            value: void 0\n        });\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__._)(this, _type, {\n            writable: true,\n            value: void 0\n        });\n        this.magicSdkConfiguration = config.options.magicSdkConfiguration;\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a)(this, _type, config.options.type);\n        this.oauthProviders = ((_config_options_oauthOptions = config.options.oauthOptions) === null || _config_options_oauthOptions === void 0 ? void 0 : _config_options_oauthOptions.providers) || [];\n        this.oauthRedirectURI = (_config_options_oauthOptions1 = config.options.oauthOptions) === null || _config_options_oauthOptions1 === void 0 ? void 0 : _config_options_oauthOptions1.redirectURI;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAuthErrorCode: function() { return /* binding */ ce; },\n/* harmony export */   OAuthExtension: function() { return /* binding */ Y; },\n/* harmony export */   OAuthPayloadMethods: function() { return /* binding */ E; }\n/* harmony export */ });\n/* harmony import */ var magic_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! magic-sdk */ \"(app-pages-browser)/./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs\");\nvar te = Object.create;\nvar D = Object.defineProperty;\nvar ne = Object.getOwnPropertyDescriptor;\nvar ie = Object.getOwnPropertyNames;\nvar ae = Object.getPrototypeOf, oe = Object.prototype.hasOwnProperty;\nvar H = (n, r)=>()=>(r || n((r = {\n            exports: {}\n        }).exports, r), r.exports);\nvar se = (n, r, s, m)=>{\n    if (r && typeof r == \"object\" || typeof r == \"function\") for (let h of ie(r))!oe.call(n, h) && h !== s && D(n, h, {\n        get: ()=>r[h],\n        enumerable: !(m = ne(r, h)) || m.enumerable\n    });\n    return n;\n};\nvar T = (n, r, s)=>(s = n != null ? te(ae(n)) : {}, se(r || !n || !n.__esModule ? D(s, \"default\", {\n        value: n,\n        enumerable: !0\n    }) : s, n));\n_c = T;\nvar C = (n, r, s)=>new Promise((m, h)=>{\n        var w = (p)=>{\n            try {\n                d(s.next(p));\n            } catch (u) {\n                h(u);\n            }\n        }, R = (p)=>{\n            try {\n                d(s.throw(p));\n            } catch (u) {\n                h(u);\n            }\n        }, d = (p)=>p.done ? m(p.value) : Promise.resolve(p.value).then(w, R);\n        d((s = s.apply(n, r)).next());\n    });\n_c1 = C;\nvar k = H((I, F)=>{\n    (function(n, r) {\n        typeof I == \"object\" ? F.exports = I = r() : typeof define == \"function\" && define.amd ? define([], r) : n.CryptoJS = r();\n    })(I, function() {\n        var n = n || function(r, s) {\n            var m = Object.create || function() {\n                function e() {}\n                return function(t) {\n                    var c;\n                    return e.prototype = t, c = new e, e.prototype = null, c;\n                };\n            }(), h = {}, w = h.lib = {}, R = w.Base = function() {\n                return {\n                    extend: function(e) {\n                        var t = m(this);\n                        return e && t.mixIn(e), (!t.hasOwnProperty(\"init\") || this.init === t.init) && (t.init = function() {\n                            t.$super.init.apply(this, arguments);\n                        }), t.init.prototype = t, t.$super = this, t;\n                    },\n                    create: function() {\n                        var e = this.extend();\n                        return e.init.apply(e, arguments), e;\n                    },\n                    init: function() {},\n                    mixIn: function(e) {\n                        for(var t in e)e.hasOwnProperty(t) && (this[t] = e[t]);\n                        e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n                    },\n                    clone: function() {\n                        return this.init.prototype.extend(this);\n                    }\n                };\n            }(), d = w.WordArray = R.extend({\n                init: function(e, t) {\n                    e = this.words = e || [], t != s ? this.sigBytes = t : this.sigBytes = e.length * 4;\n                },\n                toString: function(e) {\n                    return (e || u).stringify(this);\n                },\n                concat: function(e) {\n                    var t = this.words, c = e.words, i = this.sigBytes, g = e.sigBytes;\n                    if (this.clamp(), i % 4) for(var v = 0; v < g; v++){\n                        var b = c[v >>> 2] >>> 24 - v % 4 * 8 & 255;\n                        t[i + v >>> 2] |= b << 24 - (i + v) % 4 * 8;\n                    }\n                    else for(var v = 0; v < g; v += 4)t[i + v >>> 2] = c[v >>> 2];\n                    return this.sigBytes += g, this;\n                },\n                clamp: function() {\n                    var e = this.words, t = this.sigBytes;\n                    e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4);\n                },\n                clone: function() {\n                    var e = R.clone.call(this);\n                    return e.words = this.words.slice(0), e;\n                },\n                random: function(e) {\n                    for(var t = [], c = function(y) {\n                        var y = y, A = 987654321, B = 4294967295;\n                        return function() {\n                            A = 36969 * (A & 65535) + (A >> 16) & B, y = 18e3 * (y & 65535) + (y >> 16) & B;\n                            var x = (A << 16) + y & B;\n                            return x /= 4294967296, x += .5, x * (r.random() > .5 ? 1 : -1);\n                        };\n                    }, i = 0, g; i < e; i += 4){\n                        var v = c((g || r.random()) * 4294967296);\n                        g = v() * 987654071, t.push(v() * 4294967296 | 0);\n                    }\n                    return new d.init(t, e);\n                }\n            }), p = h.enc = {}, u = p.Hex = {\n                stringify: function(e) {\n                    for(var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++){\n                        var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n                        i.push((v >>> 4).toString(16)), i.push((v & 15).toString(16));\n                    }\n                    return i.join(\"\");\n                },\n                parse: function(e) {\n                    for(var t = e.length, c = [], i = 0; i < t; i += 2)c[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;\n                    return new d.init(c, t / 2);\n                }\n            }, _ = p.Latin1 = {\n                stringify: function(e) {\n                    for(var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++){\n                        var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n                        i.push(String.fromCharCode(v));\n                    }\n                    return i.join(\"\");\n                },\n                parse: function(e) {\n                    for(var t = e.length, c = [], i = 0; i < t; i++)c[i >>> 2] |= (e.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n                    return new d.init(c, t);\n                }\n            }, a = p.Utf8 = {\n                stringify: function(e) {\n                    try {\n                        return decodeURIComponent(escape(_.stringify(e)));\n                    } catch (e) {\n                        throw new Error(\"Malformed UTF-8 data\");\n                    }\n                },\n                parse: function(e) {\n                    return _.parse(unescape(encodeURIComponent(e)));\n                }\n            }, f = w.BufferedBlockAlgorithm = R.extend({\n                reset: function() {\n                    this._data = new d.init, this._nDataBytes = 0;\n                },\n                _append: function(e) {\n                    typeof e == \"string\" && (e = a.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n                },\n                _process: function(e) {\n                    var t = this._data, c = t.words, i = t.sigBytes, g = this.blockSize, v = g * 4, b = i / v;\n                    e ? b = r.ceil(b) : b = r.max((b | 0) - this._minBufferSize, 0);\n                    var y = b * g, A = r.min(y * 4, i);\n                    if (y) {\n                        for(var B = 0; B < y; B += g)this._doProcessBlock(c, B);\n                        var x = c.splice(0, y);\n                        t.sigBytes -= A;\n                    }\n                    return new d.init(x, A);\n                },\n                clone: function() {\n                    var e = R.clone.call(this);\n                    return e._data = this._data.clone(), e;\n                },\n                _minBufferSize: 0\n            }), o = w.Hasher = f.extend({\n                cfg: R.extend(),\n                init: function(e) {\n                    this.cfg = this.cfg.extend(e), this.reset();\n                },\n                reset: function() {\n                    f.reset.call(this), this._doReset();\n                },\n                update: function(e) {\n                    return this._append(e), this._process(), this;\n                },\n                finalize: function(e) {\n                    e && this._append(e);\n                    var t = this._doFinalize();\n                    return t;\n                },\n                blockSize: 512 / 32,\n                _createHelper: function(e) {\n                    return function(t, c) {\n                        return new e.init(c).finalize(t);\n                    };\n                },\n                _createHmacHelper: function(e) {\n                    return function(t, c) {\n                        return new l.HMAC.init(e, c).finalize(t);\n                    };\n                }\n            }), l = h.algo = {};\n            return h;\n        }(Math);\n        return n;\n    });\n});\nvar z = H((S, W)=>{\n    (function(n, r) {\n        typeof S == \"object\" ? W.exports = S = r(k()) : typeof define == \"function\" && define.amd ? define([\n            \"./core\"\n        ], r) : r(n.CryptoJS);\n    })(S, function(n) {\n        return function(r) {\n            var s = n, m = s.lib, h = m.WordArray, w = m.Hasher, R = s.algo, d = [], p = [];\n            (function() {\n                function a(e) {\n                    for(var t = r.sqrt(e), c = 2; c <= t; c++)if (!(e % c)) return !1;\n                    return !0;\n                }\n                function f(e) {\n                    return (e - (e | 0)) * 4294967296 | 0;\n                }\n                for(var o = 2, l = 0; l < 64;)a(o) && (l < 8 && (d[l] = f(r.pow(o, 1 / 2))), p[l] = f(r.pow(o, 1 / 3)), l++), o++;\n            })();\n            var u = [], _ = R.SHA256 = w.extend({\n                _doReset: function() {\n                    this._hash = new h.init(d.slice(0));\n                },\n                _doProcessBlock: function(a, f) {\n                    for(var o = this._hash.words, l = o[0], e = o[1], t = o[2], c = o[3], i = o[4], g = o[5], v = o[6], b = o[7], y = 0; y < 64; y++){\n                        if (y < 16) u[y] = a[f + y] | 0;\n                        else {\n                            var A = u[y - 15], B = (A << 25 | A >>> 7) ^ (A << 14 | A >>> 18) ^ A >>> 3, x = u[y - 2], G = (x << 15 | x >>> 17) ^ (x << 13 | x >>> 19) ^ x >>> 10;\n                            u[y] = B + u[y - 7] + G + u[y - 16];\n                        }\n                        var Q = i & g ^ ~i & v, X = l & e ^ l & t ^ e & t, Z = (l << 30 | l >>> 2) ^ (l << 19 | l >>> 13) ^ (l << 10 | l >>> 22), ee = (i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25), P = b + ee + Q + p[y] + u[y], re = Z + X;\n                        b = v, v = g, g = i, i = c + P | 0, c = t, t = e, e = l, l = P + re | 0;\n                    }\n                    o[0] = o[0] + l | 0, o[1] = o[1] + e | 0, o[2] = o[2] + t | 0, o[3] = o[3] + c | 0, o[4] = o[4] + i | 0, o[5] = o[5] + g | 0, o[6] = o[6] + v | 0, o[7] = o[7] + b | 0;\n                },\n                _doFinalize: function() {\n                    var a = this._data, f = a.words, o = this._nDataBytes * 8, l = a.sigBytes * 8;\n                    return f[l >>> 5] |= 128 << 24 - l % 32, f[(l + 64 >>> 9 << 4) + 14] = r.floor(o / 4294967296), f[(l + 64 >>> 9 << 4) + 15] = o, a.sigBytes = f.length * 4, this._process(), this._hash;\n                },\n                clone: function() {\n                    var a = w.clone.call(this);\n                    return a._hash = this._hash.clone(), a;\n                }\n            });\n            s.SHA256 = w._createHelper(_), s.HmacSHA256 = w._createHmacHelper(_);\n        }(Math), n.SHA256;\n    });\n});\nvar q = H((U, L)=>{\n    (function(n, r) {\n        typeof U == \"object\" ? L.exports = U = r(k()) : typeof define == \"function\" && define.amd ? define([\n            \"./core\"\n        ], r) : r(n.CryptoJS);\n    })(U, function(n) {\n        return function() {\n            var r = n, s = r.lib, m = s.WordArray, h = r.enc, w = h.Base64 = {\n                stringify: function(d) {\n                    var p = d.words, u = d.sigBytes, _ = this._map;\n                    d.clamp();\n                    for(var a = [], f = 0; f < u; f += 3)for(var o = p[f >>> 2] >>> 24 - f % 4 * 8 & 255, l = p[f + 1 >>> 2] >>> 24 - (f + 1) % 4 * 8 & 255, e = p[f + 2 >>> 2] >>> 24 - (f + 2) % 4 * 8 & 255, t = o << 16 | l << 8 | e, c = 0; c < 4 && f + c * .75 < u; c++)a.push(_.charAt(t >>> 6 * (3 - c) & 63));\n                    var i = _.charAt(64);\n                    if (i) for(; a.length % 4;)a.push(i);\n                    return a.join(\"\");\n                },\n                parse: function(d) {\n                    var p = d.length, u = this._map, _ = this._reverseMap;\n                    if (!_) {\n                        _ = this._reverseMap = [];\n                        for(var a = 0; a < u.length; a++)_[u.charCodeAt(a)] = a;\n                    }\n                    var f = u.charAt(64);\n                    if (f) {\n                        var o = d.indexOf(f);\n                        o !== -1 && (p = o);\n                    }\n                    return R(d, p, _);\n                },\n                _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n            };\n            function R(d, p, u) {\n                for(var _ = [], a = 0, f = 0; f < p; f++)if (f % 4) {\n                    var o = u[d.charCodeAt(f - 1)] << f % 4 * 2, l = u[d.charCodeAt(f)] >>> 6 - f % 4 * 2;\n                    _[a >>> 2] |= (o | l) << 24 - a % 4 * 8, a++;\n                }\n                return m.create(_, a);\n            }\n        }(), n.enc.Base64;\n    });\n});\n\nvar E = ((r)=>(r.ParseRedirectResult = \"magic_oauth_parse_redirect_result\", r))(E || {}), ce = ((a)=>(a.InvalidRequest = \"invalid_request\", a.InvalidClient = \"invalid_client\", a.InvalidScope = \"invalid_scope\", a.InvalidGrant = \"invalid_grant\", a.UnauthorizedClient = \"unauthorized_client\", a.UnsupportedResponseType = \"unsupported_response_type\", a.UnsupportedGrantType = \"unsupported_grant_type\", a.UnsupportedTokenType = \"unsupported_token_type\", a.AccessDenied = \"access_denied\", a.ServerError = \"server_error\", a.TemporarilyUnavailable = \"temporarily_unavailable\", a))(ce || {});\nvar j = T(z()), J = T(q());\nvar $ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\", V =  true && !!window.crypto, fe = V && !!window.crypto.subtle;\nfunction ue(n) {\n    return Array.from(n).map((r)=>$[r % $.length]).join(\"\");\n}\nfunction M(n) {\n    let r = (s)=>s.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n    if (n instanceof ArrayBuffer) {\n        let s = new Uint8Array(n), m = Array.from(s).map((w)=>String.fromCharCode(w)).join(\"\"), h = btoa(m);\n        return r(h);\n    }\n    return r(J.default.stringify(n));\n}\n_c2 = M;\nfunction de(n) {\n    return C(this, null, function*() {\n        if (fe) {\n            let r = new TextEncoder().encode(n);\n            return crypto.subtle.digest(\"SHA-256\", r).then(M);\n        }\n        return M((0, j.default)(n));\n    });\n}\nfunction N(n) {\n    let r = new Uint8Array(n);\n    if (V) window.crypto.getRandomValues(r);\n    else for(let s = 0; s < n; s += 1)r[s] = Math.floor(Math.random() * Math.floor(255));\n    return ue(r);\n}\n_c3 = N;\nfunction K() {\n    return C(this, null, function*() {\n        let n = N(128), r = N(128), s = yield de(r);\n        return {\n            verifier: r,\n            challenge: s,\n            state: n\n        };\n    });\n}\n_c4 = K;\nvar Y = class extends magic_sdk__WEBPACK_IMPORTED_MODULE_0__.Extension.Internal {\n    loginWithRedirect(s) {\n        return this.utils.createPromiEvent((m)=>C(this, null, function*() {\n                let { provider: h, query: w } = yield pe.call(this, s);\n                window.location.href = new URL(\"/v1/oauth2/\".concat(h, \"/start?\").concat(w), this.sdk.endpoint).href, m();\n            }));\n    }\n    getRedirectResult() {\n        let s = window.location.search, m = window.location.origin + window.location.pathname;\n        return window.history.replaceState(null, \"\", m), he.call(this, s);\n    }\n    constructor(){\n        super(...arguments);\n        this.name = \"oauth\";\n        this.config = {};\n        this.compat = {\n            \"magic-sdk\": \">=2.4.6\",\n            \"@magic-sdk/react-native\": !1,\n            \"@magic-sdk/react-native-bare\": !1,\n            \"@magic-sdk/react-native-expo\": !1\n        };\n    }\n}, O = \"oauth_redirect_metadata\";\nfunction pe(n) {\n    return C(this, null, function*() {\n        yield this.utils.storage.removeItem(O);\n        let { provider: r, redirectURI: s, scope: m, loginHint: h } = n, { verifier: w, challenge: R, state: d } = yield K(), p = JSON.stringify({\n            verifier: w,\n            state: d\n        });\n        return yield this.utils.storage.setItem(O, p), {\n            query: [\n                \"magic_api_key=\".concat(encodeURIComponent(this.sdk.apiKey)),\n                \"magic_challenge=\".concat(encodeURIComponent(R)),\n                \"state=\".concat(encodeURIComponent(d)),\n                \"platform=\".concat(encodeURIComponent(\"web\")),\n                m && \"scope=\".concat(encodeURIComponent(m.join(\" \"))),\n                s && \"redirect_uri=\".concat(encodeURIComponent(s)),\n                h && \"login_hint=\".concat(encodeURIComponent(h))\n            ].reduce((_, a)=>a ? \"\".concat(_, \"&\").concat(a) : _),\n            provider: r,\n            redirectURI: s\n        };\n    });\n}\nfunction he(n) {\n    return this.utils.createPromiEvent((r, s)=>C(this, null, function*() {\n            var _;\n            let m = yield this.utils.storage.getItem(O), { verifier: h, state: w } = JSON.parse(m);\n            this.utils.storage.removeItem(O);\n            let R = this.utils.createJsonRpcRequestPayload(\"magic_oauth_parse_redirect_result\", [\n                n,\n                h,\n                w\n            ]), d = yield this.request(R), p = d, u = d;\n            u.error && s(this.createError(u.error, (_ = u.error_description) != null ? _ : \"An error occurred.\", {\n                errorURI: u.error_uri,\n                provider: u.provider\n            })), r(p);\n        }));\n}\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"T\");\n$RefreshReg$(_c1, \"C\");\n$RefreshReg$(_c2, \"M\");\n$RefreshReg$(_c3, \"N\");\n$RefreshReg$(_c4, \"K\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+commons@9.6.2_@magic-sdk+provider@13.6.2_@magic-sdk+types@11.6.2/node_modules/@magic-sdk/commons/dist/es/index.mjs":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@magic-sdk+commons@9.6.2_@magic-sdk+provider@13.6.2_@magic-sdk+types@11.6.2/node_modules/@magic-sdk/commons/dist/es/index.mjs ***!
  \**********************************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthChainType: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.EthChainType; },\n/* harmony export */   Extension: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.Extension; },\n/* harmony export */   ExtensionError: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.MagicExtensionError; },\n/* harmony export */   ExtensionWarning: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.MagicExtensionWarning; },\n/* harmony export */   MagicIncomingWindowMessage: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.MagicIncomingWindowMessage; },\n/* harmony export */   MagicOutgoingWindowMessage: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.MagicOutgoingWindowMessage; },\n/* harmony export */   MagicPayloadMethod: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.MagicPayloadMethod; },\n/* harmony export */   RPCError: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.MagicRPCError; },\n/* harmony export */   RPCErrorCode: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.RPCErrorCode; },\n/* harmony export */   SDKError: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.MagicSDKError; },\n/* harmony export */   SDKErrorCode: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.SDKErrorCode; },\n/* harmony export */   SDKWarning: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.MagicSDKWarning; },\n/* harmony export */   SDKWarningCode: function() { return /* reexport safe */ _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__.SDKWarningCode; },\n/* harmony export */   isPromiEvent: function() { return /* reexport safe */ _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.isPromiEvent; }\n/* harmony export */ });\n/* harmony import */ var _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @magic-sdk/provider */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+provider@13.6.2_localforage@1.10.0/node_modules/@magic-sdk/provider/dist/es/index.mjs\");\n/* harmony import */ var _magic_sdk_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @magic-sdk/types */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+types@11.6.2/node_modules/@magic-sdk/types/dist/es/index.mjs\");\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbWFnaWMtc2RrK2NvbW1vbnNAOS42LjJfQG1hZ2ljLXNkaytwcm92aWRlckAxMy42LjJfQG1hZ2ljLXNkayt0eXBlc0AxMS42LjIvbm9kZV9tb2R1bGVzL0BtYWdpYy1zZGsvY29tbW9ucy9kaXN0L2VzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWlMO0FBQThCO0FBQStILENBQzlVLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vQG1hZ2ljLXNkaytjb21tb25zQDkuNi4yX0BtYWdpYy1zZGsrcHJvdmlkZXJAMTMuNi4yX0BtYWdpYy1zZGsrdHlwZXNAMTEuNi4yL25vZGVfbW9kdWxlcy9AbWFnaWMtc2RrL2NvbW1vbnMvZGlzdC9lcy9pbmRleC5tanM/NTI5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7RXh0ZW5zaW9uIGFzIG4sTWFnaWNTREtFcnJvciBhcyBvLE1hZ2ljRXh0ZW5zaW9uRXJyb3IgYXMgYSxNYWdpY0V4dGVuc2lvbldhcm5pbmcgYXMgdCxNYWdpY1JQQ0Vycm9yIGFzIHMsTWFnaWNTREtXYXJuaW5nIGFzIEUsaXNQcm9taUV2ZW50IGFzIGV9ZnJvbVwiQG1hZ2ljLXNkay9wcm92aWRlclwiO2V4cG9ydCpmcm9tXCJAbWFnaWMtc2RrL3R5cGVzXCI7ZXhwb3J0e24gYXMgRXh0ZW5zaW9uLGEgYXMgRXh0ZW5zaW9uRXJyb3IsdCBhcyBFeHRlbnNpb25XYXJuaW5nLHMgYXMgUlBDRXJyb3IsbyBhcyBTREtFcnJvcixFIGFzIFNES1dhcm5pbmcsZSBhcyBpc1Byb21pRXZlbnR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbIkV4dGVuc2lvbiIsIm4iLCJNYWdpY1NES0Vycm9yIiwibyIsIk1hZ2ljRXh0ZW5zaW9uRXJyb3IiLCJhIiwiTWFnaWNFeHRlbnNpb25XYXJuaW5nIiwidCIsIk1hZ2ljUlBDRXJyb3IiLCJzIiwiTWFnaWNTREtXYXJuaW5nIiwiRSIsImlzUHJvbWlFdmVudCIsImUiLCJFeHRlbnNpb25FcnJvciIsIkV4dGVuc2lvbldhcm5pbmciLCJSUENFcnJvciIsIlNES0Vycm9yIiwiU0RLV2FybmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+commons@9.6.2_@magic-sdk+provider@13.6.2_@magic-sdk+types@11.6.2/node_modules/@magic-sdk/commons/dist/es/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+provider@13.6.2_localforage@1.10.0/node_modules/@magic-sdk/provider/dist/es/index.mjs":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@magic-sdk+provider@13.6.2_localforage@1.10.0/node_modules/@magic-sdk/provider/dist/es/index.mjs ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Extension: function() { return /* binding */ w; },\n/* harmony export */   MagicExtensionError: function() { return /* binding */ J; },\n/* harmony export */   MagicExtensionWarning: function() { return /* binding */ X; },\n/* harmony export */   MagicRPCError: function() { return /* binding */ M; },\n/* harmony export */   MagicSDKError: function() { return /* binding */ b; },\n/* harmony export */   MagicSDKWarning: function() { return /* binding */ q; },\n/* harmony export */   SDKBase: function() { return /* binding */ Te; },\n/* harmony export */   STORE_KEY_PRIVATE_KEY: function() { return /* binding */ Me; },\n/* harmony export */   STORE_KEY_PUBLIC_JWK: function() { return /* binding */ de; },\n/* harmony export */   TypedEmitter: function() { return /* binding */ $e; },\n/* harmony export */   ViewController: function() { return /* binding */ Se; },\n/* harmony export */   clearKeys: function() { return /* binding */ me; },\n/* harmony export */   createDeprecationWarning: function() { return /* binding */ hr; },\n/* harmony export */   createDuplicateIframeWarning: function() { return /* binding */ mr; },\n/* harmony export */   createExtensionNotInitializedError: function() { return /* binding */ tt; },\n/* harmony export */   createIncompatibleExtensionsError: function() { return /* binding */ nt; },\n/* harmony export */   createInvalidArgumentError: function() { return /* binding */ rt; },\n/* harmony export */   createJwt: function() { return /* binding */ ft; },\n/* harmony export */   createMalformedResponseError: function() { return /* binding */ et; },\n/* harmony export */   createMissingApiKeyError: function() { return /* binding */ Qe; },\n/* harmony export */   createModalNotReadyError: function() { return /* binding */ dr; },\n/* harmony export */   createPromiEvent: function() { return /* binding */ ce; },\n/* harmony export */   createPromise: function() { return /* binding */ Ne; },\n/* harmony export */   createReactNativeEndpointConfigurationWarning: function() { return /* binding */ ot; },\n/* harmony export */   createSDK: function() { return /* binding */ In; },\n/* harmony export */   createSynchronousWeb3MethodWarning: function() { return /* binding */ st; },\n/* harmony export */   createTypedEmitter: function() { return /* binding */ ae; },\n/* harmony export */   createURL: function() { return /* binding */ Ae; },\n/* harmony export */   decodeJSON: function() { return /* binding */ Ve; },\n/* harmony export */   encodeJSON: function() { return /* binding */ ne; },\n/* harmony export */   getPayloadId: function() { return /* binding */ xe; },\n/* harmony export */   isEmpty: function() { return /* binding */ se; },\n/* harmony export */   isJsonRpcErrorCode: function() { return /* binding */ Ye; },\n/* harmony export */   isJsonRpcRequestPayload: function() { return /* binding */ sr; },\n/* harmony export */   isJsonRpcResponsePayload: function() { return /* binding */ ze; },\n/* harmony export */   isMagicPayloadMethod: function() { return /* binding */ or; },\n/* harmony export */   isPromiEvent: function() { return /* binding */ dt; },\n/* harmony export */   storage: function() { return /* binding */ H; },\n/* harmony export */   uuid: function() { return /* binding */ mt; }\n/* harmony export */ });\n/* harmony import */ var _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @magic-sdk/types */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+types@11.6.2/node_modules/@magic-sdk/types/dist/es/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\");\nvar vt = Object.create;\nvar Y = Object.defineProperty, It = Object.defineProperties, Pt = Object.getOwnPropertyDescriptor, xt = Object.getOwnPropertyDescriptors, bt = Object.getOwnPropertyNames, Oe = Object.getOwnPropertySymbols, $t = Object.getPrototypeOf, _e = Object.prototype.hasOwnProperty, Nt = Object.prototype.propertyIsEnumerable;\nvar Ce = (n, e, t)=>e in n ? Y(n, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : n[e] = t, Z = (n, e)=>{\n    for(var t in e || (e = {}))_e.call(e, t) && Ce(n, t, e[t]);\n    if (Oe) for (var t of Oe(e))Nt.call(e, t) && Ce(n, t, e[t]);\n    return n;\n}, De = (n, e)=>It(n, xt(e));\nvar Mt = (n, e)=>()=>(e || n((e = {\n            exports: {}\n        }).exports, e), e.exports), wt = (n, e)=>{\n    for(var t in e)Y(n, t, {\n        get: e[t],\n        enumerable: !0\n    });\n}, At = (n, e, t, r)=>{\n    if (e && typeof e == \"object\" || typeof e == \"function\") for (let o of bt(e))!_e.call(n, o) && o !== t && Y(n, o, {\n        get: ()=>e[o],\n        enumerable: !(r = Pt(e, o)) || r.enumerable\n    });\n    return n;\n};\nvar Lt = (n, e, t)=>(t = n != null ? vt($t(n)) : {}, At(e || !n || !n.__esModule ? Y(t, \"default\", {\n        value: n,\n        enumerable: !0\n    }) : t, n));\n_c = Lt;\nvar x = (n, e, t)=>new Promise((r, o)=>{\n        var s = (c)=>{\n            try {\n                i(t.next(c));\n            } catch (p) {\n                o(p);\n            }\n        }, a = (c)=>{\n            try {\n                i(t.throw(c));\n            } catch (p) {\n                o(p);\n            }\n        }, i = (c)=>c.done ? r(c.value) : Promise.resolve(c.value).then(s, a);\n        i((t = t.apply(n, e)).next());\n    });\nvar lt = Mt((Tr, be)=>{\n    \"use strict\";\n    var Nn = Object.prototype.hasOwnProperty, v = \"~\";\n    function B() {}\n    Object.create && (B.prototype = Object.create(null), new B().__proto__ || (v = !1));\n    function Mn(n, e, t) {\n        this.fn = n, this.context = e, this.once = t || !1;\n    }\n    function ct(n, e, t, r, o) {\n        if (typeof t != \"function\") throw new TypeError(\"The listener must be a function\");\n        var s = new Mn(t, r || n, o), a = v ? v + e : e;\n        return n._events[a] ? n._events[a].fn ? n._events[a] = [\n            n._events[a],\n            s\n        ] : n._events[a].push(s) : (n._events[a] = s, n._eventsCount++), n;\n    }\n    function ie(n, e) {\n        --n._eventsCount === 0 ? n._events = new B : delete n._events[e];\n    }\n    function R() {\n        this._events = new B, this._eventsCount = 0;\n    }\n    R.prototype.eventNames = function() {\n        var e = [], t, r;\n        if (this._eventsCount === 0) return e;\n        for(r in t = this._events)Nn.call(t, r) && e.push(v ? r.slice(1) : r);\n        return Object.getOwnPropertySymbols ? e.concat(Object.getOwnPropertySymbols(t)) : e;\n    };\n    R.prototype.listeners = function(e) {\n        var t = v ? v + e : e, r = this._events[t];\n        if (!r) return [];\n        if (r.fn) return [\n            r.fn\n        ];\n        for(var o = 0, s = r.length, a = new Array(s); o < s; o++)a[o] = r[o].fn;\n        return a;\n    };\n    R.prototype.listenerCount = function(e) {\n        var t = v ? v + e : e, r = this._events[t];\n        return r ? r.fn ? 1 : r.length : 0;\n    };\n    R.prototype.emit = function(e, t, r, o, s, a) {\n        var i = v ? v + e : e;\n        if (!this._events[i]) return !1;\n        var c = this._events[i], p = arguments.length, l, u;\n        if (c.fn) {\n            switch(c.once && this.removeListener(e, c.fn, void 0, !0), p){\n                case 1:\n                    return c.fn.call(c.context), !0;\n                case 2:\n                    return c.fn.call(c.context, t), !0;\n                case 3:\n                    return c.fn.call(c.context, t, r), !0;\n                case 4:\n                    return c.fn.call(c.context, t, r, o), !0;\n                case 5:\n                    return c.fn.call(c.context, t, r, o, s), !0;\n                case 6:\n                    return c.fn.call(c.context, t, r, o, s, a), !0;\n            }\n            for(u = 1, l = new Array(p - 1); u < p; u++)l[u - 1] = arguments[u];\n            c.fn.apply(c.context, l);\n        } else {\n            var P = c.length, A;\n            for(u = 0; u < P; u++)switch(c[u].once && this.removeListener(e, c[u].fn, void 0, !0), p){\n                case 1:\n                    c[u].fn.call(c[u].context);\n                    break;\n                case 2:\n                    c[u].fn.call(c[u].context, t);\n                    break;\n                case 3:\n                    c[u].fn.call(c[u].context, t, r);\n                    break;\n                case 4:\n                    c[u].fn.call(c[u].context, t, r, o);\n                    break;\n                default:\n                    if (!l) for(A = 1, l = new Array(p - 1); A < p; A++)l[A - 1] = arguments[A];\n                    c[u].fn.apply(c[u].context, l);\n            }\n        }\n        return !0;\n    };\n    R.prototype.on = function(e, t, r) {\n        return ct(this, e, t, r, !1);\n    };\n    R.prototype.once = function(e, t, r) {\n        return ct(this, e, t, r, !0);\n    };\n    R.prototype.removeListener = function(e, t, r, o) {\n        var s = v ? v + e : e;\n        if (!this._events[s]) return this;\n        if (!t) return ie(this, s), this;\n        var a = this._events[s];\n        if (a.fn) a.fn === t && (!o || a.once) && (!r || a.context === r) && ie(this, s);\n        else {\n            for(var i = 0, c = [], p = a.length; i < p; i++)(a[i].fn !== t || o && !a[i].once || r && a[i].context !== r) && c.push(a[i]);\n            c.length ? this._events[s] = c.length === 1 ? c[0] : c : ie(this, s);\n        }\n        return this;\n    };\n    R.prototype.removeAllListeners = function(e) {\n        var t;\n        return e ? (t = v ? v + e : e, this._events[t] && ie(this, t)) : (this._events = new B, this._eventsCount = 0), this;\n    };\n    R.prototype.off = R.prototype.removeListener;\n    R.prototype.addListener = R.prototype.on;\n    R.prefixed = v;\n    R.EventEmitter = R;\n    typeof be < \"u\" && (be.exports = R);\n});\nfunction St(n) {\n    let e = {\n        exports: {}\n    };\n    return n(e, e.exports), e.exports;\n}\n_c1 = St;\nvar Ot = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar Pe = {\n    SEMVER_SPEC_VERSION: \"2.0.0\",\n    MAX_LENGTH: 256,\n    MAX_SAFE_INTEGER: Ot,\n    MAX_SAFE_COMPONENT_LENGTH: 16\n}, Ct = typeof process == \"object\" && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? function() {\n    for(var _len = arguments.length, n = new Array(_len), _key = 0; _key < _len; _key++){\n        n[_key] = arguments[_key];\n    }\n    return console.error(\"SEMVER\", ...n);\n} : ()=>{}, m = Ct, W = St(function(n, e) {\n    let { MAX_SAFE_COMPONENT_LENGTH: t } = Pe, r = (e = n.exports = {}).re = [], o = e.src = [], s = e.t = {}, a = 0, i = (c, p, l)=>{\n        let u = a++;\n        m(u, p), s[c] = u, o[u] = p, r[u] = new RegExp(p, l ? \"g\" : void 0);\n    };\n    i(\"NUMERICIDENTIFIER\", \"0|[1-9]\\\\d*\"), i(\"NUMERICIDENTIFIERLOOSE\", \"[0-9]+\"), i(\"NONNUMERICIDENTIFIER\", \"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\"), i(\"MAINVERSION\", \"(\".concat(o[s.NUMERICIDENTIFIER], \")\\\\.(\").concat(o[s.NUMERICIDENTIFIER], \")\\\\.(\").concat(o[s.NUMERICIDENTIFIER], \")\")), i(\"MAINVERSIONLOOSE\", \"(\".concat(o[s.NUMERICIDENTIFIERLOOSE], \")\\\\.(\").concat(o[s.NUMERICIDENTIFIERLOOSE], \")\\\\.(\").concat(o[s.NUMERICIDENTIFIERLOOSE], \")\")), i(\"PRERELEASEIDENTIFIER\", \"(?:\".concat(o[s.NUMERICIDENTIFIER], \"|\").concat(o[s.NONNUMERICIDENTIFIER], \")\")), i(\"PRERELEASEIDENTIFIERLOOSE\", \"(?:\".concat(o[s.NUMERICIDENTIFIERLOOSE], \"|\").concat(o[s.NONNUMERICIDENTIFIER], \")\")), i(\"PRERELEASE\", \"(?:-(\".concat(o[s.PRERELEASEIDENTIFIER], \"(?:\\\\.\").concat(o[s.PRERELEASEIDENTIFIER], \")*))\")), i(\"PRERELEASELOOSE\", \"(?:-?(\".concat(o[s.PRERELEASEIDENTIFIERLOOSE], \"(?:\\\\.\").concat(o[s.PRERELEASEIDENTIFIERLOOSE], \")*))\")), i(\"BUILDIDENTIFIER\", \"[0-9A-Za-z-]+\"), i(\"BUILD\", \"(?:\\\\+(\".concat(o[s.BUILDIDENTIFIER], \"(?:\\\\.\").concat(o[s.BUILDIDENTIFIER], \")*))\")), i(\"FULLPLAIN\", \"v?\".concat(o[s.MAINVERSION]).concat(o[s.PRERELEASE], \"?\").concat(o[s.BUILD], \"?\")), i(\"FULL\", \"^\".concat(o[s.FULLPLAIN], \"$\")), i(\"LOOSEPLAIN\", \"[v=\\\\s]*\".concat(o[s.MAINVERSIONLOOSE]).concat(o[s.PRERELEASELOOSE], \"?\").concat(o[s.BUILD], \"?\")), i(\"LOOSE\", \"^\".concat(o[s.LOOSEPLAIN], \"$\")), i(\"GTLT\", \"((?:<|>)?=?)\"), i(\"XRANGEIDENTIFIERLOOSE\", \"\".concat(o[s.NUMERICIDENTIFIERLOOSE], \"|x|X|\\\\*\")), i(\"XRANGEIDENTIFIER\", \"\".concat(o[s.NUMERICIDENTIFIER], \"|x|X|\\\\*\")), i(\"XRANGEPLAIN\", \"[v=\\\\s]*(\".concat(o[s.XRANGEIDENTIFIER], \")(?:\\\\.(\").concat(o[s.XRANGEIDENTIFIER], \")(?:\\\\.(\").concat(o[s.XRANGEIDENTIFIER], \")(?:\").concat(o[s.PRERELEASE], \")?\").concat(o[s.BUILD], \"?)?)?\")), i(\"XRANGEPLAINLOOSE\", \"[v=\\\\s]*(\".concat(o[s.XRANGEIDENTIFIERLOOSE], \")(?:\\\\.(\").concat(o[s.XRANGEIDENTIFIERLOOSE], \")(?:\\\\.(\").concat(o[s.XRANGEIDENTIFIERLOOSE], \")(?:\").concat(o[s.PRERELEASELOOSE], \")?\").concat(o[s.BUILD], \"?)?)?\")), i(\"XRANGE\", \"^\".concat(o[s.GTLT], \"\\\\s*\").concat(o[s.XRANGEPLAIN], \"$\")), i(\"XRANGELOOSE\", \"^\".concat(o[s.GTLT], \"\\\\s*\").concat(o[s.XRANGEPLAINLOOSE], \"$\")), i(\"COERCE\", \"(^|[^\\\\d])(\\\\d{1,\".concat(t, \"})(?:\\\\.(\\\\d{1,\").concat(t, \"}))?(?:\\\\.(\\\\d{1,\").concat(t, \"}))?(?:$|[^\\\\d])\")), i(\"COERCERTL\", o[s.COERCE], !0), i(\"LONETILDE\", \"(?:~>?)\"), i(\"TILDETRIM\", \"(\\\\s*)\".concat(o[s.LONETILDE], \"\\\\s+\"), !0), e.tildeTrimReplace = \"$1~\", i(\"TILDE\", \"^\".concat(o[s.LONETILDE]).concat(o[s.XRANGEPLAIN], \"$\")), i(\"TILDELOOSE\", \"^\".concat(o[s.LONETILDE]).concat(o[s.XRANGEPLAINLOOSE], \"$\")), i(\"LONECARET\", \"(?:\\\\^)\"), i(\"CARETTRIM\", \"(\\\\s*)\".concat(o[s.LONECARET], \"\\\\s+\"), !0), e.caretTrimReplace = \"$1^\", i(\"CARET\", \"^\".concat(o[s.LONECARET]).concat(o[s.XRANGEPLAIN], \"$\")), i(\"CARETLOOSE\", \"^\".concat(o[s.LONECARET]).concat(o[s.XRANGEPLAINLOOSE], \"$\")), i(\"COMPARATORLOOSE\", \"^\".concat(o[s.GTLT], \"\\\\s*(\").concat(o[s.LOOSEPLAIN], \")$|^$\")), i(\"COMPARATOR\", \"^\".concat(o[s.GTLT], \"\\\\s*(\").concat(o[s.FULLPLAIN], \")$|^$\")), i(\"COMPARATORTRIM\", \"(\\\\s*)\".concat(o[s.GTLT], \"\\\\s*(\").concat(o[s.LOOSEPLAIN], \"|\").concat(o[s.XRANGEPLAIN], \")\"), !0), e.comparatorTrimReplace = \"$1$2$3\", i(\"HYPHENRANGE\", \"^\\\\s*(\".concat(o[s.XRANGEPLAIN], \")\\\\s+-\\\\s+(\").concat(o[s.XRANGEPLAIN], \")\\\\s*$\")), i(\"HYPHENRANGELOOSE\", \"^\\\\s*(\".concat(o[s.XRANGEPLAINLOOSE], \")\\\\s+-\\\\s+(\").concat(o[s.XRANGEPLAINLOOSE], \")\\\\s*$\")), i(\"STAR\", \"(<|>)?=?\\\\s*\\\\*\"), i(\"GTE0\", \"^\\\\s*>=\\\\s*0.0.0\\\\s*$\"), i(\"GTE0PRE\", \"^\\\\s*>=\\\\s*0.0.0-0\\\\s*$\");\n}), ke = /^[0-9]+$/, Xe = (n, e)=>{\n    let t = ke.test(n), r = ke.test(e);\n    return t && r && (n = +n, e = +e), n === e ? 0 : t && !r ? -1 : r && !t ? 1 : n < e ? -1 : 1;\n}, _t = (n, e)=>Xe(e, n), Dt = {\n    compareIdentifiers: Xe,\n    rcompareIdentifiers: _t\n}, { MAX_LENGTH: qe, MAX_SAFE_INTEGER: Q } = Pe, { re: Je, t: Ue } = W, { compareIdentifiers: K } = Dt, E = class {\n    format() {\n        return this.version = \"\".concat(this.major, \".\").concat(this.minor, \".\").concat(this.patch), this.prerelease.length && (this.version += \"-\".concat(this.prerelease.join(\".\"))), this.version;\n    }\n    toString() {\n        return this.version;\n    }\n    compare(e) {\n        if (m(\"SemVer.compare\", this.version, this.options, e), !(e instanceof E)) {\n            if (typeof e == \"string\" && e === this.version) return 0;\n            e = new E(e, this.options);\n        }\n        return e.version === this.version ? 0 : this.compareMain(e) || this.comparePre(e);\n    }\n    compareMain(e) {\n        return e instanceof E || (e = new E(e, this.options)), K(this.major, e.major) || K(this.minor, e.minor) || K(this.patch, e.patch);\n    }\n    comparePre(e) {\n        if (e instanceof E || (e = new E(e, this.options)), this.prerelease.length && !e.prerelease.length) return -1;\n        if (!this.prerelease.length && e.prerelease.length) return 1;\n        if (!this.prerelease.length && !e.prerelease.length) return 0;\n        let t = 0;\n        do {\n            let r = this.prerelease[t], o = e.prerelease[t];\n            if (m(\"prerelease compare\", t, r, o), r === void 0 && o === void 0) return 0;\n            if (o === void 0) return 1;\n            if (r === void 0) return -1;\n            if (r !== o) return K(r, o);\n        }while (++t);\n    }\n    compareBuild(e) {\n        e instanceof E || (e = new E(e, this.options));\n        let t = 0;\n        do {\n            let r = this.build[t], o = e.build[t];\n            if (m(\"prerelease compare\", t, r, o), r === void 0 && o === void 0) return 0;\n            if (o === void 0) return 1;\n            if (r === void 0) return -1;\n            if (r !== o) return K(r, o);\n        }while (++t);\n    }\n    inc(e, t) {\n        switch(e){\n            case \"premajor\":\n                this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc(\"pre\", t);\n                break;\n            case \"preminor\":\n                this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc(\"pre\", t);\n                break;\n            case \"prepatch\":\n                this.prerelease.length = 0, this.inc(\"patch\", t), this.inc(\"pre\", t);\n                break;\n            case \"prerelease\":\n                this.prerelease.length === 0 && this.inc(\"patch\", t), this.inc(\"pre\", t);\n                break;\n            case \"major\":\n                this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];\n                break;\n            case \"minor\":\n                this.patch === 0 && this.prerelease.length !== 0 || this.minor++, this.patch = 0, this.prerelease = [];\n                break;\n            case \"patch\":\n                this.prerelease.length === 0 && this.patch++, this.prerelease = [];\n                break;\n            case \"pre\":\n                if (this.prerelease.length === 0) this.prerelease = [\n                    0\n                ];\n                else {\n                    let r = this.prerelease.length;\n                    for(; --r >= 0;)typeof this.prerelease[r] == \"number\" && (this.prerelease[r]++, r = -2);\n                    r === -1 && this.prerelease.push(0);\n                }\n                t && (this.prerelease[0] === t ? isNaN(this.prerelease[1]) && (this.prerelease = [\n                    t,\n                    0\n                ]) : this.prerelease = [\n                    t,\n                    0\n                ]);\n                break;\n            default:\n                throw new Error(\"invalid increment argument: \".concat(e));\n        }\n        return this.format(), this.raw = this.version, this;\n    }\n    constructor(e, t){\n        if (t && typeof t == \"object\" || (t = {\n            loose: !!t,\n            includePrerelease: !1\n        }), e instanceof E) {\n            if (e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease) return e;\n            e = e.version;\n        } else if (typeof e != \"string\") throw new TypeError(\"Invalid Version: \".concat(e));\n        if (e.length > qe) throw new TypeError(\"version is longer than \".concat(qe, \" characters\"));\n        m(\"SemVer\", e, t), this.options = t, this.loose = !!t.loose, this.includePrerelease = !!t.includePrerelease;\n        let r = e.trim().match(t.loose ? Je[Ue.LOOSE] : Je[Ue.FULL]);\n        if (!r) throw new TypeError(\"Invalid Version: \".concat(e));\n        if (this.raw = e, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > Q || this.major < 0) throw new TypeError(\"Invalid major version\");\n        if (this.minor > Q || this.minor < 0) throw new TypeError(\"Invalid minor version\");\n        if (this.patch > Q || this.patch < 0) throw new TypeError(\"Invalid patch version\");\n        r[4] ? this.prerelease = r[4].split(\".\").map((o)=>{\n            if (/^[0-9]+$/.test(o)) {\n                let s = +o;\n                if (s >= 0 && s < Q) return s;\n            }\n            return o;\n        }) : this.prerelease = [], this.build = r[5] ? r[5].split(\".\") : [], this.format();\n    }\n}, kt = (n, e, t)=>new E(n, t).compare(new E(e, t)), k = kt, qt = (n, e, t)=>k(n, e, t) === 0, Jt = qt, Ut = (n, e, t)=>k(n, e, t) !== 0, Gt = Ut, Ft = (n, e, t)=>k(n, e, t) > 0, Kt = Ft, jt = (n, e, t)=>k(n, e, t) >= 0, Wt = jt, Xt = (n, e, t)=>k(n, e, t) < 0, Bt = Xt, Ht = (n, e, t)=>k(n, e, t) <= 0, Vt = Ht, zt = (n, e, t, r)=>{\n    switch(e){\n        case \"===\":\n            return typeof n == \"object\" && (n = n.version), typeof t == \"object\" && (t = t.version), n === t;\n        case \"!==\":\n            return typeof n == \"object\" && (n = n.version), typeof t == \"object\" && (t = t.version), n !== t;\n        case \"\":\n        case \"=\":\n        case \"==\":\n            return Jt(n, t, r);\n        case \"!=\":\n            return Gt(n, t, r);\n        case \">\":\n            return Kt(n, t, r);\n        case \">=\":\n            return Wt(n, t, r);\n        case \"<\":\n            return Bt(n, t, r);\n        case \"<=\":\n            return Vt(n, t, r);\n        default:\n            throw new TypeError(\"Invalid operator: \".concat(e));\n    }\n}, Ie = zt, j = Symbol(\"SemVer ANY\"), L = class {\n    static get ANY() {\n        return j;\n    }\n    parse(e) {\n        let t = this.options.loose ? Ge[Fe.COMPARATORLOOSE] : Ge[Fe.COMPARATOR], r = e.match(t);\n        if (!r) throw new TypeError(\"Invalid comparator: \".concat(e));\n        this.operator = r[1] !== void 0 ? r[1] : \"\", this.operator === \"=\" && (this.operator = \"\"), r[2] ? this.semver = new E(r[2], this.options.loose) : this.semver = j;\n    }\n    toString() {\n        return this.value;\n    }\n    test(e) {\n        if (m(\"Comparator.test\", e, this.options.loose), this.semver === j || e === j) return !0;\n        if (typeof e == \"string\") try {\n            e = new E(e, this.options);\n        } catch (t) {\n            return !1;\n        }\n        return Ie(e, this.operator, this.semver, this.options);\n    }\n    intersects(e, t) {\n        if (!(e instanceof L)) throw new TypeError(\"a Comparator is required\");\n        if (t && typeof t == \"object\" || (t = {\n            loose: !!t,\n            includePrerelease: !1\n        }), this.operator === \"\") return this.value === \"\" || new $(e.value, t).test(this.value);\n        if (e.operator === \"\") return e.value === \"\" || new $(this.value, t).test(e.semver);\n        let r = !(this.operator !== \">=\" && this.operator !== \">\" || e.operator !== \">=\" && e.operator !== \">\"), o = !(this.operator !== \"<=\" && this.operator !== \"<\" || e.operator !== \"<=\" && e.operator !== \"<\"), s = this.semver.version === e.semver.version, a = !(this.operator !== \">=\" && this.operator !== \"<=\" || e.operator !== \">=\" && e.operator !== \"<=\"), i = Ie(this.semver, \"<\", e.semver, t) && (this.operator === \">=\" || this.operator === \">\") && (e.operator === \"<=\" || e.operator === \"<\"), c = Ie(this.semver, \">\", e.semver, t) && (this.operator === \"<=\" || this.operator === \"<\") && (e.operator === \">=\" || e.operator === \">\");\n        return r || o || s && a || i || c;\n    }\n    constructor(e, t){\n        if (t && typeof t == \"object\" || (t = {\n            loose: !!t,\n            includePrerelease: !1\n        }), e instanceof L) {\n            if (e.loose === !!t.loose) return e;\n            e = e.value;\n        }\n        m(\"comparator\", e, t), this.options = t, this.loose = !!t.loose, this.parse(e), this.semver === j ? this.value = \"\" : this.value = this.operator + this.semver.version, m(\"comp\", this);\n    }\n}, { re: Ge, t: Fe } = W, $ = class {\n    format() {\n        return this.range = this.set.map((e)=>e.join(\" \").trim()).join(\"||\").trim(), this.range;\n    }\n    toString() {\n        return this.range;\n    }\n    parseRange(e) {\n        let { loose: t } = this.options;\n        e = e.trim();\n        let r = t ? g[y.HYPHENRANGELOOSE] : g[y.HYPHENRANGE];\n        e = e.replace(r, pn(this.options.includePrerelease)), m(\"hyphen replace\", e), e = e.replace(g[y.COMPARATORTRIM], Yt), m(\"comparator trim\", e, g[y.COMPARATORTRIM]), e = (e = (e = e.replace(g[y.TILDETRIM], Zt)).replace(g[y.CARETTRIM], Qt)).split(/\\s+/).join(\" \");\n        let o = t ? g[y.COMPARATORLOOSE] : g[y.COMPARATOR];\n        return e.split(\" \").map((s)=>en(s, this.options)).join(\" \").split(/\\s+/).map((s)=>ln(s, this.options)).filter(this.options.loose ? (s)=>!!s.match(o) : ()=>!0).map((s)=>new L(s, this.options));\n    }\n    intersects(e, t) {\n        if (!(e instanceof $)) throw new TypeError(\"a Range is required\");\n        return this.set.some((r)=>Ke(r, t) && e.set.some((o)=>Ke(o, t) && r.every((s)=>o.every((a)=>s.intersects(a, t)))));\n    }\n    test(e) {\n        if (!e) return !1;\n        if (typeof e == \"string\") try {\n            e = new E(e, this.options);\n        } catch (t) {\n            return !1;\n        }\n        for(let t = 0; t < this.set.length; t++)if (un(this.set[t], e, this.options)) return !0;\n        return !1;\n    }\n    constructor(e, t){\n        if (t && typeof t == \"object\" || (t = {\n            loose: !!t,\n            includePrerelease: !1\n        }), e instanceof $) return e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease ? e : new $(e.raw, t);\n        if (e instanceof L) return this.raw = e.value, this.set = [\n            [\n                e\n            ]\n        ], this.format(), this;\n        if (this.options = t, this.loose = !!t.loose, this.includePrerelease = !!t.includePrerelease, this.raw = e, this.set = e.split(/\\s*\\|\\|\\s*/).map((r)=>this.parseRange(r.trim())).filter((r)=>r.length), !this.set.length) throw new TypeError(\"Invalid SemVer Range: \".concat(e));\n        this.format();\n    }\n}, { re: g, t: y, comparatorTrimReplace: Yt, tildeTrimReplace: Zt, caretTrimReplace: Qt } = W, Ke = (n, e)=>{\n    let t = !0, r = n.slice(), o = r.pop();\n    for(; t && r.length;)t = r.every((s)=>o.intersects(s, e)), o = r.pop();\n    return t;\n}, en = (n, e)=>(m(\"comp\", n, e), n = rn(n, e), m(\"caret\", n), n = tn(n, e), m(\"tildes\", n), n = on(n, e), m(\"xrange\", n), n = cn(n, e), m(\"stars\", n), n), T = (n)=>!n || n.toLowerCase() === \"x\" || n === \"*\", tn = (n, e)=>n.trim().split(/\\s+/).map((t)=>nn(t, e)).join(\" \"), nn = (n, e)=>{\n    let t = e.loose ? g[y.TILDELOOSE] : g[y.TILDE];\n    return n.replace(t, (r, o, s, a, i)=>{\n        let c;\n        return m(\"tilde\", n, r, o, s, a, i), T(o) ? c = \"\" : T(s) ? c = \">=\".concat(o, \".0.0 <\").concat(+o + 1, \".0.0-0\") : T(a) ? c = \">=\".concat(o, \".\").concat(s, \".0 <\").concat(o, \".\").concat(+s + 1, \".0-0\") : i ? (m(\"replaceTilde pr\", i), c = \">=\".concat(o, \".\").concat(s, \".\").concat(a, \"-\").concat(i, \" <\").concat(o, \".\").concat(+s + 1, \".0-0\")) : c = \">=\".concat(o, \".\").concat(s, \".\").concat(a, \" <\").concat(o, \".\").concat(+s + 1, \".0-0\"), m(\"tilde return\", c), c;\n    });\n}, rn = (n, e)=>n.trim().split(/\\s+/).map((t)=>sn(t, e)).join(\" \"), sn = (n, e)=>{\n    m(\"caret\", n, e);\n    let t = e.loose ? g[y.CARETLOOSE] : g[y.CARET], r = e.includePrerelease ? \"-0\" : \"\";\n    return n.replace(t, (o, s, a, i, c)=>{\n        let p;\n        return m(\"caret\", n, o, s, a, i, c), T(s) ? p = \"\" : T(a) ? p = \">=\".concat(s, \".0.0\").concat(r, \" <\").concat(+s + 1, \".0.0-0\") : T(i) ? p = s === \"0\" ? \">=\".concat(s, \".\").concat(a, \".0\").concat(r, \" <\").concat(s, \".\").concat(+a + 1, \".0-0\") : \">=\".concat(s, \".\").concat(a, \".0\").concat(r, \" <\").concat(+s + 1, \".0.0-0\") : c ? (m(\"replaceCaret pr\", c), p = s === \"0\" ? a === \"0\" ? \">=\".concat(s, \".\").concat(a, \".\").concat(i, \"-\").concat(c, \" <\").concat(s, \".\").concat(a, \".\").concat(+i + 1, \"-0\") : \">=\".concat(s, \".\").concat(a, \".\").concat(i, \"-\").concat(c, \" <\").concat(s, \".\").concat(+a + 1, \".0-0\") : \">=\".concat(s, \".\").concat(a, \".\").concat(i, \"-\").concat(c, \" <\").concat(+s + 1, \".0.0-0\")) : (m(\"no pr\"), p = s === \"0\" ? a === \"0\" ? \">=\".concat(s, \".\").concat(a, \".\").concat(i).concat(r, \" <\").concat(s, \".\").concat(a, \".\").concat(+i + 1, \"-0\") : \">=\".concat(s, \".\").concat(a, \".\").concat(i).concat(r, \" <\").concat(s, \".\").concat(+a + 1, \".0-0\") : \">=\".concat(s, \".\").concat(a, \".\").concat(i, \" <\").concat(+s + 1, \".0.0-0\")), m(\"caret return\", p), p;\n    });\n}, on = (n, e)=>(m(\"replaceXRanges\", n, e), n.split(/\\s+/).map((t)=>an(t, e)).join(\" \")), an = (n, e)=>{\n    n = n.trim();\n    let t = e.loose ? g[y.XRANGELOOSE] : g[y.XRANGE];\n    return n.replace(t, (r, o, s, a, i, c)=>{\n        m(\"xRange\", n, r, o, s, a, i, c);\n        let p = T(s), l = p || T(a), u = l || T(i), P = u;\n        return o === \"=\" && P && (o = \"\"), c = e.includePrerelease ? \"-0\" : \"\", p ? r = o === \">\" || o === \"<\" ? \"<0.0.0-0\" : \"*\" : o && P ? (l && (a = 0), i = 0, o === \">\" ? (o = \">=\", l ? (s = +s + 1, a = 0, i = 0) : (a = +a + 1, i = 0)) : o === \"<=\" && (o = \"<\", l ? s = +s + 1 : a = +a + 1), o === \"<\" && (c = \"-0\"), r = \"\".concat(o + s, \".\").concat(a, \".\").concat(i).concat(c)) : l ? r = \">=\".concat(s, \".0.0\").concat(c, \" <\").concat(+s + 1, \".0.0-0\") : u && (r = \">=\".concat(s, \".\").concat(a, \".0\").concat(c, \" <\").concat(s, \".\").concat(+a + 1, \".0-0\")), m(\"xRange return\", r), r;\n    });\n}, cn = (n, e)=>(m(\"replaceStars\", n, e), n.trim().replace(g[y.STAR], \"\")), ln = (n, e)=>(m(\"replaceGTE0\", n, e), n.trim().replace(g[e.includePrerelease ? y.GTE0PRE : y.GTE0], \"\")), pn = (n)=>(e, t, r, o, s, a, i, c, p, l, u, P, A)=>\"\".concat(t = T(r) ? \"\" : T(o) ? \">=\".concat(r, \".0.0\").concat(n ? \"-0\" : \"\") : T(s) ? \">=\".concat(r, \".\").concat(o, \".0\").concat(n ? \"-0\" : \"\") : a ? \">=\".concat(t) : \">=\".concat(t).concat(n ? \"-0\" : \"\"), \" \").concat(c = T(p) ? \"\" : T(l) ? \"<\".concat(+p + 1, \".0.0-0\") : T(u) ? \"<\".concat(p, \".\").concat(+l + 1, \".0-0\") : P ? \"<=\".concat(p, \".\").concat(l, \".\").concat(u, \"-\").concat(P) : n ? \"<\".concat(p, \".\").concat(l, \".\").concat(+u + 1, \"-0\") : \"<=\".concat(c)).trim(), un = (n, e, t)=>{\n    for(let r = 0; r < n.length; r++)if (!n[r].test(e)) return !1;\n    if (e.prerelease.length && !t.includePrerelease) {\n        for(let r = 0; r < n.length; r++)if (m(n[r].semver), n[r].semver !== L.ANY && n[r].semver.prerelease.length > 0) {\n            let o = n[r].semver;\n            if (o.major === e.major && o.minor === e.minor && o.patch === e.patch) return !0;\n        }\n        return !1;\n    }\n    return !0;\n}, Be = (n, e, t)=>{\n    try {\n        e = new $(e, t);\n    } catch (r) {\n        return !1;\n    }\n    return e.test(n);\n};\nvar { MAX_LENGTH: dn } = Pe, { re: je, t: We } = W, mn = (n, e)=>{\n    if (e && typeof e == \"object\" || (e = {\n        loose: !!e,\n        includePrerelease: !1\n    }), n instanceof E) return n;\n    if (typeof n != \"string\" || n.length > dn || !(e.loose ? je[We.LOOSE] : je[We.FULL]).test(n)) return null;\n    try {\n        return new E(n, e);\n    } catch (t) {\n        return null;\n    }\n}, hn = mn, { re: ee, t: te } = W, He = (n, e)=>{\n    if (n instanceof E) return n;\n    if (typeof n == \"number\" && (n = String(n)), typeof n != \"string\") return null;\n    let t = null;\n    if ((e = e || {}).rtl) {\n        let r;\n        for(; (r = ee[te.COERCERTL].exec(n)) && (!t || t.index + t[0].length !== n.length);)t && r.index + r[0].length === t.index + t[0].length || (t = r), ee[te.COERCERTL].lastIndex = r.index + r[1].length + r[2].length;\n        ee[te.COERCERTL].lastIndex = -1;\n    } else t = n.match(ee[te.COERCE]);\n    return t === null ? null : hn(\"\".concat(t[2], \".\").concat(t[3] || \"0\", \".\").concat(t[4] || \"0\"), e);\n};\nfunction En(n) {\n    return String.fromCharCode(parseInt(n.slice(1), 16));\n}\n_c2 = En;\nfunction fn(n) {\n    return \"%\".concat(\"00\".concat(n.charCodeAt(0).toString(16)).slice(-2));\n}\nfunction yn(n) {\n    return btoa(encodeURIComponent(n).replace(/%[0-9A-F]{2}/g, En));\n}\nfunction gn(n) {\n    return decodeURIComponent(Array.from(atob(n), fn).join(\"\"));\n}\nfunction ne(n) {\n    return yn(JSON.stringify(n));\n}\nfunction Ve(n) {\n    return JSON.parse(gn(n));\n}\n_c3 = Ve;\n\n\nfunction N(n) {\n    return typeof n == \"undefined\";\n}\n_c4 = N;\nfunction vn(n) {\n    return n === null;\n}\nfunction re(n) {\n    return vn(n) || N(n);\n}\nfunction sr(n) {\n    return re(n) ? !1 : !N(n.jsonrpc) && !N(n.id) && !N(n.method) && !N(n.params);\n}\nfunction ze(n) {\n    return re(n) ? !1 : !N(n.jsonrpc) && !N(n.id) && (!N(n.result) || !N(n.error));\n}\nfunction or(n) {\n    return re(n) ? !1 : typeof n == \"string\" && Object.values(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod).includes(n);\n}\nfunction Ye(n) {\n    return re(n) ? !1 : typeof n == \"number\" && Object.values(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.RPCErrorCode).includes(n);\n}\n_c5 = Ye;\nfunction se(n) {\n    if (!n) return !0;\n    for(let e in n)if (Object.hasOwnProperty.call(n, e)) return !1;\n    return !0;\n}\nvar h = {};\nfunction In(n, e) {\n    return Object.assign(h, e), n;\n}\n_c6 = In;\nvar Ze = {\n    \"magic-sdk\": \"magic-sdk\",\n    \"@magic-sdk/react-native\": \"magic-sdk-rn\",\n    \"@magic-sdk/react-native-bare\": \"magic-sdk-rn-bare\",\n    \"@magic-sdk/react-native-expo\": \"magic-sdk-rn-expo\"\n};\nvar b = class extends Error {\n    constructor(t, r){\n        super(\"Magic SDK Error: [\".concat(t, \"] \").concat(r));\n        this.code = t;\n        this.rawMessage = r;\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, b.prototype);\n    }\n}, M = class extends Error {\n    constructor(t){\n        super();\n        this.__proto__ = Error;\n        let r = Number(t == null ? void 0 : t.code);\n        this.rawMessage = (t == null ? void 0 : t.message) || \"Internal error\", this.code = Ye(r) ? r : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.RPCErrorCode.InternalError, this.message = \"Magic RPC Error: [\".concat(this.code, \"] \").concat(this.rawMessage), this.data = (t == null ? void 0 : t.data) || void 0, Object.setPrototypeOf(this, M.prototype);\n    }\n}, q = class {\n    log() {\n        console.warn(this.message);\n    }\n    constructor(e, t){\n        this.code = e;\n        this.rawMessage = t;\n        this.message = \"Magic SDK Warning: [\".concat(e, \"] \").concat(t);\n    }\n}, J = class extends Error {\n    constructor(t, r, o, s){\n        super(\"Magic Extension Error (\".concat(t.name, \"): [\").concat(r, \"] \").concat(o));\n        this.code = r;\n        this.rawMessage = o;\n        this.data = s;\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, J.prototype);\n    }\n}, X = class {\n    log() {\n        console.warn(this.message);\n    }\n    constructor(e, t, r){\n        this.code = t;\n        this.rawMessage = r;\n        this.message = \"Magic Extension Warning (\".concat(e.name, \"): [\").concat(t, \"] \").concat(r);\n    }\n};\nfunction Qe() {\n    return new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.MissingApiKey, \"Please provide an API key that you acquired from the Magic developer dashboard.\");\n}\n_c7 = Qe;\nfunction dr() {\n    return new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.ModalNotReady, \"Modal is not ready.\");\n}\nfunction et() {\n    return new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.MalformedResponse, \"Response from the Magic iframe is malformed.\");\n}\nfunction tt(n) {\n    return new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.ExtensionNotInitialized, \"Extensions must be initialized with a Magic SDK instance before `Extension.\".concat(n, \"` can be accessed. Do not invoke `Extension.\").concat(n, \"` inside an extension constructor.\"));\n}\nfunction nt(n) {\n    let e = \"Some extensions are incompatible with `\".concat(h.sdkName, \"@\").concat(h.version, \"`:\");\n    return n.filter((t)=>typeof t.compat != \"undefined\" && t.compat !== null).forEach((t)=>{\n        let r = t.compat[h.sdkName];\n        typeof r == \"string\" ? e += \"\\n  - Extension `\".concat(t.name, \"` supports version(s) `\").concat(r, \"`\") : r || (e += \"\\n  - Extension `\".concat(t.name, \"` does not support \").concat(h.platform, \" environments.\"));\n    }), new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.IncompatibleExtensions, e);\n}\nfunction rt(n) {\n    let e = (t)=>{\n        let r = t + 1, o = r % 10, s = r % 100;\n        return o === 1 && s !== 11 ? \"\".concat(r, \"st\") : o === 2 && s !== 12 ? \"\".concat(r, \"nd\") : o === 3 && s !== 13 ? \"\".concat(r, \"rd\") : \"\".concat(r, \"th\");\n    };\n    return new b(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKErrorCode.InvalidArgument, \"Invalid \".concat(e(n.argument), \" argument given to `\").concat(n.procedure, \"`.\\n  Expected: `\").concat(n.expected, \"`\\n  Received: `\").concat(n.received, \"`\"));\n}\nfunction mr() {\n    return new q(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKWarningCode.DuplicateIframe, \"Duplicate iframes found.\");\n}\nfunction st() {\n    return new q(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKWarningCode.SyncWeb3Method, \"Non-async web3 methods are deprecated in web3 > 1.0 and are not supported by the Magic web3 provider. Please use an async method instead.\");\n}\nfunction ot() {\n    return new q(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKWarningCode.ReactNativeEndpointConfiguration, \"CUSTOM DOMAINS ARE NOT SUPPORTED WHEN USING MAGIC SDK WITH REACT NATIVE! The `endpoint` parameter SHOULD NOT be provided. The Magic `<iframe>` is automatically wrapped by a WebView pointed at `\".concat(h.defaultEndpoint, \"`. Changing this default behavior will lead to unexpected results and potentially security-threatening bugs.\"));\n}\nfunction hr(n) {\n    let { method: e, removalVersions: t, useInstead: r } = n, o = t[h.sdkName], s = r ? \" Use `\".concat(r, \"` instead.\") : \"\", a = \"`\".concat(e, \"` will be removed from `\").concat(h.sdkName, \"` in version `\").concat(o, \"`.\").concat(s);\n    return new q(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.SDKWarningCode.DeprecationNotice, a);\n}\n\n\nfunction* xn() {\n    let n = 0;\n    for(;;)n < Number.MAX_SAFE_INTEGER ? yield ++n : n = 0;\n}\nvar bn = xn();\nfunction xe() {\n    return bn.next().value;\n}\nvar it = Symbol(\"Payload pre-processed by Magic SDK\");\nfunction at(n) {\n    return Object.defineProperty(n, it, {\n        value: !0,\n        enumerable: !1\n    }), n;\n}\nfunction $n(n) {\n    return !!n[it];\n}\nfunction _(n) {\n    var e, t, r;\n    return $n(n) || (n.jsonrpc = (e = n.jsonrpc) != null ? e : \"2.0\", n.id = xe(), n.method = (t = n.method) != null ? t : \"noop\", n.params = (r = n.params) != null ? r : [], at(n)), n;\n}\nfunction d(n) {\n    let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    return at({\n        params: e,\n        method: n,\n        jsonrpc: \"2.0\",\n        id: xe()\n    });\n}\nvar S = class {\n    applyError(e) {\n        return this._error = e, this;\n    }\n    applyResult(e) {\n        return this._result = e, this;\n    }\n    get hasError() {\n        return typeof this._error != \"undefined\" && this._error !== null;\n    }\n    get hasResult() {\n        return typeof this._result != \"undefined\";\n    }\n    get payload() {\n        return {\n            jsonrpc: this._jsonrpc,\n            id: this._id,\n            result: this._result,\n            error: this._error\n        };\n    }\n    constructor(e){\n        e instanceof S ? (this._jsonrpc = e.payload.jsonrpc, this._id = e.payload.id, this._result = e.payload.result, this._error = e.payload.error) : ze(e) ? (this._jsonrpc = e.jsonrpc, this._id = e.id, this._result = e.result, this._error = e.error) : (this._jsonrpc = e.jsonrpc, this._id = e.id, this._result = void 0, this._error = void 0);\n    }\n};\nvar pt = Lt(lt()), $e = class extends pt.default {\n};\nfunction ae() {\n    let n = new $e;\n    return {\n        emitter: n,\n        createChainingEmitterMethod: (r, o)=>function() {\n                for(var _len = arguments.length, s = new Array(_len), _key = 0; _key < _len; _key++){\n                    s[_key] = arguments[_key];\n                }\n                return n[r].apply(n, s), o;\n            },\n        createBoundEmitterMethod: (r)=>function() {\n                for(var _len = arguments.length, o = new Array(_len), _key = 0; _key < _len; _key++){\n                    o[_key] = arguments[_key];\n                }\n                return n[r].apply(n, o);\n            }\n    };\n}\nvar ut = Symbol(\"isPromiEvent\");\nfunction dt(n) {\n    return !!n[ut];\n}\nfunction ce(n) {\n    let e = Ne(n), { createBoundEmitterMethod: t, createChainingEmitterMethod: r } = ae(), o = Symbol(\"Promise.then\"), s = Symbol(\"Promise.catch\"), a = Symbol(\"Promise.finally\"), i = (l, u)=>function() {\n            for(var _len = arguments.length, P = new Array(_len), _key = 0; _key < _len; _key++){\n                P[_key] = arguments[_key];\n            }\n            let A = u[l].apply(u, P);\n            return c(A);\n        }, c = (l)=>Object.assign(l, {\n            [ut]: !0,\n            [o]: l[o] || l.then,\n            [s]: l[s] || l.catch,\n            [a]: l[a] || l.finally,\n            then: i(o, l),\n            catch: i(s, l),\n            finally: i(a, l),\n            on: r(\"on\", l),\n            once: r(\"once\", l),\n            addListener: r(\"addListener\", l),\n            off: r(\"off\", l),\n            removeListener: r(\"removeListener\", l),\n            removeAllListeners: r(\"removeAllListeners\", l),\n            emit: t(\"emit\"),\n            eventNames: t(\"eventNames\"),\n            listeners: t(\"listeners\"),\n            listenerCount: t(\"listenerCount\")\n        }), p = c(e.then((l)=>(p.emit(\"done\", l), p.emit(\"settled\"), l), (l)=>{\n        throw p.emit(\"error\", l), p.emit(\"settled\"), l;\n    }));\n    return p;\n}\nfunction Ne(n) {\n    return new Promise((e, t)=>{\n        let r = n(e, t);\n        Promise.resolve(r).catch(t);\n    });\n}\n_c8 = Ne;\nvar I = class {\n    get overlay() {\n        return this.sdk.overlay;\n    }\n    request(e) {\n        let t = this.overlay.post(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, _(e)), r = ce((s, a)=>{\n            t.then((i)=>{\n                if (o(), i.hasError) a(new M(i.payload.error));\n                else if (i.hasResult) s(i.payload.result);\n                else throw et();\n            }).catch((i)=>{\n                o(), a(i);\n            });\n        }), o = this.overlay.on(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicIncomingWindowMessage.MAGIC_HANDLE_EVENT, (s)=>{\n            var i;\n            let { response: a } = s.data;\n            if (a.id === e.id && ((i = a.result) == null ? void 0 : i.event)) {\n                let { event: c, params: p = [] } = a.result;\n                r.emit(c, ...p);\n            }\n        });\n        return r;\n    }\n    createIntermediaryEvent(e, t) {\n        return (o)=>{\n            let s = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.IntermediaryEvent, [\n                {\n                    payloadId: t,\n                    eventType: e,\n                    args: o\n                }\n            ]);\n            this.request(s);\n        };\n    }\n    constructor(e){\n        this.sdk = e;\n    }\n};\nvar le = class extends I {\n    loginWithMagicLink(e) {\n        let { email: t, showUI: r = !0, redirectURI: o } = e, s = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithMagicLinkTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithMagicLink, [\n            {\n                email: t,\n                showUI: r,\n                redirectURI: o\n            }\n        ]);\n        return this.request(s);\n    }\n    loginWithSMS(e) {\n        let { phoneNumber: t } = e, r = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithSmsTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithSms, [\n            {\n                phoneNumber: t,\n                showUI: !0\n            }\n        ]);\n        return this.request(r);\n    }\n    loginWithEmailOTP(e) {\n        let { email: t, showUI: r } = e, o = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithEmailOTPTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithEmailOTP, [\n            {\n                email: t,\n                showUI: r\n            }\n        ]);\n        if (!r) {\n            let s = this.request(o);\n            return s && s.on(\"otp-input-sent\", (a)=>{\n                this.createIntermediaryEvent(\"verify-email-otp\", o.id)(a);\n            }), s;\n        }\n        return this.request(o);\n    }\n    loginWithCredential(e) {\n        let t = e != null ? e : \"\";\n        if (!e && h.platform === \"web\") {\n            t = window.location.search;\n            let o = window.location.origin + window.location.pathname;\n            window.history.replaceState(null, \"\", o);\n        }\n        let r = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithCredentialTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LoginWithCredential, [\n            t\n        ]);\n        return this.request(r);\n    }\n};\n\nvar H = {};\nwt(H, {\n    clear: ()=>Sn,\n    getItem: ()=>D,\n    iterate: ()=>Dn,\n    key: ()=>Cn,\n    keys: ()=>_n,\n    length: ()=>On,\n    removeItem: ()=>ue,\n    setItem: ()=>G\n});\nvar pe;\nfunction C(n) {\n    var _this = this;\n    return function() {\n        for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n            e[_key] = arguments[_key];\n        }\n        return x(_this, null, function*() {\n            return pe || (pe = yield h.configureStorage()), yield pe.ready(), pe[n](...e);\n        });\n    };\n}\n_c9 = C;\nvar D = C(\"getItem\"), G = C(\"setItem\"), ue = C(\"removeItem\"), Sn = C(\"clear\"), On = C(\"length\"), Cn = C(\"key\"), _n = C(\"keys\"), Dn = C(\"iterate\");\nfunction mt() {\n    let n = window.crypto.getRandomValues(new Uint8Array(16));\n    n[6] = n[6] & 15 | 64, n[8] = n[8] & 191 | 128;\n    let e = \"\";\n    return e += n[0].toString(16), e += n[1].toString(16), e += n[2].toString(16), e += n[3].toString(16), e += \"-\", e += n[4].toString(16), e += n[5].toString(16), e += \"-\", e += n[6].toString(16), e += n[7].toString(16), e += \"-\", e += n[8].toString(16), e += n[9].toString(16), e += \"-\", e += n[10].toString(16), e += n[11].toString(16), e += n[12].toString(16), e += n[13].toString(16), e += n[14].toString(16), e += n[15].toString(16), e;\n}\nvar Me = \"STORE_KEY_PRIVATE_KEY\", de = \"STORE_KEY_PUBLIC_JWK\", we = \"ECDSA\", Et = \"P-256\", kn = {\n    name: we,\n    namedCurve: Et\n}, qn = {\n    name: we,\n    namedCurve: Et\n};\nfunction me() {\n    ue(de), ue(Me);\n}\nfunction ft() {\n    return x(this, null, function*() {\n        let n = yield Jn();\n        if (!n) {\n            console.info(\"unable to create public key or webcrypto is unsupported\");\n            return;\n        }\n        let { subtle: e } = window.crypto, t = yield D(Me);\n        if (!t || !e) {\n            console.info(\"unable to find private key or webcrypto unsupported\");\n            return;\n        }\n        let r = {\n            iat: Math.floor(new Date().getTime() / 1e3),\n            jti: mt()\n        }, o = {\n            typ: \"dpop+jwt\",\n            alg: \"ES256\",\n            jwk: n\n        }, s = {\n            protected: ht(JSON.stringify(o)),\n            claims: ht(JSON.stringify(r))\n        }, a = Fn(\"\".concat(s.protected, \".\").concat(s.claims)), i = {\n            name: we,\n            hash: {\n                name: \"SHA-256\"\n            }\n        }, c = jn(new Uint8Array((yield e.sign(i, t, a))));\n        return \"\".concat(s.protected, \".\").concat(s.claims, \".\").concat(c);\n    });\n}\nfunction Jn() {\n    return x(this, null, function*() {\n        if (!Gn()) {\n            console.info(\"webcrypto is not supported\");\n            return;\n        }\n        return (yield D(de)) || (yield Un()), D(de);\n    });\n}\n_c10 = Jn;\nfunction Un() {\n    return x(this, null, function*() {\n        let n = null, { subtle: e } = window.crypto, t = yield e.generateKey(kn, !0, [\n            \"sign\"\n        ]), r = yield e.exportKey(\"jwk\", t.privateKey);\n        n = yield e.exportKey(\"jwk\", t.publicKey);\n        let o = yield e.importKey(\"jwk\", r, qn, !1, [\n            \"sign\"\n        ]);\n        yield G(Me, o), yield G(de, n);\n    });\n}\n_c11 = Un;\nfunction Gn() {\n    let n =  true && !!window.crypto, e = n && !!window.crypto.subtle;\n    return n && e;\n}\n_c12 = Gn;\nfunction ht(n) {\n    return yt(Kn(n));\n}\nfunction Fn(n) {\n    return new TextEncoder().encode(n);\n}\n_c13 = Fn;\nfunction yt(n) {\n    return btoa(n).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+/g, \"\");\n}\nfunction Kn(n) {\n    return encodeURIComponent(n).replace(/%([0-9A-F]{2})/g, (t, r)=>String.fromCharCode(parseInt(r, 16)));\n}\n_c14 = Kn;\nfunction jn(n) {\n    let e = \"\";\n    return n.forEach((t)=>{\n        e += String.fromCharCode(t);\n    }), yt(e);\n}\nvar he = class extends I {\n    getIdToken(e) {\n        let t = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GetIdTokenTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GetIdToken, [\n            e\n        ]);\n        return this.request(t);\n    }\n    generateIdToken(e) {\n        let t = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GenerateIdTokenTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GenerateIdToken, [\n            e\n        ]);\n        return this.request(t);\n    }\n    getMetadata() {\n        let e = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GetMetadataTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GetMetadata);\n        return this.request(e);\n    }\n    updateEmail(e) {\n        let { email: t, showUI: r = !0 } = e, o = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UpdateEmailTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UpdateEmail, [\n            {\n                email: t,\n                showUI: r\n            }\n        ]);\n        return this.request(o);\n    }\n    isLoggedIn() {\n        let e = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.IsLoggedInTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.IsLoggedIn);\n        return this.request(e);\n    }\n    logout() {\n        me();\n        let e = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.LogoutTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.Logout);\n        return this.request(e);\n    }\n    showSettings() {\n        let e = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UserSettingsTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UserSettings);\n        return this.request(e);\n    }\n    updatePhoneNumber() {\n        let e = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UpdatePhoneNumberTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.UpdatePhoneNumber);\n        return this.request(e);\n    }\n    recoverAccount(e) {\n        let t = d(this.sdk.testMode ? _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.RecoverAccountTestMode : _magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.RecoverAccount, [\n            e\n        ]);\n        return this.request(t);\n    }\n};\n\nvar Ee = class extends I {\n    connectWithUI() {\n        let e = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.RequestAccounts);\n        return this.request(e);\n    }\n    showUI() {\n        let e = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.ShowUI);\n        return this.request(e);\n    }\n    getInfo() {\n        let e = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.GetInfo);\n        return this.request(e);\n    }\n    requestUserInfoWithUI(e) {\n        let t = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.RequestUserInfoWithUI, e ? [\n            e\n        ] : []);\n        return this.request(t);\n    }\n    disconnect() {\n        me();\n        let e = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.Disconnect);\n        return this.request(e);\n    }\n};\n\nvar { createBoundEmitterMethod: fe, createChainingEmitterMethod: F } = ae(), ye = class extends I {\n    sendAsync(t, r) {\n        if (!r) throw rt({\n            procedure: \"Magic.rpcProvider.sendAsync\",\n            argument: 1,\n            expected: \"function\",\n            received: r === null ? \"null\" : typeof r\n        });\n        if (Array.isArray(t)) this.overlay.post(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, t.map((o)=>{\n            let s = _(o);\n            return this.prefixPayloadMethodForTestMode(s), s;\n        })).then((o)=>{\n            r(null, o.map((s)=>De(Z({}, s.payload), {\n                    error: s.hasError ? new M(s.payload.error) : null\n                })));\n        });\n        else {\n            let o = _(t);\n            this.prefixPayloadMethodForTestMode(o), this.overlay.post(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, o).then((s)=>{\n                r(s.hasError ? new M(s.payload.error) : null, s.payload);\n            });\n        }\n    }\n    send(t, r) {\n        if (typeof t == \"string\") {\n            let s = d(t, Array.isArray(r) ? r : []);\n            return this.request(s);\n        }\n        if (Array.isArray(t) || !!r) {\n            this.sendAsync(t, r);\n            return;\n        }\n        let o = st();\n        return o.log(), new S(t).applyError({\n            code: -32603,\n            message: o.rawMessage\n        }).payload;\n    }\n    enable() {\n        let t = d(\"eth_accounts\");\n        return this.request(t);\n    }\n    request(t) {\n        return this.prefixPayloadMethodForTestMode(t), super.request(t);\n    }\n    prefixPayloadMethodForTestMode(t) {\n        let r = \"testMode/eth/\";\n        this.sdk.testMode && (t.method = \"\".concat(r).concat(t.method));\n    }\n    constructor(){\n        super(...arguments);\n        this.isMagic = !0;\n        this.on = F(\"on\", this);\n        this.once = F(\"once\", this);\n        this.addListener = F(\"addListener\", this);\n        this.off = F(\"off\", this);\n        this.removeListener = F(\"removeListener\", this);\n        this.removeAllListeners = F(\"removeAllListeners\", this);\n        this.emit = fe(\"emit\");\n        this.eventNames = fe(\"eventNames\");\n        this.listeners = fe(\"listeners\");\n        this.listenerCount = fe(\"listenerCount\");\n    }\n};\nfunction Ae(n, e) {\n    return e ? new URL(n, e) : new URL(n);\n}\n_c15 = Ae;\nvar Rt = [\n    \"request\",\n    \"overlay\",\n    \"sdk\"\n];\nfunction Wn(n) {\n    let e = Object.getPrototypeOf(n), t = [\n        e\n    ];\n    for(; e !== I.prototype;)e = Object.getPrototypeOf(e), t.push(e);\n    return t;\n}\n_c16 = Wn;\nvar ge = class extends I {\n    init(t) {\n        this.__is_initialized__ || (Rt.forEach((r)=>{\n            if (this.__sdk_access_field_descriptors__.has(r)) {\n                let { descriptor: o, isPrototypeField: s } = this.__sdk_access_field_descriptors__.get(r);\n                s ? delete this[r] : Object.defineProperty(this, r, o);\n            }\n        }), this.sdk = t, this.__is_initialized__ = !0);\n    }\n    createDeprecationWarning(t) {\n        let { method: r, removalVersion: o, useInstead: s } = t, a = s ? \" Use `\".concat(s, \"` instead.\") : \"\", i = \"`\".concat(r, \"` will be removed from this Extension in version `\").concat(o, \"`.\").concat(a);\n        return new X(this, \"DEPRECATION_NOTICE\", i);\n    }\n    createWarning(t, r) {\n        return new X(this, t, r);\n    }\n    createError(t, r, o) {\n        return new J(this, t, r, o);\n    }\n    constructor(){\n        super(void 0);\n        this.__sdk_access_field_descriptors__ = new Map;\n        this.__is_initialized__ = !1;\n        this.utils = {\n            createPromiEvent: ce,\n            isPromiEvent: dt,\n            encodeJSON: ne,\n            decodeJSON: Ve,\n            createJsonRpcRequestPayload: d,\n            standardizeJsonRpcRequestPayload: _,\n            storage: H\n        };\n        let t = [\n            this,\n            ...Wn(this)\n        ];\n        Rt.forEach((r)=>{\n            let o = t.map((c)=>Object.getOwnPropertyDescriptor(c, r)), s = o.findIndex((c)=>!!c), a = s > 0, i = o[s];\n            i && (this.__sdk_access_field_descriptors__.set(r, {\n                descriptor: i,\n                isPrototypeField: a\n            }), Object.defineProperty(this, r, {\n                configurable: !0,\n                get: ()=>{\n                    throw tt(r);\n                }\n            }));\n        });\n    }\n}, Le = class extends ge {\n}, w = class extends ge {\n};\nw.Internal = Le, w.Anonymous = \"anonymous extension\";\n\nvar Re = class extends I {\n    purchase(e) {\n        let t = d(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicPayloadMethod.NFTPurchase, [\n            e\n        ]);\n        return this.request(t);\n    }\n};\nfunction Tt(n) {\n    return n.compat && n.compat[h.sdkName] != null ? typeof n.compat[h.sdkName] == \"string\" ? Be(He(h.version), n.compat[h.sdkName]) : !!n.compat[h.sdkName] : !0;\n}\n_c17 = Tt;\nfunction Bn(n) {\n    var o;\n    let e = (o = n == null ? void 0 : n.extensions) != null ? o : [], t = {}, r = [];\n    if (Array.isArray(e) ? e.forEach((s)=>{\n        Tt(s) ? (s.init(this), (s.name || s.name !== w.Anonymous) && (this[s.name] = s), s instanceof w.Internal && (se(s.config) || (t[s.name] = s.config))) : r.push(s);\n    }) : Object.keys(e).forEach((s)=>{\n        if (Tt(e[s])) {\n            e[s].init(this);\n            let a = e[s];\n            this[s] = a, a instanceof w.Internal && (se(a.config) || (t[e[s].name] = a.config));\n        } else r.push(e[s]);\n    }), r.length) throw nt(r);\n    return t;\n}\n_c18 = Bn;\nvar z = class {\n    get overlay() {\n        if (!z.__overlays__.has(this.parameters)) {\n            let e = new h.ViewController(this.endpoint, this.parameters);\n            e.init(), z.__overlays__.set(this.parameters, e);\n        }\n        return z.__overlays__.get(this.parameters);\n    }\n    preload() {\n        return x(this, null, function*() {\n            yield this.overlay.ready;\n        });\n    }\n    constructor(e, t){\n        this.apiKey = e;\n        var a;\n        if (!e) throw Qe();\n        h.platform === \"react-native\" && (t == null ? void 0 : t.endpoint) && ot().log();\n        let { defaultEndpoint: r, version: o } = h;\n        this.testMode = !!(t != null && t.testMode), this.endpoint = Ae((a = t == null ? void 0 : t.endpoint) != null ? a : r).origin, this.auth = new le(this), this.user = new he(this), this.wallet = new Ee(this), this.nft = new Re(this), this.rpcProvider = new ye(this);\n        let s = Bn.call(this, t);\n        this.parameters = ne(Z({\n            API_KEY: this.apiKey,\n            DOMAIN_ORIGIN: window.location ? window.location.origin : \"\",\n            ETH_NETWORK: t == null ? void 0 : t.network,\n            host: Ae(this.endpoint).host,\n            sdk: Ze[h.sdkName],\n            version: o,\n            ext: se(s) ? void 0 : s,\n            locale: (t == null ? void 0 : t.locale) || \"en_US\"\n        }, h.bundleId ? {\n            bundleId: h.bundleId\n        } : {}));\n    }\n}, Te = z;\nTe.__overlays__ = new Map;\n\nfunction Hn(n, e) {\n    return e && Array.isArray(n) ? n.find((t)=>t.id === e) : n;\n}\n_c19 = Hn;\nfunction Vn(n, e) {\n    var o;\n    let t = (o = e.data.response) == null ? void 0 : o.id, r = Hn(n, t);\n    if (t && r) {\n        let s = new S(r).applyResult(e.data.response.result).applyError(e.data.response.error);\n        return {\n            id: t,\n            response: s\n        };\n    }\n    return {};\n}\n_c20 = Vn;\nfunction zn(n, e) {\n    return x(this, null, function*() {\n        let t = yield D(\"rt\"), r;\n        if (h.platform === \"web\") try {\n            r = yield ft();\n        } catch (o) {\n            console.error(\"webcrypto error\", o);\n        }\n        return r ? t ? {\n            msgType: n,\n            payload: e,\n            jwt: r,\n            rt: t\n        } : {\n            msgType: n,\n            payload: e,\n            jwt: r\n        } : {\n            msgType: n,\n            payload: e\n        };\n    });\n}\nfunction Yn(n) {\n    return x(this, null, function*() {\n        !n.data.rt || (yield G(\"rt\", n.data.rt));\n    });\n}\n_c21 = Yn;\nvar Se = class {\n    post(e, t) {\n        return x(this, null, function*() {\n            return Ne((r)=>x(this, null, function*() {\n                    yield this.ready;\n                    let o = [], s = Array.isArray(t) ? t.map((p)=>p.id) : [], a = yield zn(\"\".concat(e, \"-\").concat(this.parameters), t);\n                    yield this._post(a);\n                    let i = (p)=>(l)=>{\n                            let { id: u, response: P } = Vn(t, l);\n                            Yn(l), u && P && Array.isArray(t) && s.includes(u) ? (o.push(P), o.length === t.length && (p(), r(o))) : u && P && !Array.isArray(t) && u === t.id && (p(), r(P));\n                        }, c = this.on(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicIncomingWindowMessage.MAGIC_HANDLE_RESPONSE, i(()=>c()));\n                }));\n        });\n    }\n    on(e, t) {\n        let r = t.bind(window), o = (s)=>{\n            s.data.msgType === \"\".concat(e, \"-\").concat(this.parameters) && r(s);\n        };\n        return this.messageHandlers.add(o), ()=>this.messageHandlers.delete(o);\n    }\n    waitForReady() {\n        return new Promise((e)=>{\n            this.on(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicIncomingWindowMessage.MAGIC_OVERLAY_READY, ()=>e());\n        });\n    }\n    listen() {\n        this.on(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicIncomingWindowMessage.MAGIC_HIDE_OVERLAY, ()=>{\n            this.hideOverlay();\n        }), this.on(_magic_sdk_types__WEBPACK_IMPORTED_MODULE_0__.MagicIncomingWindowMessage.MAGIC_SHOW_OVERLAY, ()=>{\n            this.showOverlay();\n        });\n    }\n    constructor(e, t){\n        this.endpoint = e;\n        this.parameters = t;\n        this.messageHandlers = new Set;\n        this.ready = this.waitForReady(), this.listen();\n    }\n};\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"Lt\");\n$RefreshReg$(_c1, \"St\");\n$RefreshReg$(_c2, \"En\");\n$RefreshReg$(_c3, \"Ve\");\n$RefreshReg$(_c4, \"N\");\n$RefreshReg$(_c5, \"Ye\");\n$RefreshReg$(_c6, \"In\");\n$RefreshReg$(_c7, \"Qe\");\n$RefreshReg$(_c8, \"Ne\");\n$RefreshReg$(_c9, \"C\");\n$RefreshReg$(_c10, \"Jn\");\n$RefreshReg$(_c11, \"Un\");\n$RefreshReg$(_c12, \"Gn\");\n$RefreshReg$(_c13, \"Fn\");\n$RefreshReg$(_c14, \"Kn\");\n$RefreshReg$(_c15, \"Ae\");\n$RefreshReg$(_c16, \"Wn\");\n$RefreshReg$(_c17, \"Tt\");\n$RefreshReg$(_c18, \"Bn\");\n$RefreshReg$(_c19, \"Hn\");\n$RefreshReg$(_c20, \"Vn\");\n$RefreshReg$(_c21, \"Yn\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+provider@13.6.2_localforage@1.10.0/node_modules/@magic-sdk/provider/dist/es/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+types@11.6.2/node_modules/@magic-sdk/types/dist/es/index.mjs":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@magic-sdk+types@11.6.2/node_modules/@magic-sdk/types/dist/es/index.mjs ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthChainType: function() { return /* binding */ c; },\n/* harmony export */   MagicIncomingWindowMessage: function() { return /* binding */ u; },\n/* harmony export */   MagicOutgoingWindowMessage: function() { return /* binding */ o; },\n/* harmony export */   MagicPayloadMethod: function() { return /* binding */ p; },\n/* harmony export */   RPCErrorCode: function() { return /* binding */ m; },\n/* harmony export */   SDKErrorCode: function() { return /* binding */ r; },\n/* harmony export */   SDKWarningCode: function() { return /* binding */ a; }\n/* harmony export */ });\nvar r = ((n)=>(n.MissingApiKey = \"MISSING_API_KEY\", n.ModalNotReady = \"MODAL_NOT_READY\", n.MalformedResponse = \"MALFORMED_RESPONSE\", n.InvalidArgument = \"INVALID_ARGUMENT\", n.ExtensionNotInitialized = \"EXTENSION_NOT_INITIALIZED\", n.IncompatibleExtensions = \"INCOMPATIBLE_EXTENSIONS\", n))(r || {}), a = ((s)=>(s.SyncWeb3Method = \"SYNC_WEB3_METHOD\", s.DuplicateIframe = \"DUPLICATE_IFRAME\", s.ReactNativeEndpointConfiguration = \"REACT_NATIVE_ENDPOINT_CONFIGURATION\", s.DeprecationNotice = \"DEPRECATION_NOTICE\", s))(a || {}), m = ((t)=>(t[t.ParseError = -32700] = \"ParseError\", t[t.InvalidRequest = -32600] = \"InvalidRequest\", t[t.MethodNotFound = -32601] = \"MethodNotFound\", t[t.InvalidParams = -32602] = \"InvalidParams\", t[t.InternalError = -32603] = \"InternalError\", t[t.MagicLinkFailedVerification = -1e4] = \"MagicLinkFailedVerification\", t[t.MagicLinkExpired = -10001] = \"MagicLinkExpired\", t[t.MagicLinkRateLimited = -10002] = \"MagicLinkRateLimited\", t[t.MagicLinkInvalidRedirectURL = -10006] = \"MagicLinkInvalidRedirectURL\", t[t.UserAlreadyLoggedIn = -10003] = \"UserAlreadyLoggedIn\", t[t.UpdateEmailFailed = -10004] = \"UpdateEmailFailed\", t[t.UserRequestEditEmail = -10005] = \"UserRequestEditEmail\", t[t.InactiveRecipient = -10010] = \"InactiveRecipient\", t[t.AccessDeniedToUser = -10011] = \"AccessDeniedToUser\", t))(m || {});\nvar p = ((e)=>(e.LoginWithSms = \"magic_auth_login_with_sms\", e.LoginWithEmailOTP = \"magic_auth_login_with_email_otp\", e.LoginWithMagicLink = \"magic_auth_login_with_magic_link\", e.LoginWithCredential = \"magic_auth_login_with_credential\", e.GetIdToken = \"magic_auth_get_id_token\", e.GenerateIdToken = \"magic_auth_generate_id_token\", e.GetMetadata = \"magic_auth_get_metadata\", e.IsLoggedIn = \"magic_auth_is_logged_in\", e.Logout = \"magic_auth_logout\", e.UpdateEmail = \"magic_auth_update_email\", e.UserSettings = \"magic_auth_settings\", e.UserSettingsTestMode = \"magic_auth_settings_testing_mode\", e.LoginWithSmsTestMode = \"magic_auth_login_with_sms_testing_mode\", e.LoginWithEmailOTPTestMode = \"magic_auth_login_with_email_otp_testing_mode\", e.LoginWithMagicLinkTestMode = \"magic_login_with_magic_link_testing_mode\", e.LoginWithCredentialTestMode = \"magic_auth_login_with_credential_testing_mode\", e.GetIdTokenTestMode = \"magic_auth_get_id_token_testing_mode\", e.GenerateIdTokenTestMode = \"magic_auth_generate_id_token_testing_mode\", e.GetMetadataTestMode = \"magic_auth_get_metadata_testing_mode\", e.IsLoggedInTestMode = \"magic_auth_is_logged_in_testing_mode\", e.LogoutTestMode = \"magic_auth_logout_testing_mode\", e.UpdateEmailTestMode = \"magic_auth_update_email_testing_mode\", e.IntermediaryEvent = \"magic_intermediary_event\", e.RequestAccounts = \"eth_requestAccounts\", e.GetInfo = \"mc_get_wallet_info\", e.ShowUI = \"mc_wallet\", e.NFTPurchase = \"magic_nft_purchase\", e.RequestUserInfoWithUI = \"mc_request_user_info\", e.Disconnect = \"mc_disconnect\", e.UpdatePhoneNumber = \"magic_auth_update_phone_number\", e.UpdatePhoneNumberTestMode = \"magic_auth_update_phone_number_testing_mode\", e.RecoverAccount = \"magic_auth_recover_account\", e.RecoverAccountTestMode = \"magic_auth_recover_account_testing_mode\", e))(p || {});\nvar u = ((i)=>(i.MAGIC_HANDLE_RESPONSE = \"MAGIC_HANDLE_RESPONSE\", i.MAGIC_OVERLAY_READY = \"MAGIC_OVERLAY_READY\", i.MAGIC_SHOW_OVERLAY = \"MAGIC_SHOW_OVERLAY\", i.MAGIC_HIDE_OVERLAY = \"MAGIC_HIDE_OVERLAY\", i.MAGIC_HANDLE_EVENT = \"MAGIC_HANDLE_EVENT\", i))(u || {}), o = ((_)=>(_.MAGIC_HANDLE_REQUEST = \"MAGIC_HANDLE_REQUEST\", _))(o || {});\nvar c = ((_)=>(_.Harmony = \"HARMONY\", _))(c || {});\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+types@11.6.2/node_modules/@magic-sdk/types/dist/es/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthChainType: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.EthChainType; },\n/* harmony export */   Extension: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.Extension; },\n/* harmony export */   ExtensionError: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.ExtensionError; },\n/* harmony export */   ExtensionWarning: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.ExtensionWarning; },\n/* harmony export */   Magic: function() { return /* binding */ bt; },\n/* harmony export */   MagicIncomingWindowMessage: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.MagicIncomingWindowMessage; },\n/* harmony export */   MagicOutgoingWindowMessage: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.MagicOutgoingWindowMessage; },\n/* harmony export */   MagicPayloadMethod: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.MagicPayloadMethod; },\n/* harmony export */   RPCError: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.RPCError; },\n/* harmony export */   RPCErrorCode: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.RPCErrorCode; },\n/* harmony export */   SDKError: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.SDKError; },\n/* harmony export */   SDKErrorCode: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.SDKErrorCode; },\n/* harmony export */   SDKWarning: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.SDKWarning; },\n/* harmony export */   SDKWarningCode: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.SDKWarningCode; },\n/* harmony export */   isPromiEvent: function() { return /* reexport safe */ _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__.isPromiEvent; }\n/* harmony export */ });\n/* harmony import */ var _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @magic-sdk/provider */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+provider@13.6.2_localforage@1.10.0/node_modules/@magic-sdk/provider/dist/es/index.mjs\");\n/* harmony import */ var _magic_sdk_commons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @magic-sdk/commons */ \"(app-pages-browser)/./node_modules/.pnpm/@magic-sdk+commons@9.6.2_@magic-sdk+provider@13.6.2_@magic-sdk+types@11.6.2/node_modules/@magic-sdk/commons/dist/es/index.mjs\");\nvar Zr = Object.create;\nvar Je = Object.defineProperty;\nvar qr = Object.getOwnPropertyDescriptor;\nvar kr = Object.getOwnPropertyNames;\nvar et = Object.getPrototypeOf, rt = Object.prototype.hasOwnProperty;\nvar ve = ((b)=>typeof require != \"undefined\" ? require : typeof Proxy != \"undefined\" ? new Proxy(b, {\n        get: (A, R)=>(typeof require != \"undefined\" ? require : A)[R]\n    }) : b)(function(b) {\n    if (typeof require != \"undefined\") return require.apply(this, arguments);\n    throw new Error('Dynamic require of \"' + b + '\" is not supported');\n});\nvar $e = (b, A)=>()=>(A || b((A = {\n            exports: {}\n        }).exports, A), A.exports);\nvar tt = (b, A, R, L)=>{\n    if (A && typeof A == \"object\" || typeof A == \"function\") for (let D of kr(A))!rt.call(b, D) && D !== R && Je(b, D, {\n        get: ()=>A[D],\n        enumerable: !(L = qr(A, D)) || L.enumerable\n    });\n    return b;\n};\nvar Ze = (b, A, R)=>(R = b != null ? Zr(et(b)) : {}, tt(A || !b || !b.__esModule ? Je(R, \"default\", {\n        value: b,\n        enumerable: !0\n    }) : R, b));\n_c = Ze;\nvar se = (b, A, R)=>new Promise((L, D)=>{\n        var X = (I)=>{\n            try {\n                Y(R.next(I));\n            } catch (M) {\n                D(M);\n            }\n        }, P = (I)=>{\n            try {\n                Y(R.throw(I));\n            } catch (M) {\n                D(M);\n            }\n        }, Y = (I)=>I.done ? L(I.value) : Promise.resolve(I.value).then(X, P);\n        Y((R = R.apply(b, A)).next());\n    });\nvar ke = $e((qe, Ne)=>{\n    (function(b) {\n        if (typeof qe == \"object\" && typeof Ne < \"u\") Ne.exports = b();\n        else if (typeof define == \"function\" && define.amd) define([], b);\n        else {\n            var A;\n             true ? A = window : 0, A.localforage = b();\n        }\n    })(function() {\n        var b, A, R;\n        return (function L(D, X, P) {\n            function Y(H, $) {\n                if (!X[H]) {\n                    if (!D[H]) {\n                        var m = typeof ve == \"function\" && ve;\n                        if (!$ && m) return m(H, !0);\n                        if (I) return I(H, !0);\n                        var _ = new Error(\"Cannot find module '\" + H + \"'\");\n                        throw _.code = \"MODULE_NOT_FOUND\", _;\n                    }\n                    var B = X[H] = {\n                        exports: {}\n                    };\n                    D[H][0].call(B.exports, function(z) {\n                        var Z = D[H][1][z];\n                        return Y(Z || z);\n                    }, B, B.exports, L, D, X, P);\n                }\n                return X[H].exports;\n            }\n            for(var I = typeof ve == \"function\" && ve, M = 0; M < P.length; M++)Y(P[M]);\n            return Y;\n        })({\n            1: [\n                function(L, D, X) {\n                    (function(P) {\n                        \"use strict\";\n                        var Y = P.MutationObserver || P.WebKitMutationObserver, I;\n                        if (Y) {\n                            var M = 0, H = new Y(z), $ = P.document.createTextNode(\"\");\n                            H.observe($, {\n                                characterData: !0\n                            }), I = function() {\n                                $.data = M = ++M % 2;\n                            };\n                        } else if (!P.setImmediate && typeof P.MessageChannel < \"u\") {\n                            var m = new P.MessageChannel;\n                            m.port1.onmessage = z, I = function() {\n                                m.port2.postMessage(0);\n                            };\n                        } else \"document\" in P && \"onreadystatechange\" in P.document.createElement(\"script\") ? I = function() {\n                            var F = P.document.createElement(\"script\");\n                            F.onreadystatechange = function() {\n                                z(), F.onreadystatechange = null, F.parentNode.removeChild(F), F = null;\n                            }, P.document.documentElement.appendChild(F);\n                        } : I = function() {\n                            setTimeout(z, 0);\n                        };\n                        var _, B = [];\n                        function z() {\n                            _ = !0;\n                            for(var F, k, U = B.length; U;){\n                                for(k = B, B = [], F = -1; ++F < U;)k[F]();\n                                U = B.length;\n                            }\n                            _ = !1;\n                        }\n                        D.exports = Z;\n                        function Z(F) {\n                            B.push(F) === 1 && !_ && I();\n                        }\n                    }).call(this, typeof global < \"u\" ? global : typeof self < \"u\" ? self :  true ? window : 0);\n                },\n                {}\n            ],\n            2: [\n                function(L, D, X) {\n                    \"use strict\";\n                    var P = L(1);\n                    function Y() {}\n                    var I = {}, M = [\n                        \"REJECTED\"\n                    ], H = [\n                        \"FULFILLED\"\n                    ], $ = [\n                        \"PENDING\"\n                    ];\n                    D.exports = m;\n                    function m(h) {\n                        if (typeof h != \"function\") throw new TypeError(\"resolver must be a function\");\n                        this.state = $, this.queue = [], this.outcome = void 0, h !== Y && Z(this, h);\n                    }\n                    m.prototype.catch = function(h) {\n                        return this.then(null, h);\n                    }, m.prototype.then = function(h, N) {\n                        if (typeof h != \"function\" && this.state === H || typeof N != \"function\" && this.state === M) return this;\n                        var E = new this.constructor(Y);\n                        if (this.state !== $) {\n                            var O = this.state === H ? h : N;\n                            B(E, O, this.outcome);\n                        } else this.queue.push(new _(E, h, N));\n                        return E;\n                    };\n                    function _(h, N, E) {\n                        this.promise = h, typeof N == \"function\" && (this.onFulfilled = N, this.callFulfilled = this.otherCallFulfilled), typeof E == \"function\" && (this.onRejected = E, this.callRejected = this.otherCallRejected);\n                    }\n                    _.prototype.callFulfilled = function(h) {\n                        I.resolve(this.promise, h);\n                    }, _.prototype.otherCallFulfilled = function(h) {\n                        B(this.promise, this.onFulfilled, h);\n                    }, _.prototype.callRejected = function(h) {\n                        I.reject(this.promise, h);\n                    }, _.prototype.otherCallRejected = function(h) {\n                        B(this.promise, this.onRejected, h);\n                    };\n                    function B(h, N, E) {\n                        P(function() {\n                            var O;\n                            try {\n                                O = N(E);\n                            } catch (V) {\n                                return I.reject(h, V);\n                            }\n                            O === h ? I.reject(h, new TypeError(\"Cannot resolve promise with itself\")) : I.resolve(h, O);\n                        });\n                    }\n                    I.resolve = function(h, N) {\n                        var E = F(z, N);\n                        if (E.status === \"error\") return I.reject(h, E.value);\n                        var O = E.value;\n                        if (O) Z(h, O);\n                        else {\n                            h.state = H, h.outcome = N;\n                            for(var V = -1, j = h.queue.length; ++V < j;)h.queue[V].callFulfilled(N);\n                        }\n                        return h;\n                    }, I.reject = function(h, N) {\n                        h.state = M, h.outcome = N;\n                        for(var E = -1, O = h.queue.length; ++E < O;)h.queue[E].callRejected(N);\n                        return h;\n                    };\n                    function z(h) {\n                        var N = h && h.then;\n                        if (h && (typeof h == \"object\" || typeof h == \"function\") && typeof N == \"function\") return function() {\n                            N.apply(h, arguments);\n                        };\n                    }\n                    function Z(h, N) {\n                        var E = !1;\n                        function O(J) {\n                            E || (E = !0, I.reject(h, J));\n                        }\n                        function V(J) {\n                            E || (E = !0, I.resolve(h, J));\n                        }\n                        function j() {\n                            N(V, O);\n                        }\n                        var Q = F(j);\n                        Q.status === \"error\" && O(Q.value);\n                    }\n                    function F(h, N) {\n                        var E = {};\n                        try {\n                            E.value = h(N), E.status = \"success\";\n                        } catch (O) {\n                            E.status = \"error\", E.value = O;\n                        }\n                        return E;\n                    }\n                    m.resolve = k;\n                    function k(h) {\n                        return h instanceof this ? h : I.resolve(new this(Y), h);\n                    }\n                    m.reject = U;\n                    function U(h) {\n                        var N = new this(Y);\n                        return I.reject(N, h);\n                    }\n                    m.all = ae;\n                    function ae(h) {\n                        var N = this;\n                        if (Object.prototype.toString.call(h) !== \"[object Array]\") return this.reject(new TypeError(\"must be an array\"));\n                        var E = h.length, O = !1;\n                        if (!E) return this.resolve([]);\n                        for(var V = new Array(E), j = 0, Q = -1, J = new this(Y); ++Q < E;)ee(h[Q], Q);\n                        return J;\n                        function ee(oe, a) {\n                            N.resolve(oe).then(s, function(v) {\n                                O || (O = !0, I.reject(J, v));\n                            });\n                            function s(v) {\n                                V[a] = v, ++j === E && !O && (O = !0, I.resolve(J, V));\n                            }\n                        }\n                    }\n                    m.race = re;\n                    function re(h) {\n                        var N = this;\n                        if (Object.prototype.toString.call(h) !== \"[object Array]\") return this.reject(new TypeError(\"must be an array\"));\n                        var E = h.length, O = !1;\n                        if (!E) return this.resolve([]);\n                        for(var V = -1, j = new this(Y); ++V < E;)Q(h[V]);\n                        return j;\n                        function Q(J) {\n                            N.resolve(J).then(function(ee) {\n                                O || (O = !0, I.resolve(j, ee));\n                            }, function(ee) {\n                                O || (O = !0, I.reject(j, ee));\n                            });\n                        }\n                    }\n                },\n                {\n                    1: 1\n                }\n            ],\n            3: [\n                function(L, D, X) {\n                    (function(P) {\n                        \"use strict\";\n                        typeof P.Promise != \"function\" && (P.Promise = L(2));\n                    }).call(this, typeof global < \"u\" ? global : typeof self < \"u\" ? self :  true ? window : 0);\n                },\n                {\n                    2: 2\n                }\n            ],\n            4: [\n                function(L, D, X) {\n                    \"use strict\";\n                    var P = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(e) {\n                        return typeof e;\n                    } : function(e) {\n                        return e && typeof Symbol == \"function\" && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                    };\n                    function Y(e, t) {\n                        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n                    }\n                    function I() {\n                        try {\n                            if (typeof indexedDB < \"u\") return indexedDB;\n                            if (typeof webkitIndexedDB < \"u\") return webkitIndexedDB;\n                            if (typeof mozIndexedDB < \"u\") return mozIndexedDB;\n                            if (typeof OIndexedDB < \"u\") return OIndexedDB;\n                            if (typeof msIndexedDB < \"u\") return msIndexedDB;\n                        } catch (e) {\n                            return;\n                        }\n                    }\n                    var M = I();\n                    function H() {\n                        try {\n                            if (!M || !M.open) return !1;\n                            var e = typeof openDatabase < \"u\" && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform), t = typeof fetch == \"function\" && fetch.toString().indexOf(\"[native code\") !== -1;\n                            return (!e || t) && typeof indexedDB < \"u\" && typeof IDBKeyRange < \"u\";\n                        } catch (e) {\n                            return !1;\n                        }\n                    }\n                    function $(e, t) {\n                        e = e || [], t = t || {};\n                        try {\n                            return new Blob(e, t);\n                        } catch (n) {\n                            if (n.name !== \"TypeError\") throw n;\n                            for(var r = typeof BlobBuilder < \"u\" ? BlobBuilder : typeof MSBlobBuilder < \"u\" ? MSBlobBuilder : typeof MozBlobBuilder < \"u\" ? MozBlobBuilder : WebKitBlobBuilder, o = new r, i = 0; i < e.length; i += 1)o.append(e[i]);\n                            return o.getBlob(t.type);\n                        }\n                    }\n                    typeof Promise > \"u\" && L(3);\n                    var m = Promise;\n                    function _(e, t) {\n                        t && e.then(function(r) {\n                            t(null, r);\n                        }, function(r) {\n                            t(r);\n                        });\n                    }\n                    function B(e, t, r) {\n                        typeof t == \"function\" && e.then(t), typeof r == \"function\" && e.catch(r);\n                    }\n                    function z(e) {\n                        return typeof e != \"string\" && (console.warn(e + \" used as a key, but it is not a string.\"), e = String(e)), e;\n                    }\n                    function Z() {\n                        if (arguments.length && typeof arguments[arguments.length - 1] == \"function\") return arguments[arguments.length - 1];\n                    }\n                    var F = \"local-forage-detect-blob-support\", k = void 0, U = {}, ae = Object.prototype.toString, re = \"readonly\", h = \"readwrite\";\n                    function N(e) {\n                        for(var t = e.length, r = new ArrayBuffer(t), o = new Uint8Array(r), i = 0; i < t; i++)o[i] = e.charCodeAt(i);\n                        return r;\n                    }\n                    function E(e) {\n                        return new m(function(t) {\n                            var r = e.transaction(F, h), o = $([\n                                \"\"\n                            ]);\n                            r.objectStore(F).put(o, \"key\"), r.onabort = function(i) {\n                                i.preventDefault(), i.stopPropagation(), t(!1);\n                            }, r.oncomplete = function() {\n                                var i = navigator.userAgent.match(/Chrome\\/(\\d+)/), n = navigator.userAgent.match(/Edge\\//);\n                                t(n || !i || parseInt(i[1], 10) >= 43);\n                            };\n                        }).catch(function() {\n                            return !1;\n                        });\n                    }\n                    function O(e) {\n                        return typeof k == \"boolean\" ? m.resolve(k) : E(e).then(function(t) {\n                            return k = t, k;\n                        });\n                    }\n                    function V(e) {\n                        var t = U[e.name], r = {};\n                        r.promise = new m(function(o, i) {\n                            r.resolve = o, r.reject = i;\n                        }), t.deferredOperations.push(r), t.dbReady ? t.dbReady = t.dbReady.then(function() {\n                            return r.promise;\n                        }) : t.dbReady = r.promise;\n                    }\n                    function j(e) {\n                        var t = U[e.name], r = t.deferredOperations.pop();\n                        if (r) return r.resolve(), r.promise;\n                    }\n                    function Q(e, t) {\n                        var r = U[e.name], o = r.deferredOperations.pop();\n                        if (o) return o.reject(t), o.promise;\n                    }\n                    function J(e, t) {\n                        return new m(function(r, o) {\n                            if (U[e.name] = U[e.name] || G(), e.db) if (t) V(e), e.db.close();\n                            else return r(e.db);\n                            var i = [\n                                e.name\n                            ];\n                            t && i.push(e.version);\n                            var n = M.open.apply(M, i);\n                            t && (n.onupgradeneeded = function(f) {\n                                var u = n.result;\n                                try {\n                                    u.createObjectStore(e.storeName), f.oldVersion <= 1 && u.createObjectStore(F);\n                                } catch (c) {\n                                    if (c.name === \"ConstraintError\") console.warn('The database \"' + e.name + '\" has been upgraded from version ' + f.oldVersion + \" to version \" + f.newVersion + ', but the storage \"' + e.storeName + '\" already exists.');\n                                    else throw c;\n                                }\n                            }), n.onerror = function(f) {\n                                f.preventDefault(), o(n.error);\n                            }, n.onsuccess = function() {\n                                var f = n.result;\n                                f.onversionchange = function(u) {\n                                    u.target.close();\n                                }, r(f), j(e);\n                            };\n                        });\n                    }\n                    function ee(e) {\n                        return J(e, !1);\n                    }\n                    function oe(e) {\n                        return J(e, !0);\n                    }\n                    function a(e, t) {\n                        if (!e.db) return !0;\n                        var r = !e.db.objectStoreNames.contains(e.storeName), o = e.version < e.db.version, i = e.version > e.db.version;\n                        if (o && (e.version !== t && console.warn('The database \"' + e.name + \"\\\" can't be downgraded from version \" + e.db.version + \" to version \" + e.version + \".\"), e.version = e.db.version), i || r) {\n                            if (r) {\n                                var n = e.db.version + 1;\n                                n > e.version && (e.version = n);\n                            }\n                            return !0;\n                        }\n                        return !1;\n                    }\n                    function s(e) {\n                        return new m(function(t, r) {\n                            var o = new FileReader;\n                            o.onerror = r, o.onloadend = function(i) {\n                                var n = btoa(i.target.result || \"\");\n                                t({\n                                    __local_forage_encoded_blob: !0,\n                                    data: n,\n                                    type: e.type\n                                });\n                            }, o.readAsBinaryString(e);\n                        });\n                    }\n                    function v(e) {\n                        var t = N(atob(e.data));\n                        return $([\n                            t\n                        ], {\n                            type: e.type\n                        });\n                    }\n                    function p(e) {\n                        return e && e.__local_forage_encoded_blob;\n                    }\n                    function g(e) {\n                        var t = this, r = t._initReady().then(function() {\n                            var o = U[t._dbInfo.name];\n                            if (o && o.dbReady) return o.dbReady;\n                        });\n                        return B(r, e, e), r;\n                    }\n                    function w(e) {\n                        V(e);\n                        for(var t = U[e.name], r = t.forages, o = 0; o < r.length; o++){\n                            var i = r[o];\n                            i._dbInfo.db && (i._dbInfo.db.close(), i._dbInfo.db = null);\n                        }\n                        return e.db = null, ee(e).then(function(n) {\n                            return e.db = n, a(e) ? oe(e) : n;\n                        }).then(function(n) {\n                            e.db = t.db = n;\n                            for(var f = 0; f < r.length; f++)r[f]._dbInfo.db = n;\n                        }).catch(function(n) {\n                            throw Q(e, n), n;\n                        });\n                    }\n                    function T(e, t, r, o) {\n                        o === void 0 && (o = 1);\n                        try {\n                            var i = e.db.transaction(e.storeName, t);\n                            r(null, i);\n                        } catch (n) {\n                            if (o > 0 && (!e.db || n.name === \"InvalidStateError\" || n.name === \"NotFoundError\")) return m.resolve().then(function() {\n                                if (!e.db || n.name === \"NotFoundError\" && !e.db.objectStoreNames.contains(e.storeName) && e.version <= e.db.version) return e.db && (e.version = e.db.version + 1), oe(e);\n                            }).then(function() {\n                                return w(e).then(function() {\n                                    T(e, t, r, o - 1);\n                                });\n                            }).catch(r);\n                            r(n);\n                        }\n                    }\n                    function G() {\n                        return {\n                            forages: [],\n                            db: null,\n                            dbReady: null,\n                            deferredOperations: []\n                        };\n                    }\n                    function fe(e) {\n                        var t = this, r = {\n                            db: null\n                        };\n                        if (e) for(var o in e)r[o] = e[o];\n                        var i = U[r.name];\n                        i || (i = G(), U[r.name] = i), i.forages.push(t), t._initReady || (t._initReady = t.ready, t.ready = g);\n                        var n = [];\n                        function f() {\n                            return m.resolve();\n                        }\n                        for(var u = 0; u < i.forages.length; u++){\n                            var c = i.forages[u];\n                            c !== t && n.push(c._initReady().catch(f));\n                        }\n                        var l = i.forages.slice(0);\n                        return m.all(n).then(function() {\n                            return r.db = i.db, ee(r);\n                        }).then(function(d) {\n                            return r.db = d, a(r, t._defaultConfig.version) ? oe(r) : d;\n                        }).then(function(d) {\n                            r.db = i.db = d, t._dbInfo = r;\n                            for(var y = 0; y < l.length; y++){\n                                var S = l[y];\n                                S !== t && (S._dbInfo.db = r.db, S._dbInfo.version = r.version);\n                            }\n                        });\n                    }\n                    function ie(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                T(r._dbInfo, re, function(f, u) {\n                                    if (f) return n(f);\n                                    try {\n                                        var c = u.objectStore(r._dbInfo.storeName), l = c.get(e);\n                                        l.onsuccess = function() {\n                                            var d = l.result;\n                                            d === void 0 && (d = null), p(d) && (d = v(d)), i(d);\n                                        }, l.onerror = function() {\n                                            n(l.error);\n                                        };\n                                    } catch (d) {\n                                        n(d);\n                                    }\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function ce(e, t) {\n                        var r = this, o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                T(r._dbInfo, re, function(f, u) {\n                                    if (f) return n(f);\n                                    try {\n                                        var c = u.objectStore(r._dbInfo.storeName), l = c.openCursor(), d = 1;\n                                        l.onsuccess = function() {\n                                            var y = l.result;\n                                            if (y) {\n                                                var S = y.value;\n                                                p(S) && (S = v(S));\n                                                var x = e(S, y.key, d++);\n                                                x !== void 0 ? i(x) : y.continue();\n                                            } else i();\n                                        }, l.onerror = function() {\n                                            n(l.error);\n                                        };\n                                    } catch (y) {\n                                        n(y);\n                                    }\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function nr(e, t, r) {\n                        var o = this;\n                        e = z(e);\n                        var i = new m(function(n, f) {\n                            var u;\n                            o.ready().then(function() {\n                                return u = o._dbInfo, ae.call(t) === \"[object Blob]\" ? O(u.db).then(function(c) {\n                                    return c ? t : s(t);\n                                }) : t;\n                            }).then(function(c) {\n                                T(o._dbInfo, h, function(l, d) {\n                                    if (l) return f(l);\n                                    try {\n                                        var y = d.objectStore(o._dbInfo.storeName);\n                                        c === null && (c = void 0);\n                                        var S = y.put(c, e);\n                                        d.oncomplete = function() {\n                                            c === void 0 && (c = null), n(c);\n                                        }, d.onabort = d.onerror = function() {\n                                            var x = S.error ? S.error : S.transaction.error;\n                                            f(x);\n                                        };\n                                    } catch (x) {\n                                        f(x);\n                                    }\n                                });\n                            }).catch(f);\n                        });\n                        return _(i, r), i;\n                    }\n                    function or(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                T(r._dbInfo, h, function(f, u) {\n                                    if (f) return n(f);\n                                    try {\n                                        var c = u.objectStore(r._dbInfo.storeName), l = c.delete(e);\n                                        u.oncomplete = function() {\n                                            i();\n                                        }, u.onerror = function() {\n                                            n(l.error);\n                                        }, u.onabort = function() {\n                                            var d = l.error ? l.error : l.transaction.error;\n                                            n(d);\n                                        };\n                                    } catch (d) {\n                                        n(d);\n                                    }\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function ir(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                T(t._dbInfo, h, function(n, f) {\n                                    if (n) return i(n);\n                                    try {\n                                        var u = f.objectStore(t._dbInfo.storeName), c = u.clear();\n                                        f.oncomplete = function() {\n                                            o();\n                                        }, f.onabort = f.onerror = function() {\n                                            var l = c.error ? c.error : c.transaction.error;\n                                            i(l);\n                                        };\n                                    } catch (l) {\n                                        i(l);\n                                    }\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function ar(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                T(t._dbInfo, re, function(n, f) {\n                                    if (n) return i(n);\n                                    try {\n                                        var u = f.objectStore(t._dbInfo.storeName), c = u.count();\n                                        c.onsuccess = function() {\n                                            o(c.result);\n                                        }, c.onerror = function() {\n                                            i(c.error);\n                                        };\n                                    } catch (l) {\n                                        i(l);\n                                    }\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function fr(e, t) {\n                        var r = this, o = new m(function(i, n) {\n                            if (e < 0) {\n                                i(null);\n                                return;\n                            }\n                            r.ready().then(function() {\n                                T(r._dbInfo, re, function(f, u) {\n                                    if (f) return n(f);\n                                    try {\n                                        var c = u.objectStore(r._dbInfo.storeName), l = !1, d = c.openKeyCursor();\n                                        d.onsuccess = function() {\n                                            var y = d.result;\n                                            if (!y) {\n                                                i(null);\n                                                return;\n                                            }\n                                            e === 0 || l ? i(y.key) : (l = !0, y.advance(e));\n                                        }, d.onerror = function() {\n                                            n(d.error);\n                                        };\n                                    } catch (y) {\n                                        n(y);\n                                    }\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function ur(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                T(t._dbInfo, re, function(n, f) {\n                                    if (n) return i(n);\n                                    try {\n                                        var u = f.objectStore(t._dbInfo.storeName), c = u.openKeyCursor(), l = [];\n                                        c.onsuccess = function() {\n                                            var d = c.result;\n                                            if (!d) {\n                                                o(l);\n                                                return;\n                                            }\n                                            l.push(d.key), d.continue();\n                                        }, c.onerror = function() {\n                                            i(c.error);\n                                        };\n                                    } catch (d) {\n                                        i(d);\n                                    }\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function sr(e, t) {\n                        t = Z.apply(this, arguments);\n                        var r = this.config();\n                        e = typeof e != \"function\" && e || {}, e.name || (e.name = e.name || r.name, e.storeName = e.storeName || r.storeName);\n                        var o = this, i;\n                        if (!e.name) i = m.reject(\"Invalid arguments\");\n                        else {\n                            var n = e.name === r.name && o._dbInfo.db, f = n ? m.resolve(o._dbInfo.db) : ee(e).then(function(u) {\n                                var c = U[e.name], l = c.forages;\n                                c.db = u;\n                                for(var d = 0; d < l.length; d++)l[d]._dbInfo.db = u;\n                                return u;\n                            });\n                            e.storeName ? i = f.then(function(u) {\n                                if (!!u.objectStoreNames.contains(e.storeName)) {\n                                    var c = u.version + 1;\n                                    V(e);\n                                    var l = U[e.name], d = l.forages;\n                                    u.close();\n                                    for(var y = 0; y < d.length; y++){\n                                        var S = d[y];\n                                        S._dbInfo.db = null, S._dbInfo.version = c;\n                                    }\n                                    var x = new m(function(C, K) {\n                                        var W = M.open(e.name, c);\n                                        W.onerror = function(q) {\n                                            var de = W.result;\n                                            de.close(), K(q);\n                                        }, W.onupgradeneeded = function() {\n                                            var q = W.result;\n                                            q.deleteObjectStore(e.storeName);\n                                        }, W.onsuccess = function() {\n                                            var q = W.result;\n                                            q.close(), C(q);\n                                        };\n                                    });\n                                    return x.then(function(C) {\n                                        l.db = C;\n                                        for(var K = 0; K < d.length; K++){\n                                            var W = d[K];\n                                            W._dbInfo.db = C, j(W._dbInfo);\n                                        }\n                                    }).catch(function(C) {\n                                        throw (Q(e, C) || m.resolve()).catch(function() {}), C;\n                                    });\n                                }\n                            }) : i = f.then(function(u) {\n                                V(e);\n                                var c = U[e.name], l = c.forages;\n                                u.close();\n                                for(var d = 0; d < l.length; d++){\n                                    var y = l[d];\n                                    y._dbInfo.db = null;\n                                }\n                                var S = new m(function(x, C) {\n                                    var K = M.deleteDatabase(e.name);\n                                    K.onerror = function() {\n                                        var W = K.result;\n                                        W && W.close(), C(K.error);\n                                    }, K.onblocked = function() {\n                                        console.warn('dropInstance blocked for database \"' + e.name + '\" until all open connections are closed');\n                                    }, K.onsuccess = function() {\n                                        var W = K.result;\n                                        W && W.close(), x(W);\n                                    };\n                                });\n                                return S.then(function(x) {\n                                    c.db = x;\n                                    for(var C = 0; C < l.length; C++){\n                                        var K = l[C];\n                                        j(K._dbInfo);\n                                    }\n                                }).catch(function(x) {\n                                    throw (Q(e, x) || m.resolve()).catch(function() {}), x;\n                                });\n                            });\n                        }\n                        return _(i, t), i;\n                    }\n                    var cr = {\n                        _driver: \"asyncStorage\",\n                        _initStorage: fe,\n                        _support: H(),\n                        iterate: ce,\n                        getItem: ie,\n                        setItem: nr,\n                        removeItem: or,\n                        clear: ir,\n                        length: ar,\n                        key: fr,\n                        keys: ur,\n                        dropInstance: sr\n                    };\n                    function lr() {\n                        return typeof openDatabase == \"function\";\n                    }\n                    var te = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", dr = \"~~local_forage_type~\", Be = /^~~local_forage_type~([^~]+)~/, he = \"__lfsc__:\", be = he.length, _e = \"arbf\", we = \"blob\", xe = \"si08\", Oe = \"ui08\", Ce = \"uic8\", Le = \"si16\", Pe = \"si32\", Me = \"ur16\", Fe = \"ui32\", Ue = \"fl32\", Ye = \"fl64\", ze = be + _e.length, We = Object.prototype.toString;\n                    function Ke(e) {\n                        var t = e.length * .75, r = e.length, o, i = 0, n, f, u, c;\n                        e[e.length - 1] === \"=\" && (t--, e[e.length - 2] === \"=\" && t--);\n                        var l = new ArrayBuffer(t), d = new Uint8Array(l);\n                        for(o = 0; o < r; o += 4)n = te.indexOf(e[o]), f = te.indexOf(e[o + 1]), u = te.indexOf(e[o + 2]), c = te.indexOf(e[o + 3]), d[i++] = n << 2 | f >> 4, d[i++] = (f & 15) << 4 | u >> 2, d[i++] = (u & 3) << 6 | c & 63;\n                        return l;\n                    }\n                    function Ee(e) {\n                        var t = new Uint8Array(e), r = \"\", o;\n                        for(o = 0; o < t.length; o += 3)r += te[t[o] >> 2], r += te[(t[o] & 3) << 4 | t[o + 1] >> 4], r += te[(t[o + 1] & 15) << 2 | t[o + 2] >> 6], r += te[t[o + 2] & 63];\n                        return t.length % 3 === 2 ? r = r.substring(0, r.length - 1) + \"=\" : t.length % 3 === 1 && (r = r.substring(0, r.length - 2) + \"==\"), r;\n                    }\n                    function vr(e, t) {\n                        var r = \"\";\n                        if (e && (r = We.call(e)), e && (r === \"[object ArrayBuffer]\" || e.buffer && We.call(e.buffer) === \"[object ArrayBuffer]\")) {\n                            var o, i = he;\n                            e instanceof ArrayBuffer ? (o = e, i += _e) : (o = e.buffer, r === \"[object Int8Array]\" ? i += xe : r === \"[object Uint8Array]\" ? i += Oe : r === \"[object Uint8ClampedArray]\" ? i += Ce : r === \"[object Int16Array]\" ? i += Le : r === \"[object Uint16Array]\" ? i += Me : r === \"[object Int32Array]\" ? i += Pe : r === \"[object Uint32Array]\" ? i += Fe : r === \"[object Float32Array]\" ? i += Ue : r === \"[object Float64Array]\" ? i += Ye : t(new Error(\"Failed to get type for BinaryArray\"))), t(i + Ee(o));\n                        } else if (r === \"[object Blob]\") {\n                            var n = new FileReader;\n                            n.onload = function() {\n                                var f = dr + e.type + \"~\" + Ee(this.result);\n                                t(he + we + f);\n                            }, n.readAsArrayBuffer(e);\n                        } else try {\n                            t(JSON.stringify(e));\n                        } catch (f) {\n                            console.error(\"Couldn't convert value into a JSON string: \", e), t(null, f);\n                        }\n                    }\n                    function hr(e) {\n                        if (e.substring(0, be) !== he) return JSON.parse(e);\n                        var t = e.substring(ze), r = e.substring(be, ze), o;\n                        if (r === we && Be.test(t)) {\n                            var i = t.match(Be);\n                            o = i[1], t = t.substring(i[0].length);\n                        }\n                        var n = Ke(t);\n                        switch(r){\n                            case _e:\n                                return n;\n                            case we:\n                                return $([\n                                    n\n                                ], {\n                                    type: o\n                                });\n                            case xe:\n                                return new Int8Array(n);\n                            case Oe:\n                                return new Uint8Array(n);\n                            case Ce:\n                                return new Uint8ClampedArray(n);\n                            case Le:\n                                return new Int16Array(n);\n                            case Me:\n                                return new Uint16Array(n);\n                            case Pe:\n                                return new Int32Array(n);\n                            case Fe:\n                                return new Uint32Array(n);\n                            case Ue:\n                                return new Float32Array(n);\n                            case Ye:\n                                return new Float64Array(n);\n                            default:\n                                throw new Error(\"Unkown type: \" + r);\n                        }\n                    }\n                    var Ie = {\n                        serialize: vr,\n                        deserialize: hr,\n                        stringToBuffer: Ke,\n                        bufferToString: Ee\n                    };\n                    function He(e, t, r, o) {\n                        e.executeSql(\"CREATE TABLE IF NOT EXISTS \" + t.storeName + \" (id INTEGER PRIMARY KEY, key unique, value)\", [], r, o);\n                    }\n                    function mr(e) {\n                        var t = this, r = {\n                            db: null\n                        };\n                        if (e) for(var o in e)r[o] = typeof e[o] != \"string\" ? e[o].toString() : e[o];\n                        var i = new m(function(n, f) {\n                            try {\n                                r.db = openDatabase(r.name, String(r.version), r.description, r.size);\n                            } catch (u) {\n                                return f(u);\n                            }\n                            r.db.transaction(function(u) {\n                                He(u, r, function() {\n                                    t._dbInfo = r, n();\n                                }, function(c, l) {\n                                    f(l);\n                                });\n                            }, f);\n                        });\n                        return r.serializer = Ie, i;\n                    }\n                    function ne(e, t, r, o, i, n) {\n                        e.executeSql(r, o, i, function(f, u) {\n                            u.code === u.SYNTAX_ERR ? f.executeSql(\"SELECT name FROM sqlite_master WHERE type='table' AND name = ?\", [\n                                t.storeName\n                            ], function(c, l) {\n                                l.rows.length ? n(c, u) : He(c, t, function() {\n                                    c.executeSql(r, o, i, n);\n                                }, n);\n                            }, n) : n(f, u);\n                        }, n);\n                    }\n                    function yr(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                var f = r._dbInfo;\n                                f.db.transaction(function(u) {\n                                    ne(u, f, \"SELECT * FROM \" + f.storeName + \" WHERE key = ? LIMIT 1\", [\n                                        e\n                                    ], function(c, l) {\n                                        var d = l.rows.length ? l.rows.item(0).value : null;\n                                        d && (d = f.serializer.deserialize(d)), i(d);\n                                    }, function(c, l) {\n                                        n(l);\n                                    });\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function pr(e, t) {\n                        var r = this, o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                var f = r._dbInfo;\n                                f.db.transaction(function(u) {\n                                    ne(u, f, \"SELECT * FROM \" + f.storeName, [], function(c, l) {\n                                        for(var d = l.rows, y = d.length, S = 0; S < y; S++){\n                                            var x = d.item(S), C = x.value;\n                                            if (C && (C = f.serializer.deserialize(C)), C = e(C, x.key, S + 1), C !== void 0) {\n                                                i(C);\n                                                return;\n                                            }\n                                        }\n                                        i();\n                                    }, function(c, l) {\n                                        n(l);\n                                    });\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function Ve(e, t, r, o) {\n                        var i = this;\n                        e = z(e);\n                        var n = new m(function(f, u) {\n                            i.ready().then(function() {\n                                t === void 0 && (t = null);\n                                var c = t, l = i._dbInfo;\n                                l.serializer.serialize(t, function(d, y) {\n                                    y ? u(y) : l.db.transaction(function(S) {\n                                        ne(S, l, \"INSERT OR REPLACE INTO \" + l.storeName + \" (key, value) VALUES (?, ?)\", [\n                                            e,\n                                            d\n                                        ], function() {\n                                            f(c);\n                                        }, function(x, C) {\n                                            u(C);\n                                        });\n                                    }, function(S) {\n                                        if (S.code === S.QUOTA_ERR) {\n                                            if (o > 0) {\n                                                f(Ve.apply(i, [\n                                                    e,\n                                                    c,\n                                                    r,\n                                                    o - 1\n                                                ]));\n                                                return;\n                                            }\n                                            u(S);\n                                        }\n                                    });\n                                });\n                            }).catch(u);\n                        });\n                        return _(n, r), n;\n                    }\n                    function gr(e, t, r) {\n                        return Ve.apply(this, [\n                            e,\n                            t,\n                            r,\n                            1\n                        ]);\n                    }\n                    function br(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                var f = r._dbInfo;\n                                f.db.transaction(function(u) {\n                                    ne(u, f, \"DELETE FROM \" + f.storeName + \" WHERE key = ?\", [\n                                        e\n                                    ], function() {\n                                        i();\n                                    }, function(c, l) {\n                                        n(l);\n                                    });\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function _r(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                var n = t._dbInfo;\n                                n.db.transaction(function(f) {\n                                    ne(f, n, \"DELETE FROM \" + n.storeName, [], function() {\n                                        o();\n                                    }, function(u, c) {\n                                        i(c);\n                                    });\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function wr(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                var n = t._dbInfo;\n                                n.db.transaction(function(f) {\n                                    ne(f, n, \"SELECT COUNT(key) as c FROM \" + n.storeName, [], function(u, c) {\n                                        var l = c.rows.item(0).c;\n                                        o(l);\n                                    }, function(u, c) {\n                                        i(c);\n                                    });\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function Er(e, t) {\n                        var r = this, o = new m(function(i, n) {\n                            r.ready().then(function() {\n                                var f = r._dbInfo;\n                                f.db.transaction(function(u) {\n                                    ne(u, f, \"SELECT key FROM \" + f.storeName + \" WHERE id = ? LIMIT 1\", [\n                                        e + 1\n                                    ], function(c, l) {\n                                        var d = l.rows.length ? l.rows.item(0).key : null;\n                                        i(d);\n                                    }, function(c, l) {\n                                        n(l);\n                                    });\n                                });\n                            }).catch(n);\n                        });\n                        return _(o, t), o;\n                    }\n                    function Ir(e) {\n                        var t = this, r = new m(function(o, i) {\n                            t.ready().then(function() {\n                                var n = t._dbInfo;\n                                n.db.transaction(function(f) {\n                                    ne(f, n, \"SELECT key FROM \" + n.storeName, [], function(u, c) {\n                                        for(var l = [], d = 0; d < c.rows.length; d++)l.push(c.rows.item(d).key);\n                                        o(l);\n                                    }, function(u, c) {\n                                        i(c);\n                                    });\n                                });\n                            }).catch(i);\n                        });\n                        return _(r, e), r;\n                    }\n                    function Sr(e) {\n                        return new m(function(t, r) {\n                            e.transaction(function(o) {\n                                o.executeSql(\"SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function(i, n) {\n                                    for(var f = [], u = 0; u < n.rows.length; u++)f.push(n.rows.item(u).name);\n                                    t({\n                                        db: e,\n                                        storeNames: f\n                                    });\n                                }, function(i, n) {\n                                    r(n);\n                                });\n                            }, function(o) {\n                                r(o);\n                            });\n                        });\n                    }\n                    function Ar(e, t) {\n                        t = Z.apply(this, arguments);\n                        var r = this.config();\n                        e = typeof e != \"function\" && e || {}, e.name || (e.name = e.name || r.name, e.storeName = e.storeName || r.storeName);\n                        var o = this, i;\n                        return e.name ? i = new m(function(n) {\n                            var f;\n                            e.name === r.name ? f = o._dbInfo.db : f = openDatabase(e.name, \"\", \"\", 0), e.storeName ? n({\n                                db: f,\n                                storeNames: [\n                                    e.storeName\n                                ]\n                            }) : n(Sr(f));\n                        }).then(function(n) {\n                            return new m(function(f, u) {\n                                n.db.transaction(function(c) {\n                                    function l(x) {\n                                        return new m(function(C, K) {\n                                            c.executeSql(\"DROP TABLE IF EXISTS \" + x, [], function() {\n                                                C();\n                                            }, function(W, q) {\n                                                K(q);\n                                            });\n                                        });\n                                    }\n                                    for(var d = [], y = 0, S = n.storeNames.length; y < S; y++)d.push(l(n.storeNames[y]));\n                                    m.all(d).then(function() {\n                                        f();\n                                    }).catch(function(x) {\n                                        u(x);\n                                    });\n                                }, function(c) {\n                                    u(c);\n                                });\n                            });\n                        }) : i = m.reject(\"Invalid arguments\"), _(i, t), i;\n                    }\n                    var Rr = {\n                        _driver: \"webSQLStorage\",\n                        _initStorage: mr,\n                        _support: lr(),\n                        iterate: pr,\n                        getItem: yr,\n                        setItem: gr,\n                        removeItem: br,\n                        clear: _r,\n                        length: wr,\n                        key: Er,\n                        keys: Ir,\n                        dropInstance: Ar\n                    };\n                    function Dr() {\n                        try {\n                            return typeof localStorage < \"u\" && \"setItem\" in localStorage && !!localStorage.setItem;\n                        } catch (e) {\n                            return !1;\n                        }\n                    }\n                    function Ge(e, t) {\n                        var r = e.name + \"/\";\n                        return e.storeName !== t.storeName && (r += e.storeName + \"/\"), r;\n                    }\n                    function Nr() {\n                        var e = \"_localforage_support_test\";\n                        try {\n                            return localStorage.setItem(e, !0), localStorage.removeItem(e), !1;\n                        } catch (e) {\n                            return !0;\n                        }\n                    }\n                    function Tr() {\n                        return !Nr() || localStorage.length > 0;\n                    }\n                    function Br(e) {\n                        var t = this, r = {};\n                        if (e) for(var o in e)r[o] = e[o];\n                        return r.keyPrefix = Ge(e, t._defaultConfig), Tr() ? (t._dbInfo = r, r.serializer = Ie, m.resolve()) : m.reject();\n                    }\n                    function xr(e) {\n                        var t = this, r = t.ready().then(function() {\n                            for(var o = t._dbInfo.keyPrefix, i = localStorage.length - 1; i >= 0; i--){\n                                var n = localStorage.key(i);\n                                n.indexOf(o) === 0 && localStorage.removeItem(n);\n                            }\n                        });\n                        return _(r, e), r;\n                    }\n                    function Or(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = r.ready().then(function() {\n                            var i = r._dbInfo, n = localStorage.getItem(i.keyPrefix + e);\n                            return n && (n = i.serializer.deserialize(n)), n;\n                        });\n                        return _(o, t), o;\n                    }\n                    function Cr(e, t) {\n                        var r = this, o = r.ready().then(function() {\n                            for(var i = r._dbInfo, n = i.keyPrefix, f = n.length, u = localStorage.length, c = 1, l = 0; l < u; l++){\n                                var d = localStorage.key(l);\n                                if (d.indexOf(n) === 0) {\n                                    var y = localStorage.getItem(d);\n                                    if (y && (y = i.serializer.deserialize(y)), y = e(y, d.substring(f), c++), y !== void 0) return y;\n                                }\n                            }\n                        });\n                        return _(o, t), o;\n                    }\n                    function Lr(e, t) {\n                        var r = this, o = r.ready().then(function() {\n                            var i = r._dbInfo, n;\n                            try {\n                                n = localStorage.key(e);\n                            } catch (e) {\n                                n = null;\n                            }\n                            return n && (n = n.substring(i.keyPrefix.length)), n;\n                        });\n                        return _(o, t), o;\n                    }\n                    function Pr(e) {\n                        var t = this, r = t.ready().then(function() {\n                            for(var o = t._dbInfo, i = localStorage.length, n = [], f = 0; f < i; f++){\n                                var u = localStorage.key(f);\n                                u.indexOf(o.keyPrefix) === 0 && n.push(u.substring(o.keyPrefix.length));\n                            }\n                            return n;\n                        });\n                        return _(r, e), r;\n                    }\n                    function Mr(e) {\n                        var t = this, r = t.keys().then(function(o) {\n                            return o.length;\n                        });\n                        return _(r, e), r;\n                    }\n                    function Fr(e, t) {\n                        var r = this;\n                        e = z(e);\n                        var o = r.ready().then(function() {\n                            var i = r._dbInfo;\n                            localStorage.removeItem(i.keyPrefix + e);\n                        });\n                        return _(o, t), o;\n                    }\n                    function Ur(e, t, r) {\n                        var o = this;\n                        e = z(e);\n                        var i = o.ready().then(function() {\n                            t === void 0 && (t = null);\n                            var n = t;\n                            return new m(function(f, u) {\n                                var c = o._dbInfo;\n                                c.serializer.serialize(t, function(l, d) {\n                                    if (d) u(d);\n                                    else try {\n                                        localStorage.setItem(c.keyPrefix + e, l), f(n);\n                                    } catch (y) {\n                                        (y.name === \"QuotaExceededError\" || y.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && u(y), u(y);\n                                    }\n                                });\n                            });\n                        });\n                        return _(i, r), i;\n                    }\n                    function Yr(e, t) {\n                        if (t = Z.apply(this, arguments), e = typeof e != \"function\" && e || {}, !e.name) {\n                            var r = this.config();\n                            e.name = e.name || r.name, e.storeName = e.storeName || r.storeName;\n                        }\n                        var o = this, i;\n                        return e.name ? i = new m(function(n) {\n                            e.storeName ? n(Ge(e, o._defaultConfig)) : n(e.name + \"/\");\n                        }).then(function(n) {\n                            for(var f = localStorage.length - 1; f >= 0; f--){\n                                var u = localStorage.key(f);\n                                u.indexOf(n) === 0 && localStorage.removeItem(u);\n                            }\n                        }) : i = m.reject(\"Invalid arguments\"), _(i, t), i;\n                    }\n                    var zr = {\n                        _driver: \"localStorageWrapper\",\n                        _initStorage: Br,\n                        _support: Dr(),\n                        iterate: Cr,\n                        getItem: Or,\n                        setItem: Ur,\n                        removeItem: Fr,\n                        clear: xr,\n                        length: Mr,\n                        key: Lr,\n                        keys: Pr,\n                        dropInstance: Yr\n                    }, Wr = function(t, r) {\n                        return t === r || typeof t == \"number\" && typeof r == \"number\" && isNaN(t) && isNaN(r);\n                    }, Kr = function(t, r) {\n                        for(var o = t.length, i = 0; i < o;){\n                            if (Wr(t[i], r)) return !0;\n                            i++;\n                        }\n                        return !1;\n                    }, je = Array.isArray || function(e) {\n                        return Object.prototype.toString.call(e) === \"[object Array]\";\n                    }, le = {}, Xe = {}, ue = {\n                        INDEXEDDB: cr,\n                        WEBSQL: Rr,\n                        LOCALSTORAGE: zr\n                    }, Hr = [\n                        ue.INDEXEDDB._driver,\n                        ue.WEBSQL._driver,\n                        ue.LOCALSTORAGE._driver\n                    ], me = [\n                        \"dropInstance\"\n                    ], Se = [\n                        \"clear\",\n                        \"getItem\",\n                        \"iterate\",\n                        \"key\",\n                        \"keys\",\n                        \"length\",\n                        \"removeItem\",\n                        \"setItem\"\n                    ].concat(me), Vr = {\n                        description: \"\",\n                        driver: Hr.slice(),\n                        name: \"localforage\",\n                        size: 4980736,\n                        storeName: \"keyvaluepairs\",\n                        version: 1\n                    };\n                    function Gr(e, t) {\n                        e[t] = function() {\n                            var r = arguments;\n                            return e.ready().then(function() {\n                                return e[t].apply(e, r);\n                            });\n                        };\n                    }\n                    function Ae() {\n                        for(var e = 1; e < arguments.length; e++){\n                            var t = arguments[e];\n                            if (t) for(var r in t)t.hasOwnProperty(r) && (je(t[r]) ? arguments[0][r] = t[r].slice() : arguments[0][r] = t[r]);\n                        }\n                        return arguments[0];\n                    }\n                    var jr = function() {\n                        function e(t) {\n                            Y(this, e);\n                            for(var r in ue)if (ue.hasOwnProperty(r)) {\n                                var o = ue[r], i = o._driver;\n                                this[r] = i, le[i] || this.defineDriver(o);\n                            }\n                            this._defaultConfig = Ae({}, Vr), this._config = Ae({}, this._defaultConfig, t), this._driverSet = null, this._initDriver = null, this._ready = !1, this._dbInfo = null, this._wrapLibraryMethodsWithReady(), this.setDriver(this._config.driver).catch(function() {});\n                        }\n                        return e.prototype.config = function(r) {\n                            if ((typeof r > \"u\" ? \"undefined\" : P(r)) === \"object\") {\n                                if (this._ready) return new Error(\"Can't call config() after localforage has been used.\");\n                                for(var o in r){\n                                    if (o === \"storeName\" && (r[o] = r[o].replace(/\\W/g, \"_\")), o === \"version\" && typeof r[o] != \"number\") return new Error(\"Database version must be a number.\");\n                                    this._config[o] = r[o];\n                                }\n                                return \"driver\" in r && r.driver ? this.setDriver(this._config.driver) : !0;\n                            } else return typeof r == \"string\" ? this._config[r] : this._config;\n                        }, e.prototype.defineDriver = function(r, o, i) {\n                            var n = new m(function(f, u) {\n                                try {\n                                    var c = r._driver, l = new Error(\"Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver\");\n                                    if (!r._driver) {\n                                        u(l);\n                                        return;\n                                    }\n                                    for(var d = Se.concat(\"_initStorage\"), y = 0, S = d.length; y < S; y++){\n                                        var x = d[y], C = !Kr(me, x);\n                                        if ((C || r[x]) && typeof r[x] != \"function\") {\n                                            u(l);\n                                            return;\n                                        }\n                                    }\n                                    var K = function() {\n                                        for(var de = function(Jr) {\n                                            return function() {\n                                                var $r = new Error(\"Method \" + Jr + \" is not implemented by the current driver\"), Qe = m.reject($r);\n                                                return _(Qe, arguments[arguments.length - 1]), Qe;\n                                            };\n                                        }, Re = 0, Qr = me.length; Re < Qr; Re++){\n                                            var De = me[Re];\n                                            r[De] || (r[De] = de(De));\n                                        }\n                                    };\n                                    K();\n                                    var W = function(de) {\n                                        le[c] && console.info(\"Redefining LocalForage driver: \" + c), le[c] = r, Xe[c] = de, f();\n                                    };\n                                    \"_support\" in r ? r._support && typeof r._support == \"function\" ? r._support().then(W, u) : W(!!r._support) : W(!0);\n                                } catch (q) {\n                                    u(q);\n                                }\n                            });\n                            return B(n, o, i), n;\n                        }, e.prototype.driver = function() {\n                            return this._driver || null;\n                        }, e.prototype.getDriver = function(r, o, i) {\n                            var n = le[r] ? m.resolve(le[r]) : m.reject(new Error(\"Driver not found.\"));\n                            return B(n, o, i), n;\n                        }, e.prototype.getSerializer = function(r) {\n                            var o = m.resolve(Ie);\n                            return B(o, r), o;\n                        }, e.prototype.ready = function(r) {\n                            var o = this, i = o._driverSet.then(function() {\n                                return o._ready === null && (o._ready = o._initDriver()), o._ready;\n                            });\n                            return B(i, r, r), i;\n                        }, e.prototype.setDriver = function(r, o, i) {\n                            var n = this;\n                            je(r) || (r = [\n                                r\n                            ]);\n                            var f = this._getSupportedDrivers(r);\n                            function u() {\n                                n._config.driver = n.driver();\n                            }\n                            function c(y) {\n                                return n._extend(y), u(), n._ready = n._initStorage(n._config), n._ready;\n                            }\n                            function l(y) {\n                                return function() {\n                                    var S = 0;\n                                    function x() {\n                                        for(; S < y.length;){\n                                            var C = y[S];\n                                            return S++, n._dbInfo = null, n._ready = null, n.getDriver(C).then(c).catch(x);\n                                        }\n                                        u();\n                                        var K = new Error(\"No available storage method found.\");\n                                        return n._driverSet = m.reject(K), n._driverSet;\n                                    }\n                                    return x();\n                                };\n                            }\n                            var d = this._driverSet !== null ? this._driverSet.catch(function() {\n                                return m.resolve();\n                            }) : m.resolve();\n                            return this._driverSet = d.then(function() {\n                                var y = f[0];\n                                return n._dbInfo = null, n._ready = null, n.getDriver(y).then(function(S) {\n                                    n._driver = S._driver, u(), n._wrapLibraryMethodsWithReady(), n._initDriver = l(f);\n                                });\n                            }).catch(function() {\n                                u();\n                                var y = new Error(\"No available storage method found.\");\n                                return n._driverSet = m.reject(y), n._driverSet;\n                            }), B(this._driverSet, o, i), this._driverSet;\n                        }, e.prototype.supports = function(r) {\n                            return !!Xe[r];\n                        }, e.prototype._extend = function(r) {\n                            Ae(this, r);\n                        }, e.prototype._getSupportedDrivers = function(r) {\n                            for(var o = [], i = 0, n = r.length; i < n; i++){\n                                var f = r[i];\n                                this.supports(f) && o.push(f);\n                            }\n                            return o;\n                        }, e.prototype._wrapLibraryMethodsWithReady = function() {\n                            for(var r = 0, o = Se.length; r < o; r++)Gr(this, Se[r]);\n                        }, e.prototype.createInstance = function(r) {\n                            return new e(r);\n                        }, e;\n                    }(), Xr = new jr;\n                    D.exports = Xr;\n                },\n                {\n                    3: 3\n                }\n            ]\n        }, {}, [\n            4\n        ])(4);\n    });\n});\nvar rr = $e((ye, er)=>{\n    (function(b, A) {\n        typeof ye == \"object\" && typeof er < \"u\" ? A(ye) : typeof define == \"function\" && define.amd ? define(\"localforage-driver-memory\", [\n            \"exports\"\n        ], A) : A(b.LocalforageDriverMemory = {});\n    })(typeof self < \"u\" ? self : ye, function(b) {\n        \"use strict\";\n        var A = \"localforage-driver-memory\";\n        function R(a) {\n            var s = typeof Symbol == \"function\" && a[Symbol.iterator], v = 0;\n            return s ? s.call(a) : {\n                next: function() {\n                    return a && v >= a.length && (a = void 0), {\n                        value: a && a[v++],\n                        done: !a\n                    };\n                }\n            };\n        }\n        function L(a, s) {\n            a = a || [], s = s || {};\n            try {\n                return new Blob(a, s);\n            } catch (w) {\n                if (w.name !== \"TypeError\") throw w;\n                for(var v = typeof BlobBuilder < \"u\" ? BlobBuilder : typeof MSBlobBuilder < \"u\" ? MSBlobBuilder : typeof MozBlobBuilder < \"u\" ? MozBlobBuilder : WebKitBlobBuilder, p = new v, g = 0; g < a.length; g += 1)p.append(a[g]);\n                return p.getBlob(s.type);\n            }\n        }\n        var D = /^~~local_forage_type~([^~]+)~/, X = 9, P = X + 4, Y = Object.prototype.toString;\n        function I(a) {\n            var s = a.length * .75, v = a.length;\n            a[a.length - 1] === \"=\" && (s--, a[a.length - 2] === \"=\" && s--);\n            for(var p = new ArrayBuffer(s), g = new Uint8Array(p), w = 0, T = 0; w < v; w += 4){\n                var G = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a[w]), fe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a[w + 1]), ie = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a[w + 2]), ce = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(a[w + 3]);\n                g[T++] = G << 2 | fe >> 4, g[T++] = (fe & 15) << 4 | ie >> 2, g[T++] = (ie & 3) << 6 | ce & 63;\n            }\n            return p;\n        }\n        function M(a) {\n            for(var s = new Uint8Array(a), v = \"\", p = 0; p < s.length; p += 3)v += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[s[p] >> 2], v += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(s[p] & 3) << 4 | s[p + 1] >> 4], v += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(s[p + 1] & 15) << 2 | s[p + 2] >> 6], v += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[s[p + 2] & 63];\n            return s.length % 3 === 2 ? v = v.substring(0, v.length - 1) + \"=\" : s.length % 3 === 1 && (v = v.substring(0, v.length - 2) + \"==\"), v;\n        }\n        function H(a, s) {\n            var v = \"\";\n            if (a && (v = Y.call(a)), a && (v === \"[object ArrayBuffer]\" || a.buffer && Y.call(a.buffer) === \"[object ArrayBuffer]\")) {\n                var p = void 0, g = \"__lfsc__:\";\n                a instanceof ArrayBuffer ? (p = a, g += \"arbf\") : (p = a.buffer, v === \"[object Int8Array]\" ? g += \"si08\" : v === \"[object Uint8Array]\" ? g += \"ui08\" : v === \"[object Uint8ClampedArray]\" ? g += \"uic8\" : v === \"[object Int16Array]\" ? g += \"si16\" : v === \"[object Uint16Array]\" ? g += \"ur16\" : v === \"[object Int32Array]\" ? g += \"si32\" : v === \"[object Uint32Array]\" ? g += \"ui32\" : v === \"[object Float32Array]\" ? g += \"fl32\" : v === \"[object Float64Array]\" ? g += \"fl64\" : s(new Error(\"Failed to get type for BinaryArray\"))), s(g + M(p));\n            } else if (v === \"[object Blob]\") {\n                var w = new FileReader;\n                w.onload = function() {\n                    var T = \"~~local_forage_type~\" + a.type + \"~\" + M(this.result);\n                    s(\"__lfsc__:blob\" + T);\n                }, w.readAsArrayBuffer(a);\n            } else try {\n                s(JSON.stringify(a));\n            } catch (T) {\n                console.error(\"Couldn't convert value into a JSON string: \", a), s(null, T);\n            }\n        }\n        function $(a) {\n            if (a.substring(0, X) !== \"__lfsc__:\") return JSON.parse(a);\n            var s = a.substring(P), v = a.substring(X, P), p;\n            if (v === \"blob\" && D.test(s)) {\n                var g = s.match(D);\n                p = g[1], s = s.substring(g[0].length);\n            }\n            var w = I(s);\n            switch(v){\n                case \"arbf\":\n                    return w;\n                case \"blob\":\n                    return L([\n                        w\n                    ], {\n                        type: p\n                    });\n                case \"si08\":\n                    return new Int8Array(w);\n                case \"ui08\":\n                    return new Uint8Array(w);\n                case \"uic8\":\n                    return new Uint8ClampedArray(w);\n                case \"si16\":\n                    return new Int16Array(w);\n                case \"ur16\":\n                    return new Uint16Array(w);\n                case \"si32\":\n                    return new Int32Array(w);\n                case \"ui32\":\n                    return new Uint32Array(w);\n                case \"fl32\":\n                    return new Float32Array(w);\n                case \"fl64\":\n                    return new Float64Array(w);\n                default:\n                    throw new Error(\"Unkown type: \" + v);\n            }\n        }\n        function m(a) {\n            var s, v;\n            if (a === null || typeof a != \"object\" || \"isActiveClone\" in a) return a;\n            var p = a instanceof Date ? new Date(a) : a.constructor();\n            try {\n                for(var g = R(Object.keys(a)), w = g.next(); !w.done; w = g.next()){\n                    var T = w.value;\n                    Object.prototype.hasOwnProperty.call(a, T) && (a.isActiveClone = null, p[T] = m(a[T]), delete a.isActiveClone);\n                }\n            } catch (G) {\n                s = {\n                    error: G\n                };\n            } finally{\n                try {\n                    w && !w.done && (v = g.return) && v.call(g);\n                } finally{\n                    if (s) throw s.error;\n                }\n            }\n            return p;\n        }\n        function _(a, s) {\n            return (a.name || s.name) + \"/\" + (a.storeName || s.storeName) + \"/\";\n        }\n        function B(a, s) {\n            s && a.then(function(v) {\n                s(null, v);\n            }, function(v) {\n                s(v);\n            });\n        }\n        function z() {\n            for(var a = [], s = 0; s < arguments.length; s++)a[s] = arguments[s];\n            if (arguments.length && typeof arguments[arguments.length - 1] == \"function\") return arguments[arguments.length - 1];\n        }\n        function Z(a, s) {\n            var v = this;\n            if (s = z.apply(this, arguments), a = typeof a != \"function\" && a || {}, !a.name) {\n                var p = this.config();\n                a.name = a.name || p.name, a.storeName = a.storeName || p.storeName;\n            }\n            var g;\n            return a.name ? g = new Promise(function(w) {\n                a.storeName ? w(_(a, v._defaultConfig)) : w(a.name + \"/\");\n            }) : g = Promise.reject(\"Invalid arguments\"), {\n                promise: g,\n                callback: s\n            };\n        }\n        function F(a) {\n            return typeof a != \"string\" && (console.warn(a + \" used as a key, but it is not a string.\"), a = String(a)), a;\n        }\n        var k = {\n            bufferToString: M,\n            deserialize: $,\n            serialize: H,\n            stringToBuffer: I\n        }, U = {}, ae = function() {\n            function a(s) {\n                this.kp = s, this.data = {};\n            }\n            return a.resolve = function(s) {\n                return U[s] || (U[s] = new a(s)), U[s];\n            }, a.prototype.clear = function() {\n                this.data = {};\n            }, a.prototype.drop = function() {\n                this.clear(), delete U[this.kp];\n            }, a.prototype.get = function(s) {\n                return this.data[s];\n            }, a.prototype.key = function(s) {\n                return this.keys()[s];\n            }, a.prototype.keys = function() {\n                return Object.keys(this.data);\n            }, a.prototype.rm = function(s) {\n                delete this.data[s];\n            }, a.prototype.set = function(s, v) {\n                this.data[s] = v;\n            }, a;\n        }();\n        function re(a) {\n            var s = a ? m(a) : {}, v = _(s, this._defaultConfig), p = ae.resolve(v);\n            return this._dbInfo = s, this._dbInfo.serializer = k, this._dbInfo.keyPrefix = v, this._dbInfo.mStore = p, Promise.resolve();\n        }\n        function h(a) {\n            var s = this, v = this.ready().then(function() {\n                s._dbInfo.mStore.clear();\n            });\n            return B(v, a), v;\n        }\n        function N(a, s) {\n            var v = Z.apply(this, arguments), p = v.promise, g = v.callback, w = p.then(function(T) {\n                ae.resolve(T).drop();\n            });\n            return B(w, g), p;\n        }\n        function E(a, s) {\n            var v = this;\n            a = F(a);\n            var p = this.ready().then(function() {\n                var g = v._dbInfo.mStore.get(a);\n                return g == null ? null : v._dbInfo.serializer.deserialize(g);\n            });\n            return B(p, s), p;\n        }\n        function O(a, s) {\n            var v = this, p = this.ready().then(function() {\n                for(var g = v._dbInfo.mStore, w = g.keys(), T = 0; T < w.length; T++){\n                    var G = g.get(w[T]);\n                    if (G && (G = v._dbInfo.serializer.deserialize(G)), G = a(G, w[T], T + 1), G !== void 0) return G;\n                }\n            });\n            return B(p, s), p;\n        }\n        function V(a, s) {\n            var v = this, p = this.ready().then(function() {\n                var g;\n                try {\n                    g = v._dbInfo.mStore.key(a), g === void 0 && (g = null);\n                } catch (e) {\n                    g = null;\n                }\n                return g;\n            });\n            return B(p, s), p;\n        }\n        function j(a) {\n            var s = this, v = this.ready().then(function() {\n                return s._dbInfo.mStore.keys();\n            });\n            return B(v, a), v;\n        }\n        function Q(a) {\n            var s = this.keys().then(function(v) {\n                return v.length;\n            });\n            return B(s, a), s;\n        }\n        function J(a, s) {\n            var v = this;\n            a = F(a);\n            var p = this.ready().then(function() {\n                v._dbInfo.mStore.rm(a);\n            });\n            return B(p, s), p;\n        }\n        function ee(a, s, v) {\n            var p = this;\n            a = F(a);\n            var g = this.ready().then(function() {\n                s === void 0 && (s = null);\n                var w = s;\n                return new Promise(function(T, G) {\n                    p._dbInfo.serializer.serialize(s, function(fe, ie) {\n                        if (ie) G(ie);\n                        else try {\n                            p._dbInfo.mStore.set(a, fe), T(w);\n                        } catch (ce) {\n                            G(ce);\n                        }\n                    });\n                });\n            });\n            return B(g, v), g;\n        }\n        var oe = !0;\n        b._support = oe, b._driver = A, b._initStorage = re, b.clear = h, b.dropInstance = N, b.getItem = E, b.iterate = O, b.key = V, b.keys = j, b.length = Q, b.removeItem = J, b.setItem = ee, Object.defineProperty(b, \"__esModule\", {\n            value: !0\n        });\n    });\n});\nvar ge = Ze(ke()), Te = Ze(rr());\n\n\nvar at = {\n    display: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    right: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"0\",\n    border: \"none\",\n    zIndex: \"2147483647\"\n};\nfunction ft(b) {\n    for (let [A, R] of Object.entries(at))b.style[A] = R;\n}\nfunction ut(b) {\n    let A = [].slice.call(document.querySelectorAll(\".magic-iframe\"));\n    return Boolean(A.find((R)=>R.src.includes(b)));\n}\nvar pe = class extends _magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.ViewController {\n    init() {\n        this.test = \"hello\", this.iframe = new Promise((R)=>{\n            let L = ()=>{\n                if (ut(encodeURIComponent(this.parameters))) (0,_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.createDuplicateIframeWarning)().log();\n                else {\n                    let D = document.createElement(\"iframe\");\n                    D.classList.add(\"magic-iframe\"), D.dataset.magicIframeLabel = (0,_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.createURL)(this.endpoint).host, D.title = \"Secure Modal\", D.src = (0,_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.createURL)(\"/send?params=\".concat(encodeURIComponent(this.parameters)), this.endpoint).href, ft(D), document.body.appendChild(D), R(D);\n                }\n            };\n            [\n                \"loaded\",\n                \"interactive\",\n                \"complete\"\n            ].includes(document.readyState) ? L() : window.addEventListener(\"load\", L, !1);\n        }), window.addEventListener(\"message\", (R)=>{\n            var L;\n            if (R.origin === this.endpoint && R.data && R.data.msgType && this.messageHandlers.size) {\n                R.data.response = (L = R.data.response) != null ? L : {};\n                for (let D of this.messageHandlers.values())D(R);\n            }\n        });\n    }\n    showOverlay() {\n        return se(this, null, function*() {\n            let R = yield this.iframe;\n            R.style.display = \"block\", this.activeElement = document.activeElement, R.focus();\n        });\n    }\n    hideOverlay() {\n        return se(this, null, function*() {\n            var L;\n            let R = yield this.iframe;\n            R.style.display = \"none\", (L = this.activeElement) != null && L.focus && this.activeElement.focus(), this.activeElement = null;\n        });\n    }\n    _post(R) {\n        return se(this, null, function*() {\n            let L = yield this.iframe;\n            if (L && L.contentWindow) L.contentWindow.postMessage(R, this.endpoint);\n            else throw (0,_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.createModalNotReadyError)();\n        });\n    }\n    constructor(){\n        super(...arguments);\n        this.activeElement = null;\n    }\n};\n\nvar bt = (0,_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.createSDK)(_magic_sdk_provider__WEBPACK_IMPORTED_MODULE_0__.SDKBase, {\n    platform: \"web\",\n    sdkName: \"magic-sdk\",\n    version: \"13.6.2\",\n    defaultEndpoint: \"https://auth.magic.link/\",\n    ViewController: pe,\n    configureStorage: ()=>se(void 0, null, function*() {\n            let b = ge.default.createInstance({\n                name: \"MagicAuthLocalStorageDB\",\n                storeName: \"MagicAuthLocalStorage\"\n            });\n            return yield b.defineDriver(Te), yield b.setDriver([\n                ge.default.INDEXEDDB,\n                ge.default.LOCALSTORAGE,\n                Te._driver\n            ]), b;\n        })\n});\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"Ze\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs\n"));

/***/ })

}]);