"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_wallets_2_4_2__ethersproject_abstract-provi-1f4106"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaperWalletConnector: function() { return /* binding */ PaperWalletConnector; }\n/* harmony export */ });\n/* harmony import */ var _dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-a5db7c83.browser.esm.js\");\n/* harmony import */ var _dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/defineProperty-d7c057bf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/defineProperty-d7c057bf.browser.esm.js\");\n/* harmony import */ var _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paperxyz/embedded-wallet-service-sdk */ \"(app-pages-browser)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js\");\n/* harmony import */ var _dist_walletIds_afeb5af2_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/walletIds-afeb5af2.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/walletIds-afeb5af2.browser.esm.js\");\n/* harmony import */ var _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/connector-05689d68.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\nvar _signer = /*#__PURE__*/ new WeakMap();\nclass PaperWalletConnector extends _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.C {\n    getPaperSDK() {\n        if (!this.paper) {\n            this.paper = new Promise(async (resolve, reject)=>{\n                var _this_options_advancedOptions;\n                const recoveryMethod = (_this_options_advancedOptions = this.options.advancedOptions) === null || _this_options_advancedOptions === void 0 ? void 0 : _this_options_advancedOptions.recoveryShareManagement;\n                try {\n                    const { PaperEmbeddedWalletSdk } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @paperxyz/embedded-wallet-service-sdk */ \"(app-pages-browser)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs\"));\n                    const methodToEnum = {\n                        AWS_MANAGED: _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.RecoveryShareManagement.AWS_MANAGED,\n                        USER_MANAGED: _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.RecoveryShareManagement.USER_MANAGED\n                    };\n                    const recoveryShareManagement = recoveryMethod ? methodToEnum[recoveryMethod] : undefined;\n                    resolve(new PaperEmbeddedWalletSdk({\n                        advancedOptions: {\n                            recoveryShareManagement\n                        },\n                        clientId: this.options.clientId,\n                        chain: \"Ethereum\",\n                        styles: this.options.styles,\n                        onAuthSuccess: this.options.onAuthSuccess\n                    }));\n                } catch (err) {\n                    reject(err);\n                }\n            });\n        }\n        return this.paper;\n    }\n    async connect(options) {\n        const paperSDK = await this.getPaperSDK();\n        if (!paperSDK) {\n            throw new Error(\"Paper SDK not initialized\");\n        }\n        const user = await paperSDK.getUser();\n        switch(user.status){\n            case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_OUT:\n                {\n                    let authResult;\n                    // Show Google popup\n                    if (options === null || options === void 0 ? void 0 : options.googleLogin) {\n                        const arg = options.googleLogin;\n                        authResult = await paperSDK.auth.loginWithGoogle(typeof arg === \"object\" ? arg : undefined);\n                    } else if ((options === null || options === void 0 ? void 0 : options.email) && (options === null || options === void 0 ? void 0 : options.otp)) {\n                        authResult = await paperSDK.auth.verifyPaperEmailLoginOtp({\n                            email: options.email,\n                            otp: options.otp,\n                            recoveryCode: options.recoveryCode\n                        });\n                    } else if (options === null || options === void 0 ? void 0 : options.email) {\n                        authResult = await paperSDK.auth.loginWithPaperEmailOtp({\n                            email: options.email\n                        });\n                    } else {\n                        authResult = await paperSDK.auth.loginWithPaperModal();\n                    }\n                    this.user = authResult.user;\n                    break;\n                }\n            case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_IN_WALLET_INITIALIZED:\n                {\n                    if (typeof (options === null || options === void 0 ? void 0 : options.googleLogin) === \"object\") {\n                        if (options.googleLogin.closeOpenedWindow && options.googleLogin.openedWindow) {\n                            options.googleLogin.closeOpenedWindow(options.googleLogin.openedWindow);\n                        }\n                    }\n                    this.user = user;\n                    break;\n                }\n        }\n        if (!this.user) {\n            throw new Error(\"Error connecting User\");\n        }\n        if (options === null || options === void 0 ? void 0 : options.chainId) {\n            this.switchChain(options.chainId);\n        }\n        this.setupListeners();\n        return this.getAddress();\n    }\n    async disconnect() {\n        const paper = await this.paper;\n        await (paper === null || paper === void 0 ? void 0 : paper.auth.logout());\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.a)(this, _signer, undefined);\n        this.user = null;\n    }\n    async getAddress() {\n        const signer = await this.getSigner();\n        return signer.getAddress();\n    }\n    async isConnected() {\n        try {\n            const addr = await this.getAddress();\n            return !!addr;\n        } catch (e) {\n            return false;\n        }\n    }\n    async getProvider() {\n        const signer = await this.getSigner();\n        if (!signer.provider) {\n            throw new Error(\"Provider not found\");\n        }\n        return signer.provider;\n    }\n    async getSigner() {\n        var _this_user;\n        if ((0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.b)(this, _signer)) {\n            return (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.b)(this, _signer);\n        }\n        if (!this.user) {\n            const paperSDK = await this.getPaperSDK();\n            const user = await paperSDK.getUser();\n            switch(user.status){\n                case _paperxyz_embedded_wallet_service_sdk__WEBPACK_IMPORTED_MODULE_0__.UserStatus.LOGGED_IN_WALLET_INITIALIZED:\n                    {\n                        this.user = user;\n                        break;\n                    }\n            }\n        }\n        const signer = await ((_this_user = this.user) === null || _this_user === void 0 ? void 0 : _this_user.wallet.getEthersJsSigner({\n            rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n        }));\n        if (!signer) {\n            throw new Error(\"Signer not found\");\n        }\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.a)(this, _signer, signer);\n        return signer;\n    }\n    async isAuthorized() {\n        return false;\n    }\n    async switchChain(chainId) {\n        var _this_user, _this_user1;\n        const chain = this.options.chains.find((c)=>c.chainId === chainId);\n        if (!chain) {\n            throw new Error(\"Chain not configured\");\n        }\n        // update chain in wallet\n        await ((_this_user = this.user) === null || _this_user === void 0 ? void 0 : _this_user.wallet.setChain({\n            chain: \"Ethereum\"\n        })); // just pass Ethereum no matter what chain we are going to connect\n        // update signer\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.a)(this, _signer, await ((_this_user1 = this.user) === null || _this_user1 === void 0 ? void 0 : _this_user1.wallet.getEthersJsSigner({\n            rpcEndpoint: chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n        })));\n        this.emit(\"change\", {\n            chain: {\n                id: chainId,\n                unsupported: false\n            }\n        });\n    }\n    // private getUser() {\n    //   if (!this.user) {\n    //     throw new Error(\"User not found\");\n    //   }\n    //   return this.user;\n    // }\n    async setupListeners() {\n        const provider = await this.getProvider();\n        if (provider.on) {\n            provider.on(\"accountsChanged\", this.onAccountsChanged);\n            provider.on(\"chainChanged\", this.onChainChanged);\n            provider.on(\"disconnect\", this.onDisconnect);\n        }\n    }\n    updateChains(chains) {\n        this.options.chains = chains;\n    }\n    async getEmail() {\n        await this.getProvider();\n        if (!this.user) {\n            throw new Error(\"No user found, Paper Wallet is not connected\");\n        }\n        return this.user.authDetails.email;\n    }\n    constructor(options){\n        super();\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"id\", _dist_walletIds_afeb5af2_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.w.paper);\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"name\", \"Paper Wallet\");\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"ready\", true);\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"user\", null);\n        (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__._)(this, _signer, {\n            writable: true,\n            value: void 0\n        });\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onAccountsChanged\", async (accounts)=>{\n            if (accounts.length === 0) {\n                await this.onDisconnect();\n            } else {\n                this.emit(\"change\", {\n                    account: ethers__WEBPACK_IMPORTED_MODULE_6__.getAddress(accounts[0])\n                });\n            }\n        });\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onChainChanged\", (chainId)=>{\n            const id = (0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.n)(chainId);\n            const unsupported = this.options.chains.findIndex((c)=>c.chainId === id) === -1;\n            this.emit(\"change\", {\n                chain: {\n                    id,\n                    unsupported\n                }\n            });\n        });\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__._)(this, \"onDisconnect\", async ()=>{\n            this.emit(\"disconnect\");\n        });\n        this.options = options;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs ***!
  \******************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_TOKEN_LOCAL_STORAGE_NAME: function() { return /* binding */ I; },\n/* harmony export */   AuthProvider: function() { return /* binding */ Y; },\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME: function() { return /* binding */ W; },\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED: function() { return /* binding */ X; },\n/* harmony export */   PaperEmbeddedWalletSdk: function() { return /* binding */ N; },\n/* harmony export */   RecoveryShareManagement: function() { return /* binding */ w; },\n/* harmony export */   UserStatus: function() { return /* binding */ H; },\n/* harmony export */   UserWalletStatus: function() { return /* binding */ P; },\n/* harmony export */   WALLET_USER_DETAILS_LOCAL_STORAGE_NAME: function() { return /* binding */ J; },\n/* harmony export */   WALLET_USER_ID_LOCAL_STORAGE_NAME: function() { return /* binding */ L; }\n/* harmony export */ });\n/* harmony import */ var _paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paperxyz/sdk-common-utilities */ \"(app-pages-browser)/./node_modules/.pnpm/@paperxyz+sdk-common-utilities@0.1.1/node_modules/@paperxyz/sdk-common-utilities/dist/index.mjs\");\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+providers@5.7.2/node_modules/@ethersproject/providers/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/abstract-signer */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js\");\nvar z = Object.defineProperty, q = Object.defineProperties;\nvar Z = Object.getOwnPropertyDescriptors;\nvar x = Object.getOwnPropertySymbols;\nvar $ = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable;\nvar k = (s, e, t)=>e in s ? z(s, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : s[e] = t, u = (s, e)=>{\n    for(var t in e || (e = {}))$.call(e, t) && k(s, t, e[t]);\n    if (x) for (var t of x(e))B.call(e, t) && k(s, t, e[t]);\n    return s;\n}, y = (s, e)=>q(s, Z(e));\nvar i = (s, e, t)=>new Promise((r, a)=>{\n        var o = (l)=>{\n            try {\n                d(t.next(l));\n            } catch (p) {\n                a(p);\n            }\n        }, n = (l)=>{\n            try {\n                d(t.throw(l));\n            } catch (p) {\n                a(p);\n            }\n        }, d = (l)=>l.done ? r(l.value) : Promise.resolve(l.value).then(o, n);\n        d((t = t.apply(s, e)).next());\n    });\nvar E = \"/sdk/2022-08-12/embedded-wallet\", de = \"\".concat(E, \"/auth/headless-google-login-managed\"), J = (s)=>\"paperEwsWalletUserDetails-\".concat(s), L = (s)=>\"paperEwsWalletUserId-\".concat(s), K = \"walletToken\", I = (s)=>\"\".concat(K, \"-\").concat(s), Q = \"a\", W = (s, e)=>\"\".concat(Q, \"-\").concat(s, \"-\").concat(e), X = (s)=>\"\".concat(Q, \"-\").concat(s);\nvar w = ((t)=>(t.USER_MANAGED = \"USER_MANAGED\", t.AWS_MANAGED = \"AWS_MANAGED\", t))(w || {}), Y = ((n)=>(n.PAPER_EMAIL_OTP = \"PaperEmailOTP\", n.GOOGLE = \"Google\", n.TWITTER = \"Twitter\", n.COGNITO = \"Cognito\", n.AUTH0 = \"Auth0\", n.CUSTOM_JWT = \"CustomJWT\", n))(Y || {});\nvar H = ((t)=>(t.LOGGED_OUT = \"Logged Out\", t.LOGGED_IN_WALLET_INITIALIZED = \"Logged In, Wallet Initialized\", t))(H || {}), P = ((a)=>(a.LOGGED_OUT = \"Logged Out\", a.LOGGED_IN_WALLET_UNINITIALIZED = \"Logged In, Wallet Uninitialized\", a.LOGGED_IN_NEW_DEVICE = \"Logged In, New Device\", a.LOGGED_IN_WALLET_INITIALIZED = \"Logged In, Wallet Initialized\", a))(P || {});\n\nvar F = new Map, h = class {\n    getItem(e) {\n        return i(this, null, function*() {\n            var t;\n            return this.isSupported ? window.localStorage.getItem(e) : (t = F.get(e)) != null ? t : null;\n        });\n    }\n    setItem(e, t) {\n        return i(this, null, function*() {\n            if (this.isSupported) return window.localStorage.setItem(e, t);\n            F.set(e, t);\n        });\n    }\n    removeItem(e) {\n        return i(this, null, function*() {\n            let t = yield this.getItem(e);\n            return this.isSupported && t ? (window.localStorage.removeItem(e), !0) : !1;\n        });\n    }\n    saveAuthCookie(e) {\n        return i(this, null, function*() {\n            yield this.setItem(I(this.clientId), e);\n        });\n    }\n    getAuthCookie() {\n        return i(this, null, function*() {\n            return this.getItem(I(this.clientId));\n        });\n    }\n    removeAuthCookie() {\n        return i(this, null, function*() {\n            return this.removeItem(I(this.clientId));\n        });\n    }\n    saveDeviceShare(e, t) {\n        return i(this, null, function*() {\n            yield this.saveWalletUserId(t), yield this.setItem(W(this.clientId, t), e);\n        });\n    }\n    getDeviceShare() {\n        return i(this, null, function*() {\n            let e = yield this.getWalletUserId();\n            return e ? this.getItem(W(this.clientId, e)) : null;\n        });\n    }\n    removeDeviceShare() {\n        return i(this, null, function*() {\n            let e = yield this.getWalletUserId();\n            return e ? this.removeItem(W(this.clientId, e)) : !1;\n        });\n    }\n    getWalletUserId() {\n        return i(this, null, function*() {\n            return this.getItem(L(this.clientId));\n        });\n    }\n    saveWalletUserId(e) {\n        return i(this, null, function*() {\n            yield this.setItem(L(this.clientId), e);\n        });\n    }\n    removeWalletUserId() {\n        return i(this, null, function*() {\n            return this.removeItem(L(this.clientId));\n        });\n    }\n    constructor({ clientId: e }){\n        this.isSupported =  true && !!window.localStorage, this.clientId = e;\n    }\n};\n\nfunction v(s) {\n    return new Promise((e)=>{\n        setTimeout(e, s * 1e3);\n    });\n}\nvar ee = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    colorScheme: \"light\",\n    position: \"fixed\",\n    top: \"0px\",\n    right: \"0px\",\n    zIndex: \"2147483646\",\n    display: \"none\"\n}, G = new Map, f = class {\n    onIframeLoadedInitVariables() {\n        return i(this, null, function*() {\n            return {};\n        });\n    }\n    onIframeLoadHandler(e, t, r) {\n        return ()=>i(this, null, function*() {\n                yield new Promise((o, n)=>i(this, null, function*() {\n                        var p;\n                        let d = new MessageChannel;\n                        d.port1.onmessage = (m)=>{\n                            let { data: c } = m;\n                            return d.port1.close(), c.success ? (G.set(e.src, !0), r && r(), o(!0)) : n(new Error(c.error));\n                        }, yield v(t);\n                        let l = \"initIframe\";\n                        (p = e == null ? void 0 : e.contentWindow) == null || p.postMessage({\n                            eventType: l,\n                            data: yield this.onIframeLoadedInitVariables()\n                        }, \"\".concat((0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()).concat(E), [\n                            d.port2\n                        ]);\n                    }));\n            });\n    }\n    call(o) {\n        return i(this, arguments, function*(param) {\n            let { procedureName: e, params: t, showIframe: r = !1, injectRecoveryCode: a = {\n                isInjectRecoveryCode: !1\n            } } = param;\n            for(; !G.get(this.iframe.src);)yield v(this.POLLING_INTERVAL_SECONDS);\n            return r && (this.iframe.style.display = \"block\", yield v(.005)), new Promise((d, l)=>{\n                var m;\n                if (a.isInjectRecoveryCode) {\n                    let c = (g)=>i(this, null, function*() {\n                            var U, b;\n                            if (g.origin !== (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)() || g.data.type !== \"paper_getRecoveryCode\" || typeof g.data.userWalletId != \"string\") return;\n                            let V = yield (U = a.getRecoveryCode) == null ? void 0 : U.call(a, g.data.userWalletId);\n                            (b = this.iframe.contentWindow) == null || b.postMessage({\n                                type: \"paper_getRecoveryCode_response\",\n                                recoveryCode: V\n                            }, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()), window.removeEventListener(\"message\", c);\n                        });\n                    window.addEventListener(\"message\", c);\n                }\n                let p = new MessageChannel;\n                p.port1.onmessage = (c)=>i(this, null, function*() {\n                        let { data: g } = c;\n                        p.port1.close(), r && (yield v(.1), this.iframe.style.display = \"none\"), g.success ? d(g.data) : l(new Error(g.error));\n                    }), (m = this.iframe.contentWindow) == null || m.postMessage({\n                    eventType: e,\n                    data: t\n                }, \"\".concat((0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()).concat(E), [\n                    p.port2\n                ]);\n            });\n        });\n    }\n    destroy() {\n        G.delete(this.iframe.src);\n    }\n    constructor({ link: e, iframeId: t, container: r = document.body, iframeStyles: a, onIframeInitialize: o }){\n        this.POLLING_INTERVAL_SECONDS = 1.4;\n        this.POST_LOAD_BUFFER_SECONDS = 1;\n        let n = document.getElementById(t), d = new URL(e), l = \"1.2.5\";\n        if (!l) throw new Error(\"Missing SDK_VERSION env var\");\n        if (d.searchParams.set(\"sdkVersion\", l), !n || n.src != d.href) {\n            if (!n) {\n                n = document.createElement(\"iframe\");\n                let p = u(u({}, ee), a);\n                Object.assign(n.style, p), n.setAttribute(\"id\", t), n.setAttribute(\"fetchpriority\", \"high\"), r.appendChild(n);\n            }\n            n.src = d.href, n.setAttribute(\"data-version\", l), n.onload = this.onIframeLoadHandler(n, this.POST_LOAD_BUFFER_SECONDS, o);\n        }\n        this.iframe = n;\n    }\n};\nvar _ = class extends f {\n    onIframeLoadedInitVariables() {\n        return i(this, null, function*() {\n            let t = new h({\n                clientId: this.clientId\n            });\n            return {\n                authCookie: yield t.getAuthCookie(),\n                deviceShareStored: yield t.getDeviceShare(),\n                walletUserId: yield t.getWalletUserId(),\n                clientId: this.clientId\n            };\n        });\n    }\n    constructor({ clientId: t, customizationOptions: r }){\n        super({\n            iframeId: ie,\n            link: re({\n                clientId: t,\n                path: E,\n                queryParams: r\n            }).href,\n            container: document.body\n        });\n        this.clientId = t;\n    }\n};\nfunction re(param) {\n    let { clientId: s, path: e, queryParams: t } = param;\n    var a;\n    let r = new URL(e, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)());\n    if (t) for (let o of Object.keys(t))r.searchParams.set(o, ((a = t[o]) == null ? void 0 : a.toString()) || \"\");\n    return r.searchParams.set(\"clientId\", s), r;\n}\nvar ie = \"paper-embedded-wallet-iframe\";\n\nvar A = class {\n    sendPaperEmailLoginOtp(r) {\n        return i(this, arguments, function*(param) {\n            let { email: e, recoveryShareManagement: t } = param;\n            yield this.preLogin();\n            let { isNewUser: a, isNewDevice: o, recoveryShareManagement: n } = yield this.LoginQuerier.call({\n                procedureName: \"sendPaperEmailLoginOtp\",\n                params: {\n                    email: e,\n                    recoveryShareManagement: t\n                }\n            });\n            return {\n                isNewUser: a,\n                isNewDevice: o,\n                recoveryShareManagement: n\n            };\n        });\n    }\n    constructor({ querier: e, preLogin: t, postLogin: r, clientId: a }){\n        this.LoginQuerier = e, this.preLogin = t, this.postLogin = r, this.clientId = a;\n    }\n};\nvar C = class extends A {\n    loginWithPaperModal() {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let t = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(t);\n        });\n    }\n    getGoogleLoginUrl() {\n        return i(this, null, function*() {\n            return yield this.LoginQuerier.call({\n                procedureName: \"getHeadlessGoogleLoginLink\",\n                params: void 0\n            });\n        });\n    }\n    loginWithGoogle(t) {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let r = t == null ? void 0 : t.openedWindow, a = !1;\n            if (r || (r = window.open(\"\", \"Login\", \"width=350, height=500\"), a = !0), !r) throw new Error(\"Something went wrong opening pop-up\");\n            yield this.preLogin();\n            let { loginLink: o } = yield this.getGoogleLoginUrl();\n            r.location.href = o;\n            let n = yield new Promise((d, l)=>{\n                let p = window.setInterval(()=>i(this, null, function*() {\n                        r && r.closed && (clearInterval(p), window.removeEventListener(\"message\", m), l(new Error(\"User closed login window\")));\n                    }), 1e3), m = (c)=>i(this, null, function*() {\n                        if (c.origin === (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()) {\n                            if (typeof c.data != \"object\") {\n                                l(new Error(\"Invalid event data\"));\n                                return;\n                            }\n                            switch(c.data.eventType){\n                                case \"userLoginSuccess\":\n                                    {\n                                        window.removeEventListener(\"message\", m), clearInterval(p), this.closeWindow({\n                                            isWindowOpenedByFn: a,\n                                            win: r,\n                                            closeOpenedWindow: t == null ? void 0 : t.closeOpenedWindow\n                                        }), c.data.authResult && d(c.data.authResult);\n                                        break;\n                                    }\n                                case \"userLoginFailed\":\n                                    {\n                                        window.removeEventListener(\"message\", m), clearInterval(p), this.closeWindow({\n                                            isWindowOpenedByFn: a,\n                                            win: r,\n                                            closeOpenedWindow: t == null ? void 0 : t.closeOpenedWindow\n                                        }), l(new Error(c.data.error));\n                                        break;\n                                    }\n                                case \"injectDeveloperClientId\":\n                                    {\n                                        r == null || r.postMessage({\n                                            eventType: \"injectDeveloperClientIdResult\",\n                                            developerClientId: this.clientId\n                                        }, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)());\n                                        break;\n                                    }\n                            }\n                        }\n                    });\n                window.addEventListener(\"message\", m);\n            });\n            return this.postLogin({\n                storedToken: y(u({}, n.storedToken), {\n                    shouldStoreCookieString: !0\n                }),\n                walletDetails: y(u({}, n.walletDetails), {\n                    isIframeStorageEnabled: !1\n                })\n            });\n        });\n    }\n    loginWithPaperEmailOtp(r) {\n        return i(this, arguments, function*(param) {\n            let { email: t } = param;\n            yield this.preLogin();\n            let a = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    email: t,\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(a);\n        });\n    }\n    verifyPaperEmailLoginOtp(a) {\n        return i(this, arguments, function*(param) {\n            let { email: t, otp: r } = param;\n            let o = yield this.LoginQuerier.call({\n                procedureName: \"verifyPaperEmailLoginOtp\",\n                params: {\n                    email: t,\n                    otp: r,\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n    constructor(){\n        super(...arguments);\n        this.closeWindow = (param)=>{\n            let { isWindowOpenedByFn: t, win: r, closeOpenedWindow: a } = param;\n            t ? r == null || r.close() : r && a ? a(r) : r && r.close();\n        };\n    }\n};\nvar D = class extends A {\n    loginWithPaperModal(e) {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let t = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: void 0,\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0,\n                    getRecoveryCode: e == null ? void 0 : e.getRecoveryCode\n                }\n            });\n            return this.postLogin(t);\n        });\n    }\n    loginWithGoogle(e) {\n        return i(this, null, function*() {\n            throw new Error(\"loginWithGoogle is not yet supported in the RecoveryShareManagement.USER_MANAGED flow. Please use RecoveryShareManagement.AWS_MANAGED instead.\");\n        });\n    }\n    loginWithPaperEmailOtp(r) {\n        return i(this, arguments, function*(param) {\n            let { email: e, recoveryCode: t } = param;\n            yield this.preLogin();\n            let a = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    email: e,\n                    recoveryCode: t\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(a);\n        });\n    }\n    verifyPaperEmailLoginOtp(a) {\n        return i(this, arguments, function*(param) {\n            let { email: e, otp: t, recoveryCode: r } = param;\n            let o = yield this.LoginQuerier.call({\n                procedureName: \"verifyPaperEmailLoginOtp\",\n                params: {\n                    email: e,\n                    otp: t,\n                    recoveryCode: r\n                },\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n};\nvar M = class {\n    preLogin() {\n        return i(this, null, function*() {\n            yield this.logout();\n        });\n    }\n    postLogin(r) {\n        return i(this, arguments, function*(param) {\n            let { storedToken: e, walletDetails: t } = param;\n            return e.shouldStoreCookieString && (yield this.localStorage.saveAuthCookie(e.cookieString)), yield this.onAuthSuccess({\n                storedToken: e,\n                walletDetails: t\n            });\n        });\n    }\n    loginWithJwtAuth(a) {\n        return i(this, arguments, function*(param) {\n            let { token: e, authProvider: t, recoveryCode: r } = param;\n            yield this.preLogin();\n            let o = yield this.AuthQuerier.call({\n                procedureName: \"loginWithJwtAuthCallback\",\n                params: {\n                    token: e,\n                    authProvider: t,\n                    recoveryCode: r\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n    loginWithPaperModal(e) {\n        return i(this, null, function*() {\n            return yield this.preLogin(), this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithPaperModal() : this.userManagedLogin.loginWithPaperModal(e);\n        });\n    }\n    loginWithPaperEmailOtp(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithPaperEmailOtp({\n                email: e.email\n            }) : this.userManagedLogin.loginWithPaperEmailOtp(e);\n        });\n    }\n    loginWithGoogle(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithGoogle(e) : this.userManagedLogin.loginWithGoogle();\n        });\n    }\n    sendPaperEmailLoginOtp(t) {\n        return i(this, arguments, function*(param) {\n            let { email: e } = param;\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.sendPaperEmailLoginOtp({\n                email: e,\n                recoveryShareManagement: \"AWS_MANAGED\"\n            }) : this.userManagedLogin.sendPaperEmailLoginOtp({\n                email: e\n            });\n        });\n    }\n    verifyPaperEmailLoginOtp(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.verifyPaperEmailLoginOtp(e) : this.userManagedLogin.verifyPaperEmailLoginOtp(e);\n        });\n    }\n    logout() {\n        return i(this, null, function*() {\n            let { success: e } = yield this.AuthQuerier.call({\n                procedureName: \"logout\",\n                params: void 0\n            }), t = yield this.localStorage.removeAuthCookie(), r = yield this.localStorage.removeWalletUserId();\n            return {\n                success: e || t || r\n            };\n        });\n    }\n    constructor({ clientId: e, advancedOptions: t, querier: r, onAuthSuccess: a }){\n        var o;\n        this.clientId = e, this.advancedOptions = {\n            recoveryShareManagement: (o = t == null ? void 0 : t.recoveryShareManagement) != null ? o : \"AWS_MANAGED\"\n        }, this.AuthQuerier = r, this.localStorage = new h({\n            clientId: e\n        }), this.onAuthSuccess = a, this.userManagedLogin = new D({\n            postLogin: (n)=>i(this, null, function*() {\n                    return this.postLogin(n);\n                }),\n            preLogin: ()=>i(this, null, function*() {\n                    yield this.preLogin();\n                }),\n            querier: r,\n            clientId: e\n        }), this.awsManagedLogin = new C({\n            postLogin: (n)=>i(this, null, function*() {\n                    return this.postLogin(n);\n                }),\n            preLogin: ()=>i(this, null, function*() {\n                    yield this.preLogin();\n                }),\n            querier: r,\n            clientId: e\n        });\n    }\n};\n\n\nvar R = class {\n    callContract(a) {\n        return i(this, arguments, function*(param) {\n            let { contractAddress: e, methodArgs: t, methodInterface: r } = param;\n            return yield this.gaslessTransactionQuerier.call({\n                procedureName: \"callContract\",\n                params: {\n                    chain: this.chain,\n                    contractAddress: e,\n                    method: {\n                        args: t,\n                        stub: r\n                    }\n                }\n            });\n        });\n    }\n    constructor({ chain: e, clientId: t, querier: r }){\n        this.chain = e, this.clientId = t, this.gaslessTransactionQuerier = r;\n    }\n};\n\n\nvar T = class extends _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__.Signer {\n    getAddress() {\n        return i(this, null, function*() {\n            let { address: t } = yield this.querier.call({\n                procedureName: \"getAddress\",\n                params: void 0\n            });\n            return t;\n        });\n    }\n    signMessage(t) {\n        return i(this, null, function*() {\n            var o, n, d, l;\n            let r = yield (o = this.provider) == null ? void 0 : o.getNetwork();\n            r && r._defaultProvider;\n            let { signedMessage: a } = yield this.querier.call({\n                procedureName: \"signMessage\",\n                params: {\n                    message: t,\n                    chainId: (l = (d = yield (n = this.provider) == null ? void 0 : n.getNetwork()) == null ? void 0 : d.chainId) != null ? l : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return a;\n        });\n    }\n    signTransaction(t) {\n        return i(this, null, function*() {\n            var a, o, n;\n            let { signedTransaction: r } = yield this.querier.call({\n                procedureName: \"signTransaction\",\n                params: {\n                    transaction: t,\n                    chainId: (n = (o = yield (a = this.provider) == null ? void 0 : a.getNetwork()) == null ? void 0 : o.chainId) != null ? n : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return r;\n        });\n    }\n    _signTypedData(t, r, a) {\n        return i(this, null, function*() {\n            var n, d, l;\n            let { signedTypedData: o } = yield this.querier.call({\n                procedureName: \"signTypedDataV4\",\n                params: {\n                    domain: t,\n                    types: r,\n                    message: a,\n                    chainId: (l = (d = yield (n = this.provider) == null ? void 0 : n.getNetwork()) == null ? void 0 : d.chainId) != null ? l : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return o;\n        });\n    }\n    connect(t) {\n        return new T({\n            clientId: this.clientId,\n            provider: t,\n            querier: this.querier\n        });\n    }\n    constructor({ provider: t, clientId: r, querier: a }){\n        var o;\n        super();\n        this.DEFAULT_ETHEREUM_CHAIN_ID = 5;\n        this.clientId = r, this.querier = a, this.endpoint = (o = t.connection) == null ? void 0 : o.url, (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"provider\", t);\n    }\n};\nvar O = class {\n    postWalletSetUp(o) {\n        return i(this, arguments, function*(param) {\n            let { deviceShareStored: e, walletAddress: t, isIframeStorageEnabled: r, walletUserId: a } = param;\n            return r || (yield this.localStorage.saveDeviceShare(e, a)), {\n                walletAddress: t\n            };\n        });\n    }\n    getUserWalletStatus() {\n        return i(this, null, function*() {\n            let e = yield this.walletManagerQuerier.call({\n                procedureName: \"getUserStatus\",\n                params: void 0\n            });\n            return e.status === \"Logged In, Wallet Initialized\" ? {\n                status: \"Logged In, Wallet Initialized\",\n                user: y(u({}, e.user), {\n                    wallet: this\n                })\n            } : e;\n        });\n    }\n    setChain(t) {\n        return i(this, arguments, function*(param) {\n            let { chain: e } = param;\n            this.chain = e, this.gasless = new R({\n                chain: e,\n                clientId: this.clientId,\n                querier: this.walletManagerQuerier\n            });\n        });\n    }\n    getEthersJsSigner(e) {\n        return i(this, null, function*() {\n            var r;\n            return new T({\n                clientId: this.clientId,\n                provider: (0,_ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.getDefaultProvider)((r = e == null ? void 0 : e.rpcEndpoint) != null ? r : _paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.ChainToPublicRpc[this.chain]),\n                querier: this.walletManagerQuerier\n            });\n        });\n    }\n    constructor({ clientId: e, chain: t, querier: r }){\n        this.clientId = e, this.chain = t, this.walletManagerQuerier = r, this.gasless = new R({\n            chain: t,\n            clientId: e,\n            querier: r\n        }), this.localStorage = new h({\n            clientId: e\n        });\n    }\n};\nvar N = class {\n    getUser() {\n        return i(this, null, function*() {\n            let e = yield this.wallet.getUserWalletStatus();\n            switch(e.status){\n                case \"Logged In, New Device\":\n                case \"Logged In, Wallet Uninitialized\":\n                    return yield this.auth.logout(), this.getUser();\n                case \"Logged Out\":\n                    return {\n                        status: \"Logged Out\"\n                    };\n                case \"Logged In, Wallet Initialized\":\n                    return u({\n                        status: \"Logged In, Wallet Initialized\"\n                    }, e.user);\n            }\n        });\n    }\n    constructor({ clientId: e, chain: t, styles: r, advancedOptions: a, onAuthSuccess: o }){\n        this.clientId = e, this.querier = new _({\n            clientId: e,\n            customizationOptions: r\n        }), this.wallet = new O({\n            clientId: e,\n            chain: t,\n            querier: this.querier\n        }), this.auth = new M({\n            clientId: e,\n            advancedOptions: u({\n                recoveryShareManagement: \"USER_MANAGED\"\n            }, a != null ? a : {}),\n            querier: this.querier,\n            onAuthSuccess: (n)=>i(this, null, function*() {\n                    return yield this.wallet.postWalletSetUp(y(u({}, n.walletDetails), {\n                        walletUserId: n.storedToken.authDetails.userWalletId\n                    })), yield this.querier.call({\n                        procedureName: \"initIframe\",\n                        params: {\n                            deviceShareStored: n.walletDetails.deviceShareStored,\n                            clientId: this.clientId,\n                            walletUserId: n.storedToken.authDetails.userWalletId,\n                            authCookie: n.storedToken.cookieString\n                        }\n                    }), o == null || o(n), {\n                        user: {\n                            status: \"Logged In, Wallet Initialized\",\n                            authDetails: n.storedToken.authDetails,\n                            wallet: this.wallet,\n                            walletAddress: n.walletDetails.walletAddress\n                        }\n                    };\n                })\n        });\n    }\n};\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs\n"));

/***/ })

}]);