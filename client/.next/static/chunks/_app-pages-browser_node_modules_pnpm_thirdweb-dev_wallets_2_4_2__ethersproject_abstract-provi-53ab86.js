"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_wallets_2_4_2__ethersproject_abstract-provi-53ab86"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   g: function() { return /* binding */ getValidPublicRPCUrl; },\n/* harmony export */   i: function() { return /* binding */ isTwUrl; }\n/* harmony export */ });\n/* harmony import */ var _thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @thirdweb-dev/chains */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+chains@0.1.64/node_modules/@thirdweb-dev/chains/dist/thirdweb-dev-chains.esm.js\");\n\nfunction isTwUrl(url) {\n    const host = new URL(url).hostname;\n    return host.endsWith(\".thirdweb.com\") || host.endsWith(\".thirdweb-dev.com\") || host === \"localhost\" || host === \"0.0.0.0\";\n}\nfunction getValidPublicRPCUrl(chain) {\n    return (0,_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_0__.getValidChainRPCs)(chain).map((rpc)=>{\n        try {\n            const url = new URL(rpc);\n            // remove client id from url\n            if (url.hostname.endsWith(\".thirdweb.com\")) {\n                url.pathname = \"\";\n                url.search = \"\";\n            }\n            return url.toString();\n        } catch (e) {\n            return rpc;\n        }\n    });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdGhpcmR3ZWItZGV2K3dhbGxldHNAMi40LjJfQGV0aGVyc3Byb2plY3QrYWJzdHJhY3QtcHJvdmlkZXJANS43LjBfQGV0aGVyc3Byb2plY3QrYWJzdHJhY3Qtc2lfcTN1aGo1NHZ3MnRxY2R4b24yNGN2Z3BsYmEvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvd2FsbGV0cy9kaXN0L3VybC1hNDUyMTliZC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUQ7QUFFekQsU0FBU0MsUUFBUUMsR0FBRztJQUNsQixNQUFNQyxPQUFPLElBQUlDLElBQUlGLEtBQUtHLFFBQVE7SUFDbEMsT0FBT0YsS0FBS0csUUFBUSxDQUFDLG9CQUFvQkgsS0FBS0csUUFBUSxDQUFDLHdCQUF3QkgsU0FBUyxlQUFlQSxTQUFTO0FBQ2xIO0FBQ0EsU0FBU0kscUJBQXFCQyxLQUFLO0lBQ2pDLE9BQU9SLHVFQUFpQkEsQ0FBQ1EsT0FBT0MsR0FBRyxDQUFDQyxDQUFBQTtRQUNsQyxJQUFJO1lBQ0YsTUFBTVIsTUFBTSxJQUFJRSxJQUFJTTtZQUNwQiw0QkFBNEI7WUFDNUIsSUFBSVIsSUFBSUcsUUFBUSxDQUFDQyxRQUFRLENBQUMsa0JBQWtCO2dCQUMxQ0osSUFBSVMsUUFBUSxHQUFHO2dCQUNmVCxJQUFJVSxNQUFNLEdBQUc7WUFDZjtZQUNBLE9BQU9WLElBQUlXLFFBQVE7UUFDckIsRUFBRSxPQUFPQyxHQUFHO1lBQ1YsT0FBT0o7UUFDVDtJQUNGO0FBQ0Y7QUFFbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0aGlyZHdlYi1kZXYrd2FsbGV0c0AyLjQuMl9AZXRoZXJzcHJvamVjdCthYnN0cmFjdC1wcm92aWRlckA1LjcuMF9AZXRoZXJzcHJvamVjdCthYnN0cmFjdC1zaV9xM3VoajU0dncydHFjZHhvbjI0Y3ZncGxiYS9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi93YWxsZXRzL2Rpc3QvdXJsLWE0NTIxOWJkLmJyb3dzZXIuZXNtLmpzP2Y5YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VmFsaWRDaGFpblJQQ3MgfSBmcm9tICdAdGhpcmR3ZWItZGV2L2NoYWlucyc7XG5cbmZ1bmN0aW9uIGlzVHdVcmwodXJsKSB7XG4gIGNvbnN0IGhvc3QgPSBuZXcgVVJMKHVybCkuaG9zdG5hbWU7XG4gIHJldHVybiBob3N0LmVuZHNXaXRoKFwiLnRoaXJkd2ViLmNvbVwiKSB8fCBob3N0LmVuZHNXaXRoKFwiLnRoaXJkd2ViLWRldi5jb21cIikgfHwgaG9zdCA9PT0gXCJsb2NhbGhvc3RcIiB8fCBob3N0ID09PSBcIjAuMC4wLjBcIjtcbn1cbmZ1bmN0aW9uIGdldFZhbGlkUHVibGljUlBDVXJsKGNoYWluKSB7XG4gIHJldHVybiBnZXRWYWxpZENoYWluUlBDcyhjaGFpbikubWFwKHJwYyA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocnBjKTtcbiAgICAgIC8vIHJlbW92ZSBjbGllbnQgaWQgZnJvbSB1cmxcbiAgICAgIGlmICh1cmwuaG9zdG5hbWUuZW5kc1dpdGgoXCIudGhpcmR3ZWIuY29tXCIpKSB7XG4gICAgICAgIHVybC5wYXRobmFtZSA9IFwiXCI7XG4gICAgICAgIHVybC5zZWFyY2ggPSBcIlwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVybC50b1N0cmluZygpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBycGM7XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgZ2V0VmFsaWRQdWJsaWNSUENVcmwgYXMgZywgaXNUd1VybCBhcyBpIH07XG4iXSwibmFtZXMiOlsiZ2V0VmFsaWRDaGFpblJQQ3MiLCJpc1R3VXJsIiwidXJsIiwiaG9zdCIsIlVSTCIsImhvc3RuYW1lIiwiZW5kc1dpdGgiLCJnZXRWYWxpZFB1YmxpY1JQQ1VybCIsImNoYWluIiwibWFwIiwicnBjIiwicGF0aG5hbWUiLCJzZWFyY2giLCJ0b1N0cmluZyIsImUiLCJnIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.browser.esm.js":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.browser.esm.js ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoDefiWalletConnector: function() { return /* binding */ CryptoDefiWalletConnector; }\n/* harmony export */ });\n/* harmony import */ var _dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/defineProperty-d7c057bf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/defineProperty-d7c057bf.browser.esm.js\");\n/* harmony import */ var _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/errors-9f6736cb.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/errors-9f6736cb.browser.esm.js\");\n/* harmony import */ var _dist_walletIds_afeb5af2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../dist/walletIds-afeb5af2.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/walletIds-afeb5af2.browser.esm.js\");\n/* harmony import */ var _injected_dist_thirdweb_dev_wallets_evm_connectors_injected_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _dist_getInjectedCryptoDefiWalletProvider_3a00394e_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/getInjectedCryptoDefiWalletProvider-3a00394e.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/getInjectedCryptoDefiWalletProvider-3a00394e.browser.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass CryptoDefiWalletConnector extends _injected_dist_thirdweb_dev_wallets_evm_connectors_injected_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.InjectedConnector {\n    /**\n   * Connect to injected DefiWallet provider\n   */ async connect() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        try {\n            var _this_options, _this_options1;\n            const provider = await this.getProvider();\n            if (!provider) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n            }\n            this.setupListeners();\n            // emit \"connecting\" event\n            this.emit(\"message\", {\n                type: \"connecting\"\n            });\n            // Attempt to show wallet select prompt with `wallet_requestPermissions` when\n            // `shimDisconnect` is active and account is in disconnected state (flag in storage)\n            let account = null;\n            if (((_this_options = this.options) === null || _this_options === void 0 ? void 0 : _this_options.shimDisconnect) && !Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))) {\n                account = await this.getAccount().catch(()=>null);\n                const isConnected = !!account;\n                if (isConnected) {\n                    // Attempt to show another prompt for selecting wallet if already connected\n                    try {\n                        await provider.request({\n                            method: \"wallet_requestPermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        });\n                    } catch (error) {\n                        // Not all injected providers support `wallet_requestPermissions` (e.g. iOS).\n                        // Only bubble up error if user rejects request\n                        if (this.isUserRejectedRequestError(error)) {\n                            throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.U(error);\n                        }\n                    }\n                }\n            }\n            // if account is not already set, request accounts and use the first account\n            if (!account) {\n                const accounts = await provider.request({\n                    method: \"eth_requestAccounts\"\n                });\n                account = ethers__WEBPACK_IMPORTED_MODULE_3__.getAddress(accounts[0]);\n            }\n            // get currently connected chainId\n            let connectedChainId = await this.getChainId();\n            // check if connected chain is unsupported\n            let isUnsupported = this.isChainUnsupported(connectedChainId);\n            // if chainId is given, but does not match the currently connected chainId, switch to the given chainId\n            if (options.chainId && connectedChainId !== options.chainId) {\n                try {\n                    await this.switchChain(options.chainId);\n                    // recalculate the chainId and isUnsupported\n                    connectedChainId = options.chainId;\n                    isUnsupported = this.isChainUnsupported(options.chainId);\n                } catch (e) {\n                    console.error(\"Could not switch to chain id : \".concat(options.chainId), e);\n                }\n            }\n            // if shimDisconnect is enabled\n            if ((_this_options1 = this.options) === null || _this_options1 === void 0 ? void 0 : _this_options1.shimDisconnect) {\n                // add shimDisconnectKey in storage - this signals that connector is \"connected\"\n                await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n            }\n            const connectionInfo = {\n                chain: {\n                    id: connectedChainId,\n                    unsupported: isUnsupported\n                },\n                provider: provider,\n                account\n            };\n            this.emit(\"connect\", connectionInfo);\n            return connectionInfo;\n        } catch (error) {\n            if (this.isUserRejectedRequestError(error)) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.U(error);\n            }\n            if (error.code === -32002) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.R(error);\n            }\n            throw error;\n        }\n    }\n    constructor(arg){\n        const defaultOptions = {\n            name: \"Crypto Defi Wallet\",\n            shimDisconnect: true,\n            shimChainChangedDisconnect: true,\n            getProvider: _dist_getInjectedCryptoDefiWalletProvider_3a00394e_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.g\n        };\n        const options = {\n            ...defaultOptions,\n            ...arg.options\n        };\n        super({\n            chains: arg.chains,\n            options,\n            connectorStorage: arg.connectorStorage\n        });\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this, \"id\", _dist_walletIds_afeb5af2_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.w.cryptoDefiWallet);\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js":
/*!*********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InjectedConnector: function() { return /* binding */ InjectedConnector; }\n/* harmony export */ });\n/* harmony import */ var _dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../dist/defineProperty-d7c057bf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/defineProperty-d7c057bf.browser.esm.js\");\n/* harmony import */ var _dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/classPrivateFieldSet-a5db7c83.browser.esm.js\");\n/* harmony import */ var _dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../dist/WagmiConnector-2f14002d.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js\");\n/* harmony import */ var _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/errors-9f6736cb.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/errors-9f6736cb.browser.esm.js\");\n/* harmony import */ var _dist_assertWindowEthereum_88295886_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../dist/assertWindowEthereum-88295886.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/assertWindowEthereum-88295886.browser.esm.js\");\n/* harmony import */ var _dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../dist/url-a45219bd.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+providers@5.7.2/node_modules/@ethersproject/providers/lib.esm/web3-provider.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\nfunction getInjectedName(ethereum) {\n    var _ethereum_providers;\n    if (!ethereum) {\n        return \"Injected\";\n    }\n    const getName = (provider)=>{\n        if (provider.isAvalanche) {\n            return \"Core Wallet\";\n        }\n        if (provider.isBitKeep) {\n            return \"BitKeep\";\n        }\n        if (provider.isBraveWallet) {\n            return \"Brave Wallet\";\n        }\n        if (provider.isCoinbaseWallet) {\n            return \"Coinbase Wallet\";\n        }\n        if (provider.isExodus) {\n            return \"Exodus\";\n        }\n        if (provider.isFrame) {\n            return \"Frame\";\n        }\n        if (provider.isKuCoinWallet) {\n            return \"KuCoin Wallet\";\n        }\n        if (provider.isMathWallet) {\n            return \"MathWallet\";\n        }\n        if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) {\n            return \"1inch Wallet\";\n        }\n        if (provider.isOpera) {\n            return \"Opera\";\n        }\n        if (provider.isPortal) {\n            return \"Ripio Portal\";\n        }\n        if (provider.isTally) {\n            return \"Tally\";\n        }\n        if (provider.isTokenPocket) {\n            return \"TokenPocket\";\n        }\n        if (provider.isTokenary) {\n            return \"Tokenary\";\n        }\n        if (provider.isTrust || provider.isTrustWallet) {\n            return \"Trust Wallet\";\n        }\n        if (provider.isMetaMask) {\n            return \"MetaMask\";\n        }\n    };\n    // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n    if ((_ethereum_providers = ethereum.providers) === null || _ethereum_providers === void 0 ? void 0 : _ethereum_providers.length) {\n        // Deduplicate names using Set\n        // Coinbase Wallet puts multiple providers in `ethereum.providers`\n        const nameSet = new Set();\n        let unknownCount = 1;\n        for (const provider of ethereum.providers){\n            let name = getName(provider);\n            if (!name) {\n                name = \"Unknown Wallet #\".concat(unknownCount);\n                unknownCount += 1;\n            }\n            nameSet.add(name);\n        }\n        const names = [\n            ...nameSet\n        ];\n        if (names.length) {\n            return names;\n        }\n        var _names_;\n        return (_names_ = names[0]) !== null && _names_ !== void 0 ? _names_ : \"Injected\";\n    }\n    var _getName;\n    return (_getName = getName(ethereum)) !== null && _getName !== void 0 ? _getName : \"Injected\";\n}\nvar _provider = /*#__PURE__*/ new WeakMap();\nclass InjectedConnector extends _dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.W {\n    /**\n   * * Connect to the injected provider\n   * * switch to the given chain if `chainId` is specified as an argument\n   */ async connect() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        try {\n            const provider = await this.getProvider();\n            if (!provider) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n            }\n            this.setupListeners();\n            // emit \"connecting\" event\n            this.emit(\"message\", {\n                type: \"connecting\"\n            });\n            // request account addresses from injected provider\n            const accountAddresses = await provider.request({\n                method: \"eth_requestAccounts\"\n            });\n            // get the first account address\n            const firstAccountAddress = ethers__WEBPACK_IMPORTED_MODULE_3__.getAddress(accountAddresses[0]);\n            // Switch to given chain if a chainId is specified\n            let connectedChainId = await this.getChainId();\n            // Check if currently connected chain is unsupported\n            // chainId is considered unsupported if chainId is not in the list of this.chains array\n            let isUnsupported = this.isChainUnsupported(connectedChainId);\n            // if chainId is specified and it is not the same as the currently connected chain\n            if (options.chainId && connectedChainId !== options.chainId) {\n                // switch to the given chain\n                try {\n                    await this.switchChain(options.chainId);\n                    // recalculate connectedChainId and isUnsupported\n                    connectedChainId = options.chainId;\n                    isUnsupported = this.isChainUnsupported(options.chainId);\n                } catch (e) {\n                    console.error(\"Could not switch to chain id: \".concat(options.chainId), e);\n                }\n            }\n            // if shimDisconnect is enabled\n            if (this.options.shimDisconnect) {\n                // add the shim shimDisconnectKey => it signals that wallet is connected\n                await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n            }\n            const connectionInfo = {\n                account: firstAccountAddress,\n                chain: {\n                    id: connectedChainId,\n                    unsupported: isUnsupported\n                },\n                provider\n            };\n            this.emit(\"connect\", connectionInfo);\n            return connectionInfo;\n        } catch (error) {\n            if (this.isUserRejectedRequestError(error)) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.U(error);\n            }\n            if (error.code === -32002) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.R(error);\n            }\n            throw error;\n        }\n    }\n    /**\n   * disconnect from the injected provider\n   */ async disconnect() {\n        // perform cleanup\n        const provider = await this.getProvider();\n        if (!(provider === null || provider === void 0 ? void 0 : provider.removeListener)) {\n            return;\n        }\n        provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n        provider.removeListener(\"chainChanged\", this.onChainChanged);\n        provider.removeListener(\"disconnect\", this.onDisconnect);\n        // if shimDisconnect is enabled\n        if (this.options.shimDisconnect) {\n            // Remove the shimDisconnectKey => it signals that wallet is disconnected\n            await this.connectorStorage.removeItem(this.shimDisconnectKey);\n        }\n    }\n    /**\n   * @returns The first account address from the injected provider\n   */ async getAccount() {\n        const provider = await this.getProvider();\n        if (!provider) {\n            throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n        }\n        const accounts = await provider.request({\n            method: \"eth_accounts\"\n        });\n        // return checksum address\n        // https://docs.ethers.org/v5/api/utils/address/#utils-getAddress\n        return ethers__WEBPACK_IMPORTED_MODULE_3__.getAddress(accounts[0]);\n    }\n    /**\n   * @returns The `chainId` of the currently connected chain from injected provider normalized to a `number`\n   */ async getChainId() {\n        const provider = await this.getProvider();\n        if (!provider) {\n            throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n        }\n        return provider.request({\n            method: \"eth_chainId\"\n        }).then(_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.n);\n    }\n    /**\n   * get the injected provider\n   */ async getProvider() {\n        const provider = this.options.getProvider();\n        if (provider) {\n            (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, _provider, provider);\n        // setting listeners\n        }\n        return (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.b)(this, _provider);\n    }\n    /**\n   * get a `signer` for given `chainId`\n   */ async getSigner() {\n        let { chainId } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const [provider, account] = await Promise.all([\n            this.getProvider(),\n            this.getAccount()\n        ]);\n        // ethers.providers.Web3Provider\n        return new ethers__WEBPACK_IMPORTED_MODULE_6__.Web3Provider(provider, chainId).getSigner(account);\n    }\n    /**\n   *\n   * @returns `true` if the connector is connected and address is available, else `false`\n   */ async isAuthorized() {\n        try {\n            // `false` if connector is disconnected\n            if (this.options.shimDisconnect && // If shim does not exist in storage, wallet is disconnected\n            !Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey))) {\n                return false;\n            }\n            const provider = await this.getProvider();\n            if (!provider) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n            }\n            // `false` if no account address available, else `true`\n            const account = await this.getAccount();\n            return !!account;\n        } catch (e) {\n            // `false` if any error thrown\n            return false;\n        }\n    }\n    /**\n   * switch to given chain\n   */ async switchChain(chainId) {\n        const provider = await this.getProvider();\n        if (!provider) {\n            throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.a();\n        }\n        const chainIdHex = ethers__WEBPACK_IMPORTED_MODULE_7__.hexValue(chainId);\n        try {\n            // request provider to switch to given chainIdHex\n            await provider.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [\n                    {\n                        chainId: chainIdHex\n                    }\n                ]\n            });\n            const chain = this.chains.find((_chain)=>_chain.chainId === chainId);\n            if (chain) {\n                return chain;\n            }\n            return {\n                chainId: chainId,\n                name: \"Chain \".concat(chainIdHex),\n                slug: \"\".concat(chainIdHex),\n                nativeCurrency: {\n                    name: \"Ether\",\n                    decimals: 18,\n                    symbol: \"ETH\"\n                },\n                rpc: [\n                    \"\"\n                ],\n                chain: \"\",\n                shortName: \"\",\n                testnet: true\n            };\n        } catch (error) {\n            var // Unwrapping for MetaMask Mobile\n            // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n            _error_data_originalError, _error_data;\n            // if could not switch to given chainIdHex\n            // if tried to connect to a chain that is not configured\n            const chain = this.chains.find((_chain)=>_chain.chainId === chainId);\n            if (!chain) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.C({\n                    chainId,\n                    connectorId: this.id\n                });\n            }\n            // if chain is not added to provider\n            if (error.code === 4902 || (error === null || error === void 0 ? void 0 : (_error_data = error.data) === null || _error_data === void 0 ? void 0 : (_error_data_originalError = _error_data.originalError) === null || _error_data_originalError === void 0 ? void 0 : _error_data_originalError.code) === 4902) {\n                try {\n                    // request provider to add chain\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: chainIdHex,\n                                chainName: chain.name,\n                                nativeCurrency: chain.nativeCurrency,\n                                rpcUrls: (0,_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.g)(chain),\n                                // no client id on purpose here\n                                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n                            }\n                        ]\n                    });\n                    return chain;\n                } catch (addError) {\n                    // if user rejects request to add chain\n                    if (this.isUserRejectedRequestError(addError)) {\n                        throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.U(error);\n                    }\n                    // else other error\n                    throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.A();\n                }\n            }\n            if (this.isUserRejectedRequestError(error)) {\n                throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.U(error);\n            }\n            throw new _dist_errors_9f6736cb_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.S(error);\n        }\n    }\n    async setupListeners() {\n        const provider = await this.getProvider();\n        if (provider.on) {\n            provider.on(\"accountsChanged\", this.onAccountsChanged);\n            provider.on(\"chainChanged\", this.onChainChanged);\n            provider.on(\"disconnect\", this.onDisconnect);\n        }\n    }\n    isUserRejectedRequestError(error) {\n        return error.code === 4001;\n    }\n    constructor(arg){\n        const defaultOptions = {\n            shimDisconnect: true,\n            getProvider: ()=>{\n                if ((0,_dist_assertWindowEthereum_88295886_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(globalThis.window)) {\n                    return globalThis.window.ethereum;\n                }\n            }\n        };\n        const options = {\n            ...defaultOptions,\n            ...arg.options\n        };\n        super({\n            chains: arg.chains,\n            options\n        });\n        /**\n     * Name of the injected connector\n     */ /**\n     * Whether the connector is ready to be used\n     *\n     * `true` if the injected provider is found\n     */ (0,_dist_classPrivateFieldSet_a5db7c83_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this, _provider, {\n            writable: true,\n            value: void 0\n        });\n        (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n        /**\n     * handles the `accountsChanged` event from the provider\n     * * emits `change` event if connected to a different account\n     * * emits `disconnect` event if no accounts available\n     */ (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"onAccountsChanged\", async (accounts)=>{\n            if (accounts.length === 0) {\n                this.emit(\"disconnect\");\n            } else {\n                this.emit(\"change\", {\n                    account: ethers__WEBPACK_IMPORTED_MODULE_3__.getAddress(accounts[0])\n                });\n            }\n        });\n        /**\n     * handles the `chainChanged` event from the provider\n     * * emits `change` event if connected to a different chain\n     */ (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"onChainChanged\", (chainId)=>{\n            const id = (0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.n)(chainId);\n            const unsupported = this.isChainUnsupported(id);\n            this.emit(\"change\", {\n                chain: {\n                    id,\n                    unsupported\n                }\n            });\n        });\n        /**\n     * handles the `disconnect` event from the provider\n     * * emits `disconnect` event\n     */ (0,_dist_defineProperty_d7c057bf_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__._)(this, \"onDisconnect\", async (error)=>{\n            // We need this as MetaMask can emit the \"disconnect\" event upon switching chains.\n            // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n            // https://github.com/MetaMask/providers/pull/120\n            if (error.code === 1013) {\n                const provider = await this.getProvider();\n                if (provider) {\n                    try {\n                        const isAuthorized = await this.getAccount();\n                        if (isAuthorized) {\n                            return;\n                        }\n                    } catch (e) {\n                    // If we can't get the account anymore, continue with disconnect\n                    }\n                }\n            }\n            this.emit(\"disconnect\");\n            // Remove `shimDisconnect` => it signals that wallet is disconnected\n            if (this.options.shimDisconnect) {\n                await this.connectorStorage.removeItem(this.shimDisconnectKey);\n            }\n        });\n        const _provider2 = options.getProvider();\n        // set the name of the connector\n        if (typeof options.name === \"string\") {\n            // if name is given, use that\n            this.name = options.name;\n        } else if (_provider2) {\n            // if injected provider is detected, get name from it\n            const detectedName = getInjectedName(_provider2);\n            if (options.name) {\n                this.name = options.name(detectedName);\n            } else {\n                if (typeof detectedName === \"string\") {\n                    this.name = detectedName;\n                } else {\n                    this.name = detectedName[0];\n                }\n            }\n        } else {\n            // else default to \"Injected\"\n            this.name = \"Injected\";\n        }\n        this.id = \"injected\";\n        this.ready = !!_provider2;\n        this.connectorStorage = arg.connectorStorage;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+wallets@2.4.2_@ethersproject+abstract-provider@5.7.0_@ethersproject+abstract-si_q3uhj54vw2tqcdxon24cvgplba/node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js\n"));

/***/ })

}]);