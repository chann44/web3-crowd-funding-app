"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_sdk_4_0_27_ethers_5_7_2_typescript_5_0_2_no-7f2e03"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc721; }\n/* harmony export */ });\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./erc-721-581162b5.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-581162b5.browser.esm.js\");\n\n\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */ class StandardErc721 {\n    get chainId() {\n        return this._chainId;\n    }\n    /**\n   * @internal\n   */ onNetworkUpdated(network) {\n        this.contractWrapper.updateSignerOrProvider(network);\n    }\n    getAddress() {\n        return this.contractWrapper.address;\n    }\n    /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */ async getAll(queryParams) {\n        return this.erc721.getAll(queryParams);\n    }\n    /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs in the contract.\n   */ async getOwned(walletAddress, queryParams) {\n        if (walletAddress) {\n            walletAddress = await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(walletAddress);\n        }\n        return this.erc721.getOwned(walletAddress, queryParams);\n    }\n    /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */ async getOwnedTokenIds(walletAddress) {\n        if (walletAddress) {\n            walletAddress = await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(walletAddress);\n        }\n        return this.erc721.getOwnedTokenIds(walletAddress);\n    }\n    /**\n   * Get total minted supply count\n   */ async totalSupply() {\n        return this.erc721.totalCirculatingSupply();\n    }\n    /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */ async get(tokenId) {\n        return this.erc721.get(tokenId);\n    }\n    /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns The address of the owner\n   */ async ownerOf(tokenId) {\n        return this.erc721.ownerOf(tokenId);\n    }\n    /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */ async balanceOf(address) {\n        return this.erc721.balanceOf(address);\n    }\n    /**\n   * Get NFT Balance for the currently connected wallet\n   */ async balance() {\n        return this.erc721.balance();\n    }\n    /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */ async isApproved(address, operator) {\n        return this.erc721.isApproved(address, operator);\n    }\n    constructor(contractWrapper, storage, chainId){\n        /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */ this.transfer = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (to, tokenId)=>{\n            return this.erc721.transfer.prepare(to, tokenId);\n        });\n        /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */ this.setApprovalForAll = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (operator, approved)=>{\n            return this.erc721.setApprovalForAll.prepare(operator, approved);\n        });\n        /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */ this.setApprovalForToken = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (operator, tokenId)=>{\n            return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.T.fromContractWrapper({\n                contractWrapper: this.contractWrapper,\n                method: \"approve\",\n                args: [\n                    await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(operator),\n                    tokenId\n                ]\n            });\n        });\n        this.contractWrapper = contractWrapper;\n        this.storage = storage;\n        this.erc721 = new _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.E(this.contractWrapper, this.storage, chainId);\n        this._chainId = chainId;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/signature-drop-15a37e28.browser.esm.js":
/*!**************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/signature-drop-15a37e28.browser.esm.js ***!
  \**************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignatureDrop: function() { return /* binding */ SignatureDrop; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var _QueryParams_08980575_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./QueryParams-08980575.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/QueryParams-08980575.browser.esm.js\");\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contract-appuri-a2734267.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-a2734267.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./fetchCurrencyValue-5031b794.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-5031b794.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-owner-8ed1c8ac.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-owner-8ed1c8ac.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_3eb1b057_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./contract-platform-fee-3eb1b057.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-3eb1b057.browser.esm.js\");\n/* harmony import */ var _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-roles-275dcf7c.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-roles-275dcf7c.browser.esm.js\");\n/* harmony import */ var _contract_sales_dc79a212_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-sales-dc79a212.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-sales-dc79a212.browser.esm.js\");\n/* harmony import */ var _drop_claim_conditions_b49fc920_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./drop-claim-conditions-b49fc920.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/drop-claim-conditions-b49fc920.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_9e4b16d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-721-standard-9e4b16d8.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js\");\n/* harmony import */ var _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./erc-721-581162b5.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-581162b5.browser.esm.js\");\n/* harmony import */ var _thirdweb_checkout_bd3756d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./thirdweb-checkout-bd3756d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-bd3756d4.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(app-pages-browser)/./node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(app-pages-browser)/./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"(app-pages-browser)/./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Setup a collection of NFTs where when it comes to minting, you can authorize\n * some external party to mint tokens on your contract, and specify what exactly\n * will be minted by that external party..\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"signature-drop\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc721 instead\n */ class SignatureDrop extends _erc_721_standard_9e4b16d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n    /**\n   * @internal\n   */ onNetworkUpdated(network) {\n        this.contractWrapper.updateSignerOrProvider(network);\n    }\n    getAddress() {\n        return this.contractWrapper.address;\n    }\n    /** ******************************\n   * READ FUNCTIONS\n   *******************************/ /**\n   * Get the total count NFTs in this drop contract, both claimed and unclaimed\n   */ async totalSupply() {\n        const [claimed, unclaimed] = await Promise.all([\n            this.totalClaimedSupply(),\n            this.totalUnclaimedSupply()\n        ]);\n        return claimed.add(unclaimed);\n    }\n    /**\n   * Get All Claimed NFTs\n   *\n   * @remarks Fetch all the NFTs (and their owners) that have been claimed in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTs = await contract.getAllClaimed();\n   * const firstOwner = claimedNFTs[0].owner;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata and their ownersfor all NFTs queried.\n   */ async getAllClaimed(queryParams) {\n        const start = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((queryParams === null || queryParams === void 0 ? void 0 : queryParams.start) || 0).toNumber();\n        const count = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((queryParams === null || queryParams === void 0 ? void 0 : queryParams.count) || _QueryParams_08980575_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.D).toNumber();\n        const maxId = Math.min((await this.totalClaimedSupply()).toNumber(), start + count);\n        return await Promise.all(Array.from(Array(maxId).keys()).map((i)=>this.get(i.toString())));\n    }\n    /**\n   * Get All Unclaimed NFTs\n   *\n   * @remarks Fetch all the NFTs that have been not been claimed yet in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTs = await contract.getAllUnclaimed();\n   * const firstUnclaimedNFT = unclaimedNFTs[0].name;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */ async getAllUnclaimed(queryParams) {\n        const start = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((queryParams === null || queryParams === void 0 ? void 0 : queryParams.start) || 0).toNumber();\n        const count = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from((queryParams === null || queryParams === void 0 ? void 0 : queryParams.count) || _QueryParams_08980575_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.D).toNumber();\n        const firstTokenId = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(Math.max((await this.totalClaimedSupply()).toNumber(), start));\n        const maxId = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(Math.min((await this.contractWrapper.read(\"nextTokenIdToMint\", [])).toNumber(), firstTokenId.toNumber() + count));\n        return await Promise.all(Array.from(Array(maxId.sub(firstTokenId).toNumber()).keys()).map((i)=>this.erc721.getTokenMetadata(firstTokenId.add(i).toString())));\n    }\n    /**\n   * Get the claimed supply\n   *\n   * @remarks Get the number of claimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTCount = await contract.totalClaimedSupply();\n   * console.log(`NFTs claimed so far: ${claimedNFTCount}`);\n   * ```\n   * @returns The claimed supply\n   */ async totalClaimedSupply() {\n        return this.erc721.totalClaimedSupply();\n    }\n    /**\n   * Get the unclaimed supply\n   *\n   * @remarks Get the number of unclaimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTCount = await contract.totalUnclaimedSupply();\n   * console.log(`NFTs left to claim: ${unclaimedNFTCount}`);\n   * ```\n   * @returns The unclaimed supply\n   */ async totalUnclaimedSupply() {\n        return this.erc721.totalUnclaimedSupply();\n    }\n    /**\n   * Get whether users can transfer NFTs from this contract\n   */ async isTransferRestricted() {\n        const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [\n            (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.H)(\"transfer\"),\n            ethers__WEBPACK_IMPORTED_MODULE_9__.AddressZero\n        ]);\n        return !anyoneCanTransfer;\n    }\n    /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @deprecated Use `contract.erc721.claim.prepare(...args)` instead\n   */ async getClaimTransaction(destinationAddress, quantity, options) {\n        return this.erc721.getClaimTransaction(destinationAddress, quantity, options);\n    }\n    /**\n   * @internal\n   */ async prepare(method, args, overrides) {\n        return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.T.fromContractWrapper({\n            contractWrapper: this.contractWrapper,\n            method,\n            args,\n            overrides\n        });\n    }\n    /**\n   * @internal\n   */ async call(functionName, args, overrides) {\n        return this.contractWrapper.call(functionName, args, overrides);\n    }\n    /**\n   * @internal\n   */ /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */ /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const claimCondition = {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxClaimableSupply: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   * };\n   * await contract.claimConditions.set([claimCondition]);\n   * ```\n   */ /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */ /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */ /**\n   * Checkout\n   * @remarks Create a FIAT currency checkout for your NFT drop.\n   */ constructor(network, address, storage){\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        let abi = arguments.length > 4 ? arguments[4] : undefined;\n        let chainId = arguments.length > 5 ? arguments[5] : undefined;\n        let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cq(network, address, abi, options, storage);\n        super(contractWrapper, storage, chainId);\n        /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/ /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */ this.createBatch = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(async (metadatas, options)=>{\n            return this.erc721.lazyMint.prepare(metadatas, options);\n        });\n        /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */ this.claimTo = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(async (destinationAddress, quantity, options)=>{\n            return this.erc721.claimTo.prepare(destinationAddress, quantity, options);\n        });\n        /**\n   * Claim NFTs to the connected wallet.\n   *\n   * @remarks See {@link NFTDrop.claimTo}\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */ this.claim = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(async (quantity, options)=>{\n            return this.erc721.claim.prepare(quantity, options);\n        });\n        /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   * @example\n   * ```javascript\n   * const result = await contract.burnToken(tokenId);\n   * ```\n   */ this.burn = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(async (tokenId)=>{\n            return this.erc721.burn.prepare(tokenId);\n        });\n        this.abi = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bj.parse(abi || []);\n        this.metadata = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper, _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bR, this.storage);\n        this.app = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.b(this.contractWrapper, this.metadata, this.storage);\n        this.roles = new _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper, SignatureDrop.contractRoles);\n        this.royalties = new _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper, this.metadata);\n        this.sales = new _contract_sales_dc79a212_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper);\n        this.encoder = new _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.C(this.contractWrapper);\n        this.estimator = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.G(this.contractWrapper);\n        this.events = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.a(this.contractWrapper);\n        this.platformFees = new _contract_platform_fee_3eb1b057_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.C(this.contractWrapper);\n        this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.C(this.contractWrapper);\n        this.claimConditions = new _drop_claim_conditions_b49fc920_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.D(this.contractWrapper, this.metadata, this.storage);\n        this.signature = new _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.a(this.contractWrapper, this.storage);\n        this.revealer = new _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.D(this.contractWrapper, this.storage, _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cN.name, ()=>this.erc721.nextTokenIdToMint());\n        this.signature = new _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.a(this.contractWrapper, this.storage);\n        this.owner = new _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.a(this.contractWrapper);\n        this.checkout = new _thirdweb_checkout_bd3756d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_20__.P(this.contractWrapper);\n    }\n}\nSignatureDrop.contractRoles = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dz;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/signature-drop-15a37e28.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-bd3756d4.browser.esm.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-bd3756d4.browser.esm.js ***!
  \*****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   P: function() { return /* binding */ PaperCheckout; }\n/* harmony export */ });\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(app-pages-browser)/./node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n\n\nconst PAPER_API_BASE = \"https://paper.xyz/api\";\nconst PAPER_API_VERSION = \"2022-08-12\";\n/**\n * @internal\n */ const PAPER_API_URL = \"\".concat(PAPER_API_BASE, \"/\").concat(PAPER_API_VERSION, \"/platform/thirdweb\");\nconst PAPER_CHAIN_ID_MAP = {\n    [_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mainnet]: \"Ethereum\",\n    [_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Goerli]: \"Goerli\",\n    [_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Polygon]: \"Polygon\",\n    [_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mumbai]: \"Mumbai\",\n    [_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Avalanche]: \"Avalanche\"\n};\n/**\n * @internal\n */ function parseChainIdToPaperChain(chainId) {\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(chainId in PAPER_CHAIN_ID_MAP, \"chainId not supported by paper: \".concat(chainId));\n    return PAPER_CHAIN_ID_MAP[chainId];\n}\n/**\n *\n * @param contractAddress - the contract address\n * @param chainId - the chain id\n * @internal\n * @returns The paper xyz contract id\n * @throws if the contract is not registered on paper xyz\n */ async function fetchRegisteredCheckoutId(contractAddress, chainId) {\n    const paperChain = parseChainIdToPaperChain(chainId);\n    const res = await fetch(\"\".concat(PAPER_API_URL, \"/register-contract?contractAddress=\").concat(contractAddress, \"&chain=\").concat(paperChain));\n    const json = await res.json();\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.result.id, \"Contract is not registered with paper\");\n    return json.result.id;\n}\n/**\n * The parameters for creating a paper.xyz checkout link.\n * @public\n */ /**\n * @internal\n */ /**\n * @internal\n */ const DEFAULT_PARAMS = {\n    expiresInMinutes: 15,\n    feeBearer: \"BUYER\",\n    sendEmailOnSuccess: true,\n    redirectAfterPayment: false\n};\n/**\n * @internal\n */ async function createCheckoutLinkIntent(contractId, params) {\n    const res = await fetch(\"\".concat(PAPER_API_URL, \"/checkout-link-intent\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            contractId,\n            ...DEFAULT_PARAMS,\n            ...params,\n            metadata: {\n                ...params.metadata,\n                via_platform: \"thirdweb\"\n            },\n            // overrides that are hard coded\n            hideNativeMint: true,\n            hidePaperWallet: !!params.walletAddress,\n            hideExternalWallet: true,\n            hidePayWithCrypto: true,\n            usePaperKey: false\n        })\n    });\n    const json = await res.json();\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.checkoutLinkIntentUrl, \"Failed to create checkout link intent\");\n    return json.checkoutLinkIntentUrl;\n}\n/**\n * @internal\n */ class PaperCheckout {\n    async getCheckoutId() {\n        return fetchRegisteredCheckoutId(this.contractWrapper.address, await this.contractWrapper.getChainID());\n    }\n    async isEnabled() {\n        try {\n            return !!await this.getCheckoutId();\n        } catch (err) {\n            return false;\n        }\n    }\n    async createLinkIntent(params) {\n        return await createCheckoutLinkIntent(await this.getCheckoutId(), params);\n    }\n    constructor(contractWrapper){\n        this.contractWrapper = contractWrapper;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdGhpcmR3ZWItZGV2K3Nka0A0LjAuMjdfZXRoZXJzQDUuNy4yX3R5cGVzY3JpcHRANS4wLjIvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvc2RrL2Rpc3QvdGhpcmR3ZWItY2hlY2tvdXQtYmQzNzU2ZDQuYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ3pCO0FBRXZDLE1BQU1HLGlCQUFrQjtBQUN4QixNQUFNQyxvQkFBcUI7QUFFM0I7O0NBRUMsR0FDRCxNQUFNQyxnQkFBZ0IsR0FBcUJELE9BQWxCRCxnQkFBZSxLQUFxQixPQUFsQkMsbUJBQWtCO0FBQzdELE1BQU1FLHFCQUFxQjtJQUN6QixDQUFDTCw4REFBT0EsQ0FBQ00sT0FBTyxDQUFDLEVBQUU7SUFDbkIsQ0FBQ04sOERBQU9BLENBQUNPLE1BQU0sQ0FBQyxFQUFFO0lBQ2xCLENBQUNQLDhEQUFPQSxDQUFDUSxPQUFPLENBQUMsRUFBRTtJQUNuQixDQUFDUiw4REFBT0EsQ0FBQ1MsTUFBTSxDQUFDLEVBQUU7SUFDbEIsQ0FBQ1QsOERBQU9BLENBQUNVLFNBQVMsQ0FBQyxFQUFFO0FBQ3ZCO0FBRUE7O0NBRUMsR0FDRCxTQUFTQyx5QkFBeUJDLE9BQU87SUFDdkNYLDBEQUFTQSxDQUFDVyxXQUFXUCxvQkFBb0IsbUNBQTJDLE9BQVJPO0lBQzVFLE9BQU9QLGtCQUFrQixDQUFDTyxRQUFRO0FBQ3BDO0FBQ0E7Ozs7Ozs7Q0FPQyxHQUNELGVBQWVDLDBCQUEwQkMsZUFBZSxFQUFFRixPQUFPO0lBQy9ELE1BQU1HLGFBQWFKLHlCQUF5QkM7SUFDNUMsTUFBTUksTUFBTSxNQUFNQyxNQUFNLEdBQXNESCxPQUFuRFYsZUFBYyx1Q0FBOERXLE9BQXpCRCxpQkFBZ0IsV0FBb0IsT0FBWEM7SUFDdkcsTUFBTUcsT0FBTyxNQUFNRixJQUFJRSxJQUFJO0lBQzNCakIsMERBQVNBLENBQUNpQixLQUFLQyxNQUFNLENBQUNDLEVBQUUsRUFBRTtJQUMxQixPQUFPRixLQUFLQyxNQUFNLENBQUNDLEVBQUU7QUFDdkI7QUFFQTs7O0NBR0MsR0FFRDs7Q0FFQyxHQUVEOztDQUVDLEdBRUQsTUFBTUMsaUJBQWlCO0lBQ3JCQyxrQkFBa0I7SUFDbEJDLFdBQVc7SUFDWEMsb0JBQW9CO0lBQ3BCQyxzQkFBc0I7QUFDeEI7QUFFQTs7Q0FFQyxHQUNELGVBQWVDLHlCQUF5QkMsVUFBVSxFQUFFQyxNQUFNO0lBQ3hELE1BQU1aLE1BQU0sTUFBTUMsTUFBTSxHQUFpQixPQUFkYixlQUFjLDBCQUF3QjtRQUMvRHlCLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtRQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFDbkJOO1lBQ0EsR0FBR04sY0FBYztZQUNqQixHQUFHTyxNQUFNO1lBQ1RNLFVBQVU7Z0JBQ1IsR0FBR04sT0FBT00sUUFBUTtnQkFDbEJDLGNBQWM7WUFDaEI7WUFDQSxnQ0FBZ0M7WUFDaENDLGdCQUFnQjtZQUNoQkMsaUJBQWlCLENBQUMsQ0FBQ1QsT0FBT1UsYUFBYTtZQUN2Q0Msb0JBQW9CO1lBQ3BCQyxtQkFBbUI7WUFDbkJDLGFBQWE7UUFDZjtJQUNGO0lBQ0EsTUFBTXZCLE9BQU8sTUFBTUYsSUFBSUUsSUFBSTtJQUMzQmpCLDBEQUFTQSxDQUFDaUIsS0FBS3dCLHFCQUFxQixFQUFFO0lBQ3RDLE9BQU94QixLQUFLd0IscUJBQXFCO0FBQ25DO0FBRUE7O0NBRUMsR0FDRCxNQUFNQztJQUlKLE1BQU1DLGdCQUFnQjtRQUNwQixPQUFPL0IsMEJBQTBCLElBQUksQ0FBQ2dDLGVBQWUsQ0FBQ0MsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFDRCxlQUFlLENBQUNFLFVBQVU7SUFDdEc7SUFDQSxNQUFNQyxZQUFZO1FBQ2hCLElBQUk7WUFDRixPQUFPLENBQUMsQ0FBRSxNQUFNLElBQUksQ0FBQ0osYUFBYTtRQUNwQyxFQUFFLE9BQU9LLEtBQUs7WUFDWixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE1BQU1DLGlCQUFpQnRCLE1BQU0sRUFBRTtRQUM3QixPQUFPLE1BQU1GLHlCQUF5QixNQUFNLElBQUksQ0FBQ2tCLGFBQWEsSUFBSWhCO0lBQ3BFO0lBZkF1QixZQUFZTixlQUFlLENBQUU7UUFDM0IsSUFBSSxDQUFDQSxlQUFlLEdBQUdBO0lBQ3pCO0FBY0Y7QUFFOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0aGlyZHdlYi1kZXYrc2RrQDQuMC4yN19ldGhlcnNANS43LjJfdHlwZXNjcmlwdEA1LjAuMi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC90aGlyZHdlYi1jaGVja291dC1iZDM3NTZkNC5icm93c2VyLmVzbS5qcz81OTIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFTIGFzIENoYWluSWQgfSBmcm9tICcuL2luZGV4LWM4MjBiN2Q0LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5jb25zdCBQQVBFUl9BUElfQkFTRSA9IGBodHRwczovL3BhcGVyLnh5ei9hcGlgO1xuY29uc3QgUEFQRVJfQVBJX1ZFUlNJT04gPSBgMjAyMi0wOC0xMmA7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IFBBUEVSX0FQSV9VUkwgPSBgJHtQQVBFUl9BUElfQkFTRX0vJHtQQVBFUl9BUElfVkVSU0lPTn0vcGxhdGZvcm0vdGhpcmR3ZWJgO1xuY29uc3QgUEFQRVJfQ0hBSU5fSURfTUFQID0ge1xuICBbQ2hhaW5JZC5NYWlubmV0XTogXCJFdGhlcmV1bVwiLFxuICBbQ2hhaW5JZC5Hb2VybGldOiBcIkdvZXJsaVwiLFxuICBbQ2hhaW5JZC5Qb2x5Z29uXTogXCJQb2x5Z29uXCIsXG4gIFtDaGFpbklkLk11bWJhaV06IFwiTXVtYmFpXCIsXG4gIFtDaGFpbklkLkF2YWxhbmNoZV06IFwiQXZhbGFuY2hlXCJcbn07XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ2hhaW5JZFRvUGFwZXJDaGFpbihjaGFpbklkKSB7XG4gIGludmFyaWFudChjaGFpbklkIGluIFBBUEVSX0NIQUlOX0lEX01BUCwgYGNoYWluSWQgbm90IHN1cHBvcnRlZCBieSBwYXBlcjogJHtjaGFpbklkfWApO1xuICByZXR1cm4gUEFQRVJfQ0hBSU5fSURfTUFQW2NoYWluSWRdO1xufVxuLyoqXG4gKlxuICogQHBhcmFtIGNvbnRyYWN0QWRkcmVzcyAtIHRoZSBjb250cmFjdCBhZGRyZXNzXG4gKiBAcGFyYW0gY2hhaW5JZCAtIHRoZSBjaGFpbiBpZFxuICogQGludGVybmFsXG4gKiBAcmV0dXJucyBUaGUgcGFwZXIgeHl6IGNvbnRyYWN0IGlkXG4gKiBAdGhyb3dzIGlmIHRoZSBjb250cmFjdCBpcyBub3QgcmVnaXN0ZXJlZCBvbiBwYXBlciB4eXpcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hSZWdpc3RlcmVkQ2hlY2tvdXRJZChjb250cmFjdEFkZHJlc3MsIGNoYWluSWQpIHtcbiAgY29uc3QgcGFwZXJDaGFpbiA9IHBhcnNlQ2hhaW5JZFRvUGFwZXJDaGFpbihjaGFpbklkKTtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7UEFQRVJfQVBJX1VSTH0vcmVnaXN0ZXItY29udHJhY3Q/Y29udHJhY3RBZGRyZXNzPSR7Y29udHJhY3RBZGRyZXNzfSZjaGFpbj0ke3BhcGVyQ2hhaW59YCk7XG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xuICBpbnZhcmlhbnQoanNvbi5yZXN1bHQuaWQsIFwiQ29udHJhY3QgaXMgbm90IHJlZ2lzdGVyZWQgd2l0aCBwYXBlclwiKTtcbiAgcmV0dXJuIGpzb24ucmVzdWx0LmlkO1xufVxuXG4vKipcbiAqIFRoZSBwYXJhbWV0ZXJzIGZvciBjcmVhdGluZyBhIHBhcGVyLnh5eiBjaGVja291dCBsaW5rLlxuICogQHB1YmxpY1xuICovXG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuXG5jb25zdCBERUZBVUxUX1BBUkFNUyA9IHtcbiAgZXhwaXJlc0luTWludXRlczogMTUsXG4gIGZlZUJlYXJlcjogXCJCVVlFUlwiLFxuICBzZW5kRW1haWxPblN1Y2Nlc3M6IHRydWUsXG4gIHJlZGlyZWN0QWZ0ZXJQYXltZW50OiBmYWxzZVxufTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2hlY2tvdXRMaW5rSW50ZW50KGNvbnRyYWN0SWQsIHBhcmFtcykge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtQQVBFUl9BUElfVVJMfS9jaGVja291dC1saW5rLWludGVudGAsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBjb250cmFjdElkLFxuICAgICAgLi4uREVGQVVMVF9QQVJBTVMsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICAuLi5wYXJhbXMubWV0YWRhdGEsXG4gICAgICAgIHZpYV9wbGF0Zm9ybTogXCJ0aGlyZHdlYlwiXG4gICAgICB9LFxuICAgICAgLy8gb3ZlcnJpZGVzIHRoYXQgYXJlIGhhcmQgY29kZWRcbiAgICAgIGhpZGVOYXRpdmVNaW50OiB0cnVlLFxuICAgICAgaGlkZVBhcGVyV2FsbGV0OiAhIXBhcmFtcy53YWxsZXRBZGRyZXNzLFxuICAgICAgaGlkZUV4dGVybmFsV2FsbGV0OiB0cnVlLFxuICAgICAgaGlkZVBheVdpdGhDcnlwdG86IHRydWUsXG4gICAgICB1c2VQYXBlcktleTogZmFsc2VcbiAgICB9KVxuICB9KTtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIGludmFyaWFudChqc29uLmNoZWNrb3V0TGlua0ludGVudFVybCwgXCJGYWlsZWQgdG8gY3JlYXRlIGNoZWNrb3V0IGxpbmsgaW50ZW50XCIpO1xuICByZXR1cm4ganNvbi5jaGVja291dExpbmtJbnRlbnRVcmw7XG59XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNsYXNzIFBhcGVyQ2hlY2tvdXQge1xuICBjb25zdHJ1Y3Rvcihjb250cmFjdFdyYXBwZXIpIHtcbiAgICB0aGlzLmNvbnRyYWN0V3JhcHBlciA9IGNvbnRyYWN0V3JhcHBlcjtcbiAgfVxuICBhc3luYyBnZXRDaGVja291dElkKCkge1xuICAgIHJldHVybiBmZXRjaFJlZ2lzdGVyZWRDaGVja291dElkKHRoaXMuY29udHJhY3RXcmFwcGVyLmFkZHJlc3MsIGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmdldENoYWluSUQoKSk7XG4gIH1cbiAgYXN5bmMgaXNFbmFibGVkKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gISEoYXdhaXQgdGhpcy5nZXRDaGVja291dElkKCkpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBhc3luYyBjcmVhdGVMaW5rSW50ZW50KHBhcmFtcykge1xuICAgIHJldHVybiBhd2FpdCBjcmVhdGVDaGVja291dExpbmtJbnRlbnQoYXdhaXQgdGhpcy5nZXRDaGVja291dElkKCksIHBhcmFtcyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgUGFwZXJDaGVja291dCBhcyBQIH07XG4iXSwibmFtZXMiOlsiYVMiLCJDaGFpbklkIiwiaW52YXJpYW50IiwiUEFQRVJfQVBJX0JBU0UiLCJQQVBFUl9BUElfVkVSU0lPTiIsIlBBUEVSX0FQSV9VUkwiLCJQQVBFUl9DSEFJTl9JRF9NQVAiLCJNYWlubmV0IiwiR29lcmxpIiwiUG9seWdvbiIsIk11bWJhaSIsIkF2YWxhbmNoZSIsInBhcnNlQ2hhaW5JZFRvUGFwZXJDaGFpbiIsImNoYWluSWQiLCJmZXRjaFJlZ2lzdGVyZWRDaGVja291dElkIiwiY29udHJhY3RBZGRyZXNzIiwicGFwZXJDaGFpbiIsInJlcyIsImZldGNoIiwianNvbiIsInJlc3VsdCIsImlkIiwiREVGQVVMVF9QQVJBTVMiLCJleHBpcmVzSW5NaW51dGVzIiwiZmVlQmVhcmVyIiwic2VuZEVtYWlsT25TdWNjZXNzIiwicmVkaXJlY3RBZnRlclBheW1lbnQiLCJjcmVhdGVDaGVja291dExpbmtJbnRlbnQiLCJjb250cmFjdElkIiwicGFyYW1zIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwibWV0YWRhdGEiLCJ2aWFfcGxhdGZvcm0iLCJoaWRlTmF0aXZlTWludCIsImhpZGVQYXBlcldhbGxldCIsIndhbGxldEFkZHJlc3MiLCJoaWRlRXh0ZXJuYWxXYWxsZXQiLCJoaWRlUGF5V2l0aENyeXB0byIsInVzZVBhcGVyS2V5IiwiY2hlY2tvdXRMaW5rSW50ZW50VXJsIiwiUGFwZXJDaGVja291dCIsImdldENoZWNrb3V0SWQiLCJjb250cmFjdFdyYXBwZXIiLCJhZGRyZXNzIiwiZ2V0Q2hhaW5JRCIsImlzRW5hYmxlZCIsImVyciIsImNyZWF0ZUxpbmtJbnRlbnQiLCJjb25zdHJ1Y3RvciIsIlAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-bd3756d4.browser.esm.js\n"));

/***/ })

}]);