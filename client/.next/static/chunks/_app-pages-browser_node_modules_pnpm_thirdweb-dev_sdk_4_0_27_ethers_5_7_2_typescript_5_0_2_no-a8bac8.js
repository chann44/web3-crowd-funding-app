"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_sdk_4_0_27_ethers_5_7_2_typescript_5_0_2_no-a8bac8"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-1d461889.browser.esm.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-1d461889.browser.esm.js ***!
  \***************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc20; }\n/* harmony export */ });\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _erc_20_f11af0e5_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./erc-20-f11af0e5.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-20-f11af0e5.browser.esm.js\");\n\n\n/**\n * Standard ERC20 Token functions\n * @remarks Basic functionality for a ERC20 contract that handles all unit transformation for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.transfer(walletAddress, amount);\n * ```\n * @public\n */ class StandardErc20 {\n    get chainId() {\n        return this._chainId;\n    }\n    /**\n   * @internal\n   */ onNetworkUpdated(network) {\n        this.contractWrapper.updateSignerOrProvider(network);\n    }\n    /**\n   * @internal\n   */ getAddress() {\n        return this.contractWrapper.address;\n    }\n    /** ******************************\n   * READ FUNCTIONS\n   *******************************/ /**\n   * Get the token Metadata (name, symbol, etc...)\n   *\n   * @example\n   * ```javascript\n   * const token = await contract.get();\n   * ```\n   * @returns The token metadata\n   */ async get() {\n        return this.erc20.get();\n    }\n    /**\n   * Get Token Balance for the currently connected wallet\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.balance();\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */ async balance() {\n        return await this.erc20.balance();\n    }\n    /**\n   * Get Token Balance\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */ async balanceOf(address) {\n        return this.erc20.balanceOf(address);\n    }\n    /**\n   * The total supply for this token\n   * @remarks Get how much supply has been minted\n   * @example\n   * ```javascript\n   * const balance = await contract.totalSupply();\n   * ```\n   */ async totalSupply() {\n        return await this.erc20.totalSupply();\n    }\n    /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of a 'spender' wallet over the connected wallet's funds - the allowance of a different address for a token is the amount of tokens that the `spender` wallet is allowed to spend on behalf of the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   * const allowance = await contract.allowance(spenderAddress);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */ async allowance(spender) {\n        return await this.erc20.allowance(spender);\n    }\n    /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of one wallet over another wallet's funds - the allowance of a different address for a token is the amount of tokens that the wallet is allowed to spend on behalf of the specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet who owns the funds\n   * const owner = \"{{wallet_address}}\";\n   * // Address of the wallet to check token allowance\n   * const spender = \"0x...\";\n   * const allowance = await contract.allowanceOf(owner, spender);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */ async allowanceOf(owner, spender) {\n        return await this.erc20.allowanceOf(owner, spender);\n    }\n    constructor(contractWrapper, storage, chainId){\n        /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/ /**\n   * Transfer Tokens\n   *\n   * @remarks Transfer tokens from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The amount of tokens you want to send\n   * const amount = 0.1;\n   * await contract.transfer(toAddress, amount);\n   * ```\n   */ this.transfer = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(async (to, amount)=>{\n            return this.erc20.transfer.prepare(to, amount);\n        });\n        /**\n   * Transfer Tokens From Address\n   *\n   * @remarks Transfer tokens from one wallet to another\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const fromAddress = \"{{wallet_address}}\";\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The number of tokens you want to send\n   * const amount = 1.2\n   * // Note that the connected wallet must have approval to transfer the tokens of the fromAddress\n   * await contract.transferFrom(fromAddress, toAddress, amount);\n   * ```\n   */ this.transferFrom = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(async (from, to, amount)=>{\n            return this.erc20.transferFrom.prepare(from, to, amount);\n        });\n        /**\n   * Allows the specified `spender` wallet to transfer the given `amount` of tokens to another wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to allow transfers from\n   * const spenderAddress = \"0x...\";\n   * // The number of tokens to give as allowance\n   * const amount = 100\n   * await contract.setAllowance(spenderAddress, amount);\n   * ```\n   */ this.setAllowance = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(async (spender, amount)=>{\n            return this.erc20.setAllowance.prepare(spender, amount);\n        });\n        /**\n   * Transfer Tokens To Many Wallets\n   *\n   * @remarks Mint tokens from the connected wallet to many wallets\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 100, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 100,\n   *  }\n   * ]\n   *\n   * await contract.transferBatch(data);\n   * ```\n   */ this.transferBatch = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)(async (args)=>{\n            return this.erc20.transferBatch.prepare(args);\n        });\n        this.contractWrapper = contractWrapper;\n        this.storage = storage;\n        this.erc20 = new _erc_20_f11af0e5_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.E(this.contractWrapper, this.storage, chainId);\n        this._chainId = chainId;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-1d461889.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/token-drop-71baf0cf.browser.esm.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/token-drop-71baf0cf.browser.esm.js ***!
  \**********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenDrop: function() { return /* binding */ TokenDrop; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-appuri-a2734267.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-a2734267.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fetchCurrencyValue-5031b794.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-5031b794.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_3eb1b057_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-platform-fee-3eb1b057.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-3eb1b057.browser.esm.js\");\n/* harmony import */ var _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-roles-275dcf7c.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-roles-275dcf7c.browser.esm.js\");\n/* harmony import */ var _contract_sales_dc79a212_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-sales-dc79a212.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-sales-dc79a212.browser.esm.js\");\n/* harmony import */ var _drop_claim_conditions_b49fc920_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./drop-claim-conditions-b49fc920.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/drop-claim-conditions-b49fc920.browser.esm.js\");\n/* harmony import */ var _erc_20_standard_1d461889_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-20-standard-1d461889.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-20-standard-1d461889.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(app-pages-browser)/./node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(app-pages-browser)/./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"(app-pages-browser)/./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Drop contract for a standard crypto token or cryptocurrency.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"token-drop\");\n * ```\n * @internal\n * @deprecated use contract.erc20 instead\n */ class TokenDrop extends _erc_20_standard_1d461889_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n    /** ******************************\n   * READ FUNCTIONS\n   *******************************/ /**\n   * Get your wallet voting power for the current checkpoints\n   *\n   * @returns The amount of voting power in tokens\n   */ async getVoteBalance() {\n        return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress());\n    }\n    async getVoteBalanceOf(account) {\n        return await this.erc20.getValue(await this.contractWrapper.read(\"getVotes\", [\n            await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.aL)(account)\n        ]));\n    }\n    /**\n   * Get your voting delegatee address\n   *\n   * @returns The address of your vote delegatee\n   */ async getDelegation() {\n        return await this.getDelegationOf(await this.contractWrapper.getSignerAddress());\n    }\n    /**\n   * Get a specific address voting delegatee address\n   *\n   * @returns The address of your vote delegatee\n   */ async getDelegationOf(account) {\n        return await this.contractWrapper.read(\"delegates\", [\n            await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.aL)(account)\n        ]);\n    }\n    /**\n   * Get whether users can transfer tokens from this contract\n   */ async isTransferRestricted() {\n        const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [\n            (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.H)(\"transfer\"),\n            ethers__WEBPACK_IMPORTED_MODULE_7__.AddressZero\n        ]);\n        return !anyoneCanTransfer;\n    }\n    /**\n   * @internal\n   */ async prepare(method, args, overrides) {\n        return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.T.fromContractWrapper({\n            contractWrapper: this.contractWrapper,\n            method,\n            args,\n            overrides\n        });\n    }\n    /**\n   * @internal\n   */ async call(functionName, args, overrides) {\n        return this.contractWrapper.call(functionName, args, overrides);\n    }\n    /**\n   * Configure claim conditions\n   * @remarks Define who can claim Tokens, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 3117.42, // limit how many tokens are released in this presale\n   *     price: 0.001, // presale price per token\n   *     snapshot: ['0x...', '0x...'], // limit claiming to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.008, // public sale price per token\n   *   }\n   * ]);\n   * await contract.claimConditions.set(claimConditions);\n   * ```\n   */ /**\n   * @internal\n   */ constructor(network, address, storage){\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        let abi = arguments.length > 4 ? arguments[4] : undefined;\n        let chainId = arguments.length > 5 ? arguments[5] : undefined;\n        let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cq(network, address, abi, options, storage);\n        super(contractWrapper, storage, chainId);\n        /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/ /**\n   * Claim a certain amount of tokens\n   * @remarks See {@link TokenDrop.claimTo}\n   * @param amount - the amount of tokens to mint\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   */ this.claim = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)((()=>{\n            var _this = this;\n            return async function(amount) {\n                let checkERC20Allowance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                return _this.claimTo.prepare(await _this.contractWrapper.getSignerAddress(), amount, checkERC20Allowance);\n            };\n        })());\n        /**\n   * Claim a certain amount of tokens to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim Tokens.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 42.69; // how many tokens you want to claim\n   *\n   * const tx = await contract.claimTo(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param amount - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @returns  The transaction receipt\n   */ this.claimTo = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)((()=>{\n            var _this2 = this;\n            return async function(destinationAddress, amount) {\n                let checkERC20Allowance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                return _this2.erc20.claimTo.prepare(destinationAddress, amount, {\n                    checkERC20Allowance\n                });\n            };\n        })());\n        /**\n   * Lets you delegate your voting power to the delegateeAddress\n   *\n   * @param delegateeAddress - delegatee wallet address\n   * @alpha\n   */ this.delegateTo = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)(async (delegateeAddress)=>{\n            return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.T.fromContractWrapper({\n                contractWrapper: this.contractWrapper,\n                method: \"delegate\",\n                args: [\n                    await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.aL)(delegateeAddress)\n                ]\n            });\n        });\n        /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnTokens(amount);\n   * ```\n   */ this.burnTokens = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)(async (amount)=>{\n            return this.erc20.burn.prepare(amount);\n        });\n        /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnFrom(holderAddress, amount);\n   * ```\n   */ this.burnFrom = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)(async (holder, amount)=>{\n            return this.erc20.burnFrom.prepare(holder, amount);\n        });\n        this.abi = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bj.parse(abi || []);\n        this.metadata = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.dH, this.storage);\n        this.app = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.b(this.contractWrapper, this.metadata, this.storage);\n        this.roles = new _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, TokenDrop.contractRoles);\n        this.encoder = new _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n        this.estimator = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.G(this.contractWrapper);\n        this.events = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a(this.contractWrapper);\n        this.sales = new _contract_sales_dc79a212_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n        this.platformFees = new _contract_platform_fee_3eb1b057_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n        this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper);\n        this.claimConditions = new _drop_claim_conditions_b49fc920_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.D(this.contractWrapper, this.metadata, this.storage);\n    }\n}\nTokenDrop.contractRoles = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.dG;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdGhpcmR3ZWItZGV2K3Nka0A0LjAuMjdfZXRoZXJzQDUuNy4yX3R5cGVzY3JpcHRANS4wLjIvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvc2RrL2Rpc3QvdG9rZW4tZHJvcC03MWJhZjBjZi5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFtQztBQUM4SjtBQUN4RjtBQUMwQztBQUMvRDtBQUNNO0FBQ0M7QUFDYjtBQUNNO0FBQ087QUFDWjtBQUNsRTtBQUNpQjtBQUNDO0FBQ0Q7QUFDTjtBQUNUO0FBQ0Q7QUFDb0Q7QUFDVDtBQUNRO0FBQ0c7QUFDRztBQUNiO0FBQ007QUFDRTtBQUNKO0FBQ1M7QUFDTDtBQUNDO0FBQ0M7QUFDRjtBQUNBO0FBQ1A7QUFDVTtBQUNXO0FBQ2Y7QUFDSjtBQUNNO0FBQ0s7QUFDRztBQUNKO0FBQ0w7QUFDRTtBQUNKO0FBQ0E7QUFDRztBQUNDO0FBQ0M7QUFDUjtBQUNNO0FBQ0s7QUFDRztBQUNmO0FBQ1E7QUFDRjtBQUNJO0FBQ0Y7QUFDSztBQUNOO0FBQ1I7QUFDVTtBQUNGO0FBQ0M7QUFDVDtBQUNPO0FBQ0Y7QUFDVTtBQUNWO0FBQ0E7QUFDSjtBQUNEO0FBQ007QUFDQztBQUNDO0FBQ0k7QUFDQTtBQUNHO0FBQ2Q7QUFDbEM7QUFDSDtBQUNFO0FBQ29CO0FBQ1U7QUFDckI7QUFDZTtBQUNJO0FBQ3ZDO0FBQzRCO0FBRTFDOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDRCxNQUFNa0Msa0JBQWtCRCx1RUFBYUE7SUFpRG5DOztpQ0FFK0IsR0FFL0I7Ozs7R0FJQyxHQUNELE1BQU1FLGlCQUFpQjtRQUNyQixPQUFPLE1BQU0sSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQyxNQUFNLElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxnQkFBZ0I7SUFDaEY7SUFDQSxNQUFNRixpQkFBaUJHLE9BQU8sRUFBRTtRQUM5QixPQUFPLE1B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NUUsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSTFELDJFQUFlQSxDQUFDLElBQUksQ0FBQ1ksZUFBZTtRQUN2RCxJQUFJLENBQUMrQyxTQUFTLEdBQUcsSUFBSTlELHVFQUFnQkEsQ0FBQyxJQUFJLENBQUNlLGVBQWU7UUFDMUQsSUFBSSxDQUFDZ0QsTUFBTSxHQUFHLElBQUk3RCx1RUFBY0EsQ0FBQyxJQUFJLENBQUNhLGVBQWU7UUFDckQsSUFBSSxDQUFDaUQsS0FBSyxHQUFHLElBQUl6RCx1RUFBbUJBLENBQUMsSUFBSSxDQUFDUSxlQUFlO1FBQ3pELElBQUksQ0FBQ2tELFlBQVksR0FBRyxJQUFJNUQsOEVBQW1CQSxDQUFDLElBQUksQ0FBQ1UsZUFBZTtRQUNoRSxJQUFJLENBQUNtRCxXQUFXLEdBQUcsSUFBSTlELDZFQUFtQkEsQ0FBQyxJQUFJLENBQUNXLGVBQWU7UUFDL0QsSUFBSSxDQUFDb0QsZUFBZSxHQUFHLElBQUkxRCw4RUFBbUJBLENBQUMsSUFBSSxDQUFDTSxlQUFlLEVBQUUsSUFBSSxDQUFDMEMsUUFBUSxFQUFFLElBQUksQ0FBQ3JCLE9BQU87SUFDbEc7QUFnS0Y7QUEvTU14QixVQUNHZ0QsZ0JBQWdCaEYsOERBQXlCQTtBQWdON0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0aGlyZHdlYi1kZXYrc2RrQDQuMC4yN19ldGhlcnNANS43LjJfdHlwZXNjcmlwdEA1LjAuMi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC90b2tlbi1kcm9wLTcxYmFmMGNmLmJyb3dzZXIuZXNtLmpzPzI0ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RhbnRzIH0gZnJvbSAnZXRoZXJzJztcbmltcG9ydCB7IGRHIGFzIFRPS0VOX0RST1BfQ09OVFJBQ1RfUk9MRVMsIGNxIGFzIENvbnRyYWN0V3JhcHBlciwgYmogYXMgQWJpU2NoZW1hLCBkSCBhcyBEcm9wRXJjMjBDb250cmFjdFNjaGVtYSwgYUwgYXMgcmVzb2x2ZUFkZHJlc3MsIEggYXMgZ2V0Um9sZUhhc2ggfSBmcm9tICcuL2luZGV4LWM4MjBiN2Q0LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IGQgYXMgYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uLCBUIGFzIFRyYW5zYWN0aW9uIH0gZnJvbSAnLi90cmFuc2FjdGlvbnMtYTBlOWE0ODAuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgQyBhcyBDb250cmFjdE1ldGFkYXRhLCBiIGFzIENvbnRyYWN0QXBwVVJJLCBHIGFzIEdhc0Nvc3RFc3RpbWF0b3IsIGEgYXMgQ29udHJhY3RFdmVudHMgfSBmcm9tICcuL2NvbnRyYWN0LWFwcHVyaS1hMjczNDI2Ny5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBDIGFzIENvbnRyYWN0RW5jb2RlciB9IGZyb20gJy4vZmV0Y2hDdXJyZW5jeVZhbHVlLTUwMzFiNzk0LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IEMgYXMgQ29udHJhY3RJbnRlcmNlcHRvciB9IGZyb20gJy4vY29udHJhY3QtaW50ZXJjZXB0b3ItZDdiMTY0YTcuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgQyBhcyBDb250cmFjdFBsYXRmb3JtRmVlIH0gZnJvbSAnLi9jb250cmFjdC1wbGF0Zm9ybS1mZWUtM2ViMWIwNTcuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0IHsgQyBhcyBDb250cmFjdFJvbGVzIH0gZnJvbSAnLi9jb250cmFjdC1yb2xlcy0yNzVkY2Y3Yy5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBDIGFzIENvbnRyYWN0UHJpbWFyeVNhbGUgfSBmcm9tICcuL2NvbnRyYWN0LXNhbGVzLWRjNzlhMjEyLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IEQgYXMgRHJvcENsYWltQ29uZGl0aW9ucyB9IGZyb20gJy4vZHJvcC1jbGFpbS1jb25kaXRpb25zLWI0OWZjOTIwLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IFMgYXMgU3RhbmRhcmRFcmMyMCB9IGZyb20gJy4vZXJjLTIwLXN0YW5kYXJkLTFkNDYxODg5LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAnem9kJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jaGFpbnMnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L3N0b3JhZ2UnO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NyeXB0byc7XG5pbXBvcnQgJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCAnYm4uanMnO1xuaW1wb3J0ICdiczU4JztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lCdXJuYWJsZUVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3AuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcEVSQzIwX1YyLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURyb3BTaW5nbGVQaGFzZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2VfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjAuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMjBQZXJtaXQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTWludGFibGVFUkMyMC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lNdWx0aWNhbGwuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzIwTWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQnVybmFibGVFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQ2xhaW1hYmxlRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURlbGF5ZWRSZXZlYWwuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcEVSQzcyMV9WMy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxRW51bWVyYWJsZS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lFUkM3MjFBUXVlcnlhYmxlVXBncmFkZWFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxU3VwcGx5Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUxhenlNaW50Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSU1pbnRhYmxlRVJDNzIxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JU2lnbmF0dXJlTWludEVSQzcyMV9WMS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0xhenlNaW50V2l0aFRpZXJfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9TaGFyZWRNZXRhZGF0YS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL3pvcmFfSUVSQzcyMURyb3AuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTG95YWx0eUNhcmQuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTkZUTWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDNzIxTWV0YWRhdGEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQnVybmFibGVFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUNsYWltYWJsZUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcDExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcEVSQzExNTVfVjIuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRHJvcFNpbmdsZVBoYXNlMTE1NS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lEcm9wU2luZ2xlUGhhc2UxMTU1X1YxLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NU1ldGFkYXRhLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzExNTVTdXBwbHkuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JRVJDMTE1NUVudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JTWludGFibGVFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSVNpZ25hdHVyZU1pbnRFUkMxMTU1Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVSQzI3NzFDb250ZXh0Lmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFwcFVSSS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lDb250cmFjdE1ldGFkYXRhLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSURpcmVjdExpc3RpbmdzLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUVuZ2xpc2hBdWN0aW9ucy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lPZmZlcnMuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUGFja1ZSRkRpcmVjdC5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQZXJtaXNzaW9ucy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lQZXJtaXNzaW9uc0VudW1lcmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUGxhdGZvcm1GZWUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUHJpbWFyeVNhbGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JUm95YWx0eS5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL093bmFibGUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWlyZHJvcEVSQzIwLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFpcmRyb3BFUkM3MjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWlyZHJvcEVSQzExNTUuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWNjb3VudEZhY3RvcnlDb3JlLmpzb24nO1xuaW1wb3J0ICdAdGhpcmR3ZWItZGV2L2NvbnRyYWN0cy1qcy9kaXN0L2FiaXMvSUFjY291bnRQZXJtaXNzaW9ucy5qc29uJztcbmltcG9ydCAnQHRoaXJkd2ViLWRldi9jb250cmFjdHMtanMvZGlzdC9hYmlzL0lBY2NvdW50UGVybWlzc2lvbnNfVjEuanNvbic7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvY29udHJhY3RzLWpzL2Rpc3QvYWJpcy9JQWNjb3VudC5qc29uJztcbmltcG9ydCAnZXRoZXJzL2xpYi91dGlscyc7XG5pbXBvcnQgJ2V2ZW50ZW1pdHRlcjMnO1xuaW1wb3J0ICdmYXN0LWRlZXAtZXF1YWwnO1xuaW1wb3J0ICcuL3NpZ25hdHVyZS01YWI2OWM1MS5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJy4vbm9ybWFsaXplUHJpY2VWYWx1ZS0wZDA5NjlkZi5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJ0B0aGlyZHdlYi1kZXYvbWVya2xldHJlZSc7XG5pbXBvcnQgJy4vYXNzZXJ0RW5hYmxlZC1mYzVkMGM3Ni5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgJy4vc2V0RXJjMjBBbGxvd2FuY2UtZWM0M2MxZDcuYnJvd3Nlci5lc20uanMnO1xuaW1wb3J0ICd1dWlkJztcbmltcG9ydCAnLi9lcmMtMjAtZjExYWYwZTUuYnJvd3Nlci5lc20uanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIERyb3AgY29udHJhY3QgZm9yIGEgc3RhbmRhcmQgY3J5cHRvIHRva2VuIG9yIGNyeXB0b2N1cnJlbmN5LlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgVGhpcmR3ZWJTREsgfSBmcm9tIFwiQHRoaXJkd2ViLWRldi9zZGtcIjtcbiAqXG4gKiBjb25zdCBzZGsgPSBuZXcgVGhpcmR3ZWJTREsoXCJ7e2NoYWluTmFtZX19XCIpO1xuICogY29uc3QgY29udHJhY3QgPSBhd2FpdCBzZGsuZ2V0Q29udHJhY3QoXCJ7e2NvbnRyYWN0X2FkZHJlc3N9fVwiLCBcInRva2VuLWRyb3BcIik7XG4gKiBgYGBcbiAqIEBpbnRlcm5hbFxuICogQGRlcHJlY2F0ZWQgdXNlIGNvbnRyYWN0LmVyYzIwIGluc3RlYWRcbiAqL1xuY2xhc3MgVG9rZW5Ecm9wIGV4dGVuZHMgU3RhbmRhcmRFcmMyMCB7XG4gIHN0YXRpYyBjb250cmFjdFJvbGVzID0gVE9LRU5fRFJPUF9DT05UUkFDVF9ST0xFUztcblxuICAvKipcbiAgICogQ29uZmlndXJlIGNsYWltIGNvbmRpdGlvbnNcbiAgICogQHJlbWFya3MgRGVmaW5lIHdobyBjYW4gY2xhaW0gVG9rZW5zLCB3aGVuIGFuZCBob3cgbWFueS5cbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiBjb25zdCBwcmVzYWxlU3RhcnRUaW1lID0gbmV3IERhdGUoKTtcbiAgICogY29uc3QgcHVibGljU2FsZVN0YXJ0VGltZSA9IG5ldyBEYXRlKERhdGUubm93KCkgKyA2MCAqIDYwICogMjQgKiAxMDAwKTtcbiAgICogY29uc3QgY2xhaW1Db25kaXRpb25zID0gW1xuICAgKiAgIHtcbiAgICogICAgIHN0YXJ0VGltZTogcHJlc2FsZVN0YXJ0VGltZSwgLy8gc3RhcnQgdGhlIHByZXNhbGUgbm93XG4gICAqICAgICBtYXhRdWFudGl0eTogMzExNy40MiwgLy8gbGltaXQgaG93IG1hbnkgdG9rZW5zIGFyZSByZWxlYXNlZCBpbiB0aGlzIHByZXNhbGVcbiAgICogICAgIHByaWNlOiAwLjAwMSwgLy8gcHJlc2FsZSBwcmljZSBwZXIgdG9rZW5cbiAgICogICAgIHNuYXBzaG90OiBbJzB4Li4uJywgJzB4Li4uJ10sIC8vIGxpbWl0IGNsYWltaW5nIHRvIG9ubHkgY2VydGFpbiBhZGRyZXNzZXNcbiAgICogICB9LFxuICAgKiAgIHtcbiAgICogICAgIHN0YXJ0VGltZTogcHVibGljU2FsZVN0YXJ0VGltZSwgLy8gMjRoIGFmdGVyIHByZXNhbGUsIHN0YXJ0IHB1YmxpYyBzYWxlXG4gICAqICAgICBwcmljZTogMC4wMDgsIC8vIHB1YmxpYyBzYWxlIHByaWNlIHBlciB0b2tlblxuICAgKiAgIH1cbiAgICogXSk7XG4gICAqIGF3YWl0IGNvbnRyYWN0LmNsYWltQ29uZGl0aW9ucy5zZXQoY2xhaW1Db25kaXRpb25zKTtcbiAgICogYGBgXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG5cbiAgY29uc3RydWN0b3IobmV0d29yaywgYWRkcmVzcywgc3RvcmFnZSkge1xuICAgIGxldCBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTtcbiAgICBsZXQgYWJpID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgPyBhcmd1bWVudHNbNF0gOiB1bmRlZmluZWQ7XG4gICAgbGV0IGNoYWluSWQgPSBhcmd1bWVudHMubGVuZ3RoID4gNSA/IGFyZ3VtZW50c1s1XSA6IHVuZGVmaW5lZDtcbiAgICBsZXQgY29udHJhY3RXcmFwcGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDYgJiYgYXJndW1lbnRzWzZdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNl0gOiBuZXcgQ29udHJhY3RXcmFwcGVyKG5ldHdvcmssIGFkZHJlc3MsIGFiaSwgb3B0aW9ucywgc3RvcmFnZSk7XG4gICAgc3VwZXIoY29udHJhY3RXcmFwcGVyLCBzdG9yYWdlLCBjaGFpbklkKTtcbiAgICB0aGlzLmFiaSA9IEFiaVNjaGVtYS5wYXJzZShhYmkgfHwgW10pO1xuICAgIHRoaXMubWV0YWRhdGEgPSBuZXcgQ29udHJhY3RNZXRhZGF0YSh0aGlzLmNvbnRyYWN0V3JhcHBlciwgRHJvcEVyYzIwQ29udHJhY3RTY2hlbWEsIHRoaXMuc3RvcmFnZSk7XG4gICAgdGhpcy5hcHAgPSBuZXcgQ29udHJhY3RBcHBVUkkodGhpcy5jb250cmFjdFdyYXBwZXIsIHRoaXMubWV0YWRhdGEsIHRoaXMuc3RvcmFnZSk7XG4gICAgdGhpcy5yb2xlcyA9IG5ldyBDb250cmFjdFJvbGVzKHRoaXMuY29udHJhY3RXcmFwcGVyLCBUb2tlbkRyb3AuY29udHJhY3RSb2xlcyk7XG4gICAgdGhpcy5lbmNvZGVyID0gbmV3IENvbnRyYWN0RW5jb2Rlcih0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5lc3RpbWF0b3IgPSBuZXcgR2FzQ29zdEVzdGltYXRvcih0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5ldmVudHMgPSBuZXcgQ29udHJhY3RFdmVudHModGhpcy5jb250cmFjdFdyYXBwZXIpO1xuICAgIHRoaXMuc2FsZXMgPSBuZXcgQ29udHJhY3RQcmltYXJ5U2FsZSh0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5wbGF0Zm9ybUZlZXMgPSBuZXcgQ29udHJhY3RQbGF0Zm9ybUZlZSh0aGlzLmNvbnRyYWN0V3JhcHBlcik7XG4gICAgdGhpcy5pbnRlcmNlcHRvciA9IG5ldyBDb250cmFjdEludGVyY2VwdG9yKHRoaXMuY29udHJhY3RXcmFwcGVyKTtcbiAgICB0aGlzLmNsYWltQ29uZGl0aW9ucyA9IG5ldyBEcm9wQ2xhaW1Db25kaXRpb25zKHRoaXMuY29udHJhY3RXcmFwcGVyLCB0aGlzLm1ldGFkYXRhLCB0aGlzLnN0b3JhZ2UpO1xuICB9XG5cbiAgLyoqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBSRUFEIEZVTkNUSU9OU1xuICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAvKipcbiAgICogR2V0IHlvdXIgd2FsbGV0IHZvdGluZyBwb3dlciBmb3IgdGhlIGN1cnJlbnQgY2hlY2twb2ludHNcbiAgICpcbiAgICogQHJldHVybnMgVGhlIGFtb3VudCBvZiB2b3RpbmcgcG93ZXIgaW4gdG9rZW5zXG4gICAqL1xuICBhc3luYyBnZXRWb3RlQmFsYW5jZSgpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRWb3RlQmFsYW5jZU9mKGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLmdldFNpZ25lckFkZHJlc3MoKSk7XG4gIH1cbiAgYXN5bmMgZ2V0Vm90ZUJhbGFuY2VPZihhY2NvdW50KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZXJjMjAuZ2V0VmFsdWUoYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIucmVhZChcImdldFZvdGVzXCIsIFthd2FpdCByZXNvbHZlQWRkcmVzcyhhY2NvdW50KV0pKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgeW91ciB2b3RpbmcgZGVsZWdhdGVlIGFkZHJlc3NcbiAgICpcbiAgICogQHJldHVybnMgVGhlIGFkZHJlc3Mgb2YgeW91ciB2b3RlIGRlbGVnYXRlZVxuICAgKi9cbiAgYXN5bmMgZ2V0RGVsZWdhdGlvbigpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXREZWxlZ2F0aW9uT2YoYXdhaXQgdGhpcy5jb250cmFjdFdyYXBwZXIuZ2V0U2lnbmVyQWRkcmVzcygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYSBzcGVjaWZpYyBhZGRyZXNzIHZvdGluZyBkZWxlZ2F0ZWUgYWRkcmVzc1xuICAgKlxuICAgKiBAcmV0dXJucyBUaGUgYWRkcmVzcyBvZiB5b3VyIHZvdGUgZGVsZWdhdGVlXG4gICAqL1xuICBhc3luYyBnZXREZWxlZ2F0aW9uT2YoYWNjb3VudCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5yZWFkKFwiZGVsZWdhdGVzXCIsIFthd2FpdCByZXNvbHZlQWRkcmVzcyhhY2NvdW50KV0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB3aGV0aGVyIHVzZXJzIGNhbiB0cmFuc2ZlciB0b2tlbnMgZnJvbSB0aGlzIGNvbnRyYWN0XG4gICAqL1xuICBhc3luYyBpc1RyYW5zZmVyUmVzdHJpY3RlZCgpIHtcbiAgICBjb25zdCBhbnlvbmVDYW5UcmFuc2ZlciA9IGF3YWl0IHRoaXMuY29udHJhY3RXcmFwcGVyLnJlYWQoXCJoYXNSb2xlXCIsIFtnZXRSb2xlSGFzaChcInRyYW5zZmVyXCIpLCBjb25zdGFudHMuQWRkcmVzc1plcm9dKTtcbiAgICByZXR1cm4gIWFueW9uZUNhblRyYW5zZmVyO1xuICB9XG5cbiAgLyoqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgKiBXUklURSBGVU5DVElPTlNcbiAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgLyoqXG4gICAqIENsYWltIGEgY2VydGFpbiBhbW91bnQgb2YgdG9rZW5zXG4gICAqIEByZW1hcmtzIFNlZSB7QGxpbmsgVG9rZW5Ecm9wLmNsYWltVG99XG4gICAqIEBwYXJhbSBhbW91bnQgLSB0aGUgYW1vdW50IG9mIHRva2VucyB0byBtaW50XG4gICAqIEBwYXJhbSBjaGVja0VSQzIwQWxsb3dhbmNlIC0gT3B0aW9uYWwsIGNoZWNrIGlmIHRoZSB3YWxsZXQgaGFzIGVub3VnaCBFUkMyMCBhbGxvd2FuY2UgdG8gY2xhaW0gdGhlIHRva2VucywgYW5kIGlmIG5vdCwgYXBwcm92ZSB0aGUgdHJhbnNmZXJcbiAgICovXG4gIGNsYWltID0gLyogQF9fUFVSRV9fICovYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uKCgoKSA9PiB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKGFtb3VudCkge1xuICAgICAgbGV0IGNoZWNrRVJDMjBBbGxvd2FuY2UgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHRydWU7XG4gICAgICByZXR1cm4gX3RoaXMuY2xhaW1Uby5wcmVwYXJlKGF3YWl0IF90aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRTaWduZXJBZGRyZXNzKCksIGFtb3VudCwgY2hlY2tFUkMyMEFsbG93YW5jZSk7XG4gICAgfTtcbiAgfSkoKSk7XG5cbiAgLyoqXG4gICAqIENsYWltIGEgY2VydGFpbiBhbW91bnQgb2YgdG9rZW5zIHRvIGEgc3BlY2lmaWMgV2FsbGV0XG4gICAqXG4gICAqIEByZW1hcmtzIExldCB0aGUgc3BlY2lmaWVkIHdhbGxldCBjbGFpbSBUb2tlbnMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogY29uc3QgYWRkcmVzcyA9IFwie3t3YWxsZXRfYWRkcmVzc319XCI7IC8vIGFkZHJlc3Mgb2YgdGhlIHdhbGxldCB5b3Ugd2FudCB0byBjbGFpbSB0aGUgTkZUc1xuICAgKiBjb25zdCBxdWFudGl0eSA9IDQyLjY5OyAvLyBob3cgbWFueSB0b2tlbnMgeW91IHdhbnQgdG8gY2xhaW1cbiAgICpcbiAgICogY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5jbGFpbVRvKGFkZHJlc3MsIHF1YW50aXR5KTtcbiAgICogY29uc3QgcmVjZWlwdCA9IHR4LnJlY2VpcHQ7IC8vIHRoZSB0cmFuc2FjdGlvbiByZWNlaXB0XG4gICAqIGBgYFxuICAgKlxuICAgKiBAcGFyYW0gZGVzdGluYXRpb25BZGRyZXNzIC0gQWRkcmVzcyB5b3Ugd2FudCB0byBzZW5kIHRoZSB0b2tlbiB0b1xuICAgKiBAcGFyYW0gYW1vdW50IC0gUXVhbnRpdHkgb2YgdGhlIHRva2VucyB5b3Ugd2FudCB0byBjbGFpbVxuICAgKiBAcGFyYW0gY2hlY2tFUkMyMEFsbG93YW5jZSAtIE9wdGlvbmFsLCBjaGVjayBpZiB0aGUgd2FsbGV0IGhhcyBlbm91Z2ggRVJDMjAgYWxsb3dhbmNlIHRvIGNsYWltIHRoZSB0b2tlbnMsIGFuZCBpZiBub3QsIGFwcHJvdmUgdGhlIHRyYW5zZmVyXG4gICAqXG4gICAqIEByZXR1cm5zICBUaGUgdHJhbnNhY3Rpb24gcmVjZWlwdFxuICAgKi9cbiAgY2xhaW1UbyA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbigoKCkgPT4ge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuICAgIHJldHVybiBhc3luYyBmdW5jdGlvbiAoZGVzdGluYXRpb25BZGRyZXNzLCBhbW91bnQpIHtcbiAgICAgIGxldCBjaGVja0VSQzIwQWxsb3dhbmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlO1xuICAgICAgcmV0dXJuIF90aGlzMi5lcmMyMC5jbGFpbVRvLnByZXBhcmUoZGVzdGluYXRpb25BZGRyZXNzLCBhbW91bnQsIHtcbiAgICAgICAgY2hlY2tFUkMyMEFsbG93YW5jZVxuICAgICAgfSk7XG4gICAgfTtcbiAgfSkoKSk7XG5cbiAgLyoqXG4gICAqIExldHMgeW91IGRlbGVnYXRlIHlvdXIgdm90aW5nIHBvd2VyIHRvIHRoZSBkZWxlZ2F0ZWVBZGRyZXNzXG4gICAqXG4gICAqIEBwYXJhbSBkZWxlZ2F0ZWVBZGRyZXNzIC0gZGVsZWdhdGVlIHdhbGxldCBhZGRyZXNzXG4gICAqIEBhbHBoYVxuICAgKi9cbiAgZGVsZWdhdGVUbyA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBkZWxlZ2F0ZWVBZGRyZXNzID0+IHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kOiBcImRlbGVnYXRlXCIsXG4gICAgICBhcmdzOiBbYXdhaXQgcmVzb2x2ZUFkZHJlc3MoZGVsZWdhdGVlQWRkcmVzcyldXG4gICAgfSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBCdXJuIFRva2Vuc1xuICAgKlxuICAgKiBAcmVtYXJrcyBCdXJuIHRva2VucyBoZWxkIGJ5IHRoZSBjb25uZWN0ZWQgd2FsbGV0XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogLy8gVGhlIGFtb3VudCBvZiB0aGlzIHRva2VuIHlvdSB3YW50IHRvIGJ1cm5cbiAgICogY29uc3QgYW1vdW50ID0gMS4yO1xuICAgKlxuICAgKiBhd2FpdCBjb250cmFjdC5idXJuVG9rZW5zKGFtb3VudCk7XG4gICAqIGBgYFxuICAgKi9cbiAgYnVyblRva2VucyA9IC8qIEBfX1BVUkVfXyAqL2J1aWxkVHJhbnNhY3Rpb25GdW5jdGlvbihhc3luYyBhbW91bnQgPT4ge1xuICAgIHJldHVybiB0aGlzLmVyYzIwLmJ1cm4ucHJlcGFyZShhbW91bnQpO1xuICB9KTtcbiAgLyoqXG4gICAqIEJ1cm4gVG9rZW5zXG4gICAqXG4gICAqIEByZW1hcmtzIEJ1cm4gdG9rZW5zIGhlbGQgYnkgdGhlIHNwZWNpZmllZCB3YWxsZXRcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgamF2YXNjcmlwdFxuICAgKiAvLyBBZGRyZXNzIG9mIHRoZSB3YWxsZXQgc2VuZGluZyB0aGUgdG9rZW5zXG4gICAqIGNvbnN0IGhvbGRlckFkZHJlc3MgPSBcInt7d2FsbGV0X2FkZHJlc3N9fVwiO1xuICAgKlxuICAgKiAvLyBUaGUgYW1vdW50IG9mIHRoaXMgdG9rZW4geW91IHdhbnQgdG8gYnVyblxuICAgKiBjb25zdCBhbW91bnQgPSAxLjI7XG4gICAqXG4gICAqIGF3YWl0IGNvbnRyYWN0LmJ1cm5Gcm9tKGhvbGRlckFkZHJlc3MsIGFtb3VudCk7XG4gICAqIGBgYFxuICAgKi9cbiAgYnVybkZyb20gPSAvKiBAX19QVVJFX18gKi9idWlsZFRyYW5zYWN0aW9uRnVuY3Rpb24oYXN5bmMgKGhvbGRlciwgYW1vdW50KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuZXJjMjAuYnVybkZyb20ucHJlcGFyZShob2xkZXIsIGFtb3VudCk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGFzeW5jIHByZXBhcmUobWV0aG9kLCBhcmdzLCBvdmVycmlkZXMpIHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb24uZnJvbUNvbnRyYWN0V3JhcHBlcih7XG4gICAgICBjb250cmFjdFdyYXBwZXI6IHRoaXMuY29udHJhY3RXcmFwcGVyLFxuICAgICAgbWV0aG9kLFxuICAgICAgYXJncyxcbiAgICAgIG92ZXJyaWRlc1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgYXN5bmMgY2FsbChmdW5jdGlvbk5hbWUsIGFyZ3MsIG92ZXJyaWRlcykge1xuICAgIHJldHVybiB0aGlzLmNvbnRyYWN0V3JhcHBlci5jYWxsKGZ1bmN0aW9uTmFtZSwgYXJncywgb3ZlcnJpZGVzKTtcbiAgfVxufVxuXG5leHBvcnQgeyBUb2tlbkRyb3AgfTtcbiJdLCJuYW1lcyI6WyJjb25zdGFudHMiLCJkRyIsIlRPS0VOX0RST1BfQ09OVFJBQ1RfUk9MRVMiLCJjcSIsIkNvbnRyYWN0V3JhcHBlciIsImJqIiwiQWJpU2NoZW1hIiwiZEgiLCJEcm9wRXJjMjBDb250cmFjdFNjaGVtYSIsImFMIiwicmVzb2x2ZUFkZHJlc3MiLCJIIiwiZ2V0Um9sZUhhc2giLCJkIiwiYnVpbGRUcmFuc2FjdGlvbkZ1bmN0aW9uIiwiVCIsIlRyYW5zYWN0aW9uIiwiQyIsIkNvbnRyYWN0TWV0YWRhdGEiLCJiIiwiQ29udHJhY3RBcHBVUkkiLCJHIiwiR2FzQ29zdEVzdGltYXRvciIsImEiLCJDb250cmFjdEV2ZW50cyIsIkNvbnRyYWN0RW5jb2RlciIsIkNvbnRyYWN0SW50ZXJjZXB0b3IiLCJDb250cmFjdFBsYXRmb3JtRmVlIiwiQ29udHJhY3RSb2xlcyIsIkNvbnRyYWN0UHJpbWFyeVNhbGUiLCJEIiwiRHJvcENsYWltQ29uZGl0aW9ucyIsIlMiLCJTdGFuZGFyZEVyYzIwIiwiVG9rZW5Ecm9wIiwiZ2V0Vm90ZUJhbGFuY2UiLCJnZXRWb3RlQmFsYW5jZU9mIiwiY29udHJhY3RXcmFwcGVyIiwiZ2V0U2lnbmVyQWRkcmVzcyIsImFjY291bnQiLCJlcmMyMCIsImdldFZhbHVlIiwicmVhZCIsImdldERlbGVnYXRpb24iLCJnZXREZWxlZ2F0aW9uT2YiLCJpc1RyYW5zZmVyUmVzdHJpY3RlZCIsImFueW9uZUNhblRyYW5zZmVyIiwiQWRkcmVzc1plcm8iLCJwcmVwYXJlIiwibWV0aG9kIiwiYXJncyIsIm92ZXJyaWRlcyIsImZyb21Db250cmFjdFdyYXBwZXIiLCJjYWxsIiwiZnVuY3Rpb25OYW1lIiwiY29uc3RydWN0b3IiLCJuZXR3b3JrIiwiYWRkcmVzcyIsInN0b3JhZ2UiLCJvcHRpb25zIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiYWJpIiwiY2hhaW5JZCIsImNsYWltIiwiX3RoaXMiLCJhbW91bnQiLCJjaGVja0VSQzIwQWxsb3dhbmNlIiwiY2xhaW1UbyIsIl90aGlzMiIsImRlc3RpbmF0aW9uQWRkcmVzcyIsImRlbGVnYXRlVG8iLCJkZWxlZ2F0ZWVBZGRyZXNzIiwiYnVyblRva2VucyIsImJ1cm4iLCJidXJuRnJvbSIsImhvbGRlciIsInBhcnNlIiwibWV0YWRhdGEiLCJhcHAiLCJyb2xlcyIsImNvbnRyYWN0Um9sZXMiLCJlbmNvZGVyIiwiZXN0aW1hdG9yIiwiZXZlbnRzIiwic2FsZXMiLCJwbGF0Zm9ybUZlZXMiLCJpbnRlcmNlcHRvciIsImNsYWltQ29uZGl0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/token-drop-71baf0cf.browser.esm.js\n"));

/***/ })

}]);