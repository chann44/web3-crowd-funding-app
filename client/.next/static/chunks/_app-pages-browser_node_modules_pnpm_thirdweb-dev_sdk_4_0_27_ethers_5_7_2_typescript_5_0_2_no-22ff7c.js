"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb-dev_sdk_4_0_27_ethers_5_7_2_typescript_5_0_2_no-22ff7c"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ StandardErc721; }\n/* harmony export */ });\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./erc-721-581162b5.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-581162b5.browser.esm.js\");\n\n\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */ class StandardErc721 {\n    get chainId() {\n        return this._chainId;\n    }\n    /**\n   * @internal\n   */ onNetworkUpdated(network) {\n        this.contractWrapper.updateSignerOrProvider(network);\n    }\n    getAddress() {\n        return this.contractWrapper.address;\n    }\n    /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */ async getAll(queryParams) {\n        return this.erc721.getAll(queryParams);\n    }\n    /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs in the contract.\n   */ async getOwned(walletAddress, queryParams) {\n        if (walletAddress) {\n            walletAddress = await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(walletAddress);\n        }\n        return this.erc721.getOwned(walletAddress, queryParams);\n    }\n    /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */ async getOwnedTokenIds(walletAddress) {\n        if (walletAddress) {\n            walletAddress = await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(walletAddress);\n        }\n        return this.erc721.getOwnedTokenIds(walletAddress);\n    }\n    /**\n   * Get total minted supply count\n   */ async totalSupply() {\n        return this.erc721.totalCirculatingSupply();\n    }\n    /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */ async get(tokenId) {\n        return this.erc721.get(tokenId);\n    }\n    /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns The address of the owner\n   */ async ownerOf(tokenId) {\n        return this.erc721.ownerOf(tokenId);\n    }\n    /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */ async balanceOf(address) {\n        return this.erc721.balanceOf(address);\n    }\n    /**\n   * Get NFT Balance for the currently connected wallet\n   */ async balance() {\n        return this.erc721.balance();\n    }\n    /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */ async isApproved(address, operator) {\n        return this.erc721.isApproved(address, operator);\n    }\n    constructor(contractWrapper, storage, chainId){\n        /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */ this.transfer = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (to, tokenId)=>{\n            return this.erc721.transfer.prepare(to, tokenId);\n        });\n        /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */ this.setApprovalForAll = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (operator, approved)=>{\n            return this.erc721.setApprovalForAll.prepare(operator, approved);\n        });\n        /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */ this.setApprovalForToken = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(async (operator, tokenId)=>{\n            return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.T.fromContractWrapper({\n                contractWrapper: this.contractWrapper,\n                method: \"approve\",\n                args: [\n                    await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)(operator),\n                    tokenId\n                ]\n            });\n        });\n        this.contractWrapper = contractWrapper;\n        this.storage = storage;\n        this.erc721 = new _erc_721_581162b5_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.E(this.contractWrapper, this.storage, chainId);\n        this._chainId = chainId;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/multiwrap-8667626f.browser.esm.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/multiwrap-8667626f.browser.esm.js ***!
  \*********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multiwrap: function() { return /* binding */ Multiwrap; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/lib.esm/index.js\");\n/* harmony import */ var _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetchCurrencyValue-5031b794.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-5031b794.browser.esm.js\");\n/* harmony import */ var _hasERC20Allowance_ae288ab2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hasERC20Allowance-ae288ab2.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-ae288ab2.browser.esm.js\");\n/* harmony import */ var _normalizePriceValue_0d0969df_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./normalizePriceValue-0d0969df.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/normalizePriceValue-0d0969df.browser.esm.js\");\n/* harmony import */ var _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./index-c820b7d4.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/index-c820b7d4.browser.esm.js\");\n/* harmony import */ var _marketplace_64554f50_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./marketplace-64554f50.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/marketplace-64554f50.browser.esm.js\");\n/* harmony import */ var _QueryParams_08980575_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./QueryParams-08980575.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/QueryParams-08980575.browser.esm.js\");\n/* harmony import */ var _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transactions-a0e9a480.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/transactions-a0e9a480.browser.esm.js\");\n/* harmony import */ var _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-appuri-a2734267.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-appuri-a2734267.browser.esm.js\");\n/* harmony import */ var _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./contract-owner-8ed1c8ac.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-owner-8ed1c8ac.browser.esm.js\");\n/* harmony import */ var _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./contract-roles-275dcf7c.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/contract-roles-275dcf7c.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_9e4b16d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-721-standard-9e4b16d8.browser.esm.js */ \"(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-9e4b16d8.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(app-pages-browser)/./node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(app-pages-browser)/./node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"(app-pages-browser)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"(app-pages-browser)/./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Multiwrap lets you wrap any number of ERC20, ERC721 and ERC1155 tokens you own into a single wrapped token bundle.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"multiwrap\");\n * ```\n *\n * @beta\n */ // TODO create extension wrappers for this\nclass Multiwrap extends _erc_721_standard_9e4b16d8_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n    /** ******************************\n   * READ FUNCTIONS\n   *******************************/ /**\n   * Get the contents of a wrapped token bundle\n   * @example\n   * ```javascript\n   * const contents = await contract.getWrappedContents(wrappedTokenId);\n   * console.log(contents.erc20Tokens);\n   * console.log(contents.erc721Tokens);\n   * console.log(contents.erc1155Tokens);\n   * ```\n   * @param wrappedTokenId - the id of the wrapped token bundle\n   */ async getWrappedContents(wrappedTokenId) {\n        const wrappedTokens = await this.contractWrapper.read(\"getWrappedContents\", [\n            wrappedTokenId\n        ]);\n        const erc20Tokens = [];\n        const erc721Tokens = [];\n        const erc1155Tokens = [];\n        for (const token of wrappedTokens){\n            switch(token.tokenType){\n                case 0:\n                    {\n                        const tokenMetadata = await (0,_fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.f)(this.contractWrapper.getProvider(), token.assetContract);\n                        erc20Tokens.push({\n                            contractAddress: token.assetContract,\n                            quantity: ethers__WEBPACK_IMPORTED_MODULE_7__.formatUnits(token.totalAmount, tokenMetadata.decimals)\n                        });\n                        break;\n                    }\n                case 1:\n                    {\n                        erc721Tokens.push({\n                            contractAddress: token.assetContract,\n                            tokenId: token.tokenId\n                        });\n                        break;\n                    }\n                case 2:\n                    {\n                        erc1155Tokens.push({\n                            contractAddress: token.assetContract,\n                            tokenId: token.tokenId,\n                            quantity: token.totalAmount.toString()\n                        });\n                        break;\n                    }\n            }\n        }\n        return {\n            erc20Tokens,\n            erc721Tokens,\n            erc1155Tokens\n        };\n    }\n    /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/ async toTokenStructList(contents) {\n        const tokens = [];\n        const provider = this.contractWrapper.getProvider();\n        const owner = await this.contractWrapper.getSignerAddress();\n        if (contents.erc20Tokens) {\n            for (const erc20 of contents.erc20Tokens){\n                const normalizedQuantity = await (0,_normalizePriceValue_0d0969df_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.n)(provider, erc20.quantity, erc20.contractAddress);\n                const hasAllowance = await (0,_hasERC20Allowance_ae288ab2_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.h)(this.contractWrapper, erc20.contractAddress, normalizedQuantity);\n                if (!hasAllowance) {\n                    throw new Error('ERC20 token with contract address \"'.concat(erc20.contractAddress, '\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"').concat(erc20.contractAddress, '\").setAllowance(\"').concat(this.getAddress(), '\", ').concat(erc20.quantity, \");\\n\\n\"));\n                }\n                tokens.push({\n                    assetContract: erc20.contractAddress,\n                    totalAmount: normalizedQuantity,\n                    tokenId: 0,\n                    tokenType: 0\n                });\n            }\n        }\n        if (contents.erc721Tokens) {\n            for (const erc721 of contents.erc721Tokens){\n                const isApproved = await (0,_marketplace_64554f50_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.i)(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n                if (!isApproved) {\n                    throw new Error('ERC721 token \"'.concat(erc721.tokenId, '\" with contract address \"').concat(erc721.contractAddress, '\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"').concat(erc721.contractAddress, '\").setApprovalForToken(\"').concat(this.getAddress(), '\", ').concat(erc721.tokenId, \");\\n\\n\"));\n                }\n                tokens.push({\n                    assetContract: erc721.contractAddress,\n                    totalAmount: 0,\n                    tokenId: erc721.tokenId,\n                    tokenType: 1\n                });\n            }\n        }\n        if (contents.erc1155Tokens) {\n            for (const erc1155 of contents.erc1155Tokens){\n                const isApproved = await (0,_marketplace_64554f50_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.i)(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n                if (!isApproved) {\n                    throw new Error('ERC1155 token \"'.concat(erc1155.tokenId, '\" with contract address \"').concat(erc1155.contractAddress, '\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"').concat(erc1155.contractAddress, '\").setApprovalForAll(\"').concat(this.getAddress(), '\", true);\\n\\n'));\n                }\n                tokens.push({\n                    assetContract: erc1155.contractAddress,\n                    totalAmount: erc1155.quantity,\n                    tokenId: erc1155.tokenId,\n                    tokenType: 2\n                });\n            }\n        }\n        return tokens;\n    }\n    /**\n   * @internal\n   */ async prepare(method, args, overrides) {\n        return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.T.fromContractWrapper({\n            contractWrapper: this.contractWrapper,\n            method,\n            args,\n            overrides\n        });\n    }\n    /**\n   * @internal\n   */ async call(functionName, args, overrides) {\n        return this.contractWrapper.call(functionName, args, overrides);\n    }\n    /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */ constructor(network, address, storage){\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        let abi = arguments.length > 4 ? arguments[4] : undefined;\n        let chainId = arguments.length > 5 ? arguments[5] : undefined;\n        let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.cq(network, address, abi, options, storage);\n        super(contractWrapper, storage, chainId);\n        /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/ /**\n   * Wrap any number of ERC20/ERC721/ERC1155 tokens into a single wrapped token\n   * @example\n   * ```javascript\n   * const tx = await contract.wrap({\n   *   erc20Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     quantity: \"0.8\"\n   *   }],\n   *   erc721Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     tokenId: \"0\"\n   *   }],\n   *   erc1155Tokens: [{\n   *     contractAddress: \"0x...\",\n   *     tokenId: \"1\",\n   *     quantity: \"2\"\n   *   }]\n   * }, {\n   *     name: \"Wrapped bundle\",\n   *     description: \"This is a wrapped bundle of tokens and NFTs\",\n   *     image: \"ipfs://...\",\n   * });\n   * const receipt = tx.receipt(); // the transaction receipt\n   * const wrappedTokenId = tx.id; // the id of the wrapped token bundle\n   * ```\n   * @param contents - the contents to wrap\n   * @param wrappedTokenMetadata - metadata to represent the wrapped token bundle\n   * @param recipientAddress - Optional. The address to send the wrapped token bundle to\n   */ this.wrap = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.d)(async (contents, wrappedTokenMetadata, recipientAddress)=>{\n            const [uri, tokens, recipient] = await Promise.all([\n                (0,_QueryParams_08980575_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.b)(wrappedTokenMetadata, this.storage),\n                this.toTokenStructList(contents),\n                (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.aL)(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress())\n            ]);\n            return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.T.fromContractWrapper({\n                contractWrapper: this.contractWrapper,\n                method: \"wrap\",\n                args: [\n                    tokens,\n                    uri,\n                    recipient\n                ],\n                parse: (receipt)=>{\n                    const event = this.contractWrapper.parseLogs(\"TokensWrapped\", receipt === null || receipt === void 0 ? void 0 : receipt.logs);\n                    if (event.length === 0) {\n                        throw new Error(\"TokensWrapped event not found\");\n                    }\n                    const tokenId = event[0].args.tokenIdOfWrappedToken;\n                    return {\n                        id: tokenId,\n                        receipt,\n                        data: ()=>this.get(tokenId)\n                    };\n                }\n            });\n        });\n        /**\n   * Unwrap a wrapped token bundle, and retrieve its contents\n   * @example\n   * ```javascript\n   * await contract.unwrap(wrappedTokenId);\n   * ```\n   * @param wrappedTokenId - the id of the wrapped token bundle\n   * @param recipientAddress - Optional. The address to send the unwrapped tokens to\n   */ this.unwrap = /* @__PURE__ */ (0,_transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.d)(async (wrappedTokenId, recipientAddress)=>{\n            const recipient = await (0,_index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.aL)(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress());\n            return _transactions_a0e9a480_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.T.fromContractWrapper({\n                contractWrapper: this.contractWrapper,\n                method: \"unwrap\",\n                args: [\n                    wrappedTokenId,\n                    recipient\n                ]\n            });\n        });\n        this.abi = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.bj.parse(abi || []);\n        this.metadata = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper, _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.dC, this.storage);\n        this.app = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.b(this.contractWrapper, this.metadata, this.storage);\n        this.roles = new _contract_roles_275dcf7c_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.C(this.contractWrapper, Multiwrap.contractRoles);\n        this.encoder = new _fetchCurrencyValue_5031b794_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(this.contractWrapper);\n        this.estimator = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.G(this.contractWrapper);\n        this.events = new _contract_appuri_a2734267_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.a(this.contractWrapper);\n        this.royalties = new _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.C(this.contractWrapper, this.metadata);\n        this.owner = new _contract_owner_8ed1c8ac_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.a(this.contractWrapper);\n    }\n}\nMultiwrap.contractRoles = _index_c820b7d4_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.dB;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@thirdweb-dev+sdk@4.0.27_ethers@5.7.2_typescript@5.0.2/node_modules/@thirdweb-dev/sdk/dist/multiwrap-8667626f.browser.esm.js\n"));

/***/ })

}]);