"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ethjs-unit@0.1.6";
exports.ids = ["vendor-chunks/ethjs-unit@0.1.6"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/ethjs-unit@0.1.6/node_modules/ethjs-unit/lib/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/ethjs-unit@0.1.6/node_modules/ethjs-unit/lib/index.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar BN = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/.pnpm/bn.js@4.11.6/node_modules/bn.js/lib/bn.js\");\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"(ssr)/./node_modules/.pnpm/number-to-bn@1.7.0/node_modules/number-to-bn/src/index.js\");\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n// complete ethereum unit map\nvar unitMap = {\n    \"noether\": \"0\",\n    \"wei\": \"1\",\n    \"kwei\": \"1000\",\n    \"Kwei\": \"1000\",\n    \"babbage\": \"1000\",\n    \"femtoether\": \"1000\",\n    \"mwei\": \"1000000\",\n    \"Mwei\": \"1000000\",\n    \"lovelace\": \"1000000\",\n    \"picoether\": \"1000000\",\n    \"gwei\": \"1000000000\",\n    \"Gwei\": \"1000000000\",\n    \"shannon\": \"1000000000\",\n    \"nanoether\": \"1000000000\",\n    \"nano\": \"1000000000\",\n    \"szabo\": \"1000000000000\",\n    \"microether\": \"1000000000000\",\n    \"micro\": \"1000000000000\",\n    \"finney\": \"1000000000000000\",\n    \"milliether\": \"1000000000000000\",\n    \"milli\": \"1000000000000000\",\n    \"ether\": \"1000000000000000000\",\n    \"kether\": \"1000000000000000000000\",\n    \"grand\": \"1000000000000000000000\",\n    \"mether\": \"1000000000000000000000000\",\n    \"gether\": \"1000000000000000000000000000\",\n    \"tether\": \"1000000000000000000000000000000\"\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */ function getValueOfUnit(unitInput) {\n    var unit = unitInput ? unitInput.toLowerCase() : \"ether\";\n    var unitValue = unitMap[unit]; // eslint-disable-line\n    if (typeof unitValue !== \"string\") {\n        throw new Error(\"[ethjs-unit] the unit provided \" + unitInput + \" doesn't exists, please use the one of the following units \" + JSON.stringify(unitMap, null, 2));\n    }\n    return new BN(unitValue, 10);\n}\nfunction numberToString(arg) {\n    if (typeof arg === \"string\") {\n        if (!arg.match(/^-?[0-9.]+$/)) {\n            throw new Error(\"while converting number to string, invalid number value '\" + arg + \"', should be a number matching (^-?[0-9.]+).\");\n        }\n        return arg;\n    } else if (typeof arg === \"number\") {\n        return String(arg);\n    } else if (typeof arg === \"object\" && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n        if (arg.toPrecision) {\n            return String(arg.toPrecision());\n        } else {\n            // eslint-disable-line\n            return arg.toString(10);\n        }\n    }\n    throw new Error(\"while converting number to string, invalid number value '\" + arg + \"' type \" + typeof arg + \".\");\n}\nfunction fromWei(weiInput, unit, optionsInput) {\n    var wei = numberToBN(weiInput); // eslint-disable-line\n    var negative = wei.lt(zero); // eslint-disable-line\n    var base = getValueOfUnit(unit);\n    var baseLength = unitMap[unit].length - 1 || 1;\n    var options = optionsInput || {};\n    if (negative) {\n        wei = wei.mul(negative1);\n    }\n    var fraction = wei.mod(base).toString(10); // eslint-disable-line\n    while(fraction.length < baseLength){\n        fraction = \"0\" + fraction;\n    }\n    if (!options.pad) {\n        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    }\n    var whole = wei.div(base).toString(10); // eslint-disable-line\n    if (options.commify) {\n        whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    var value = \"\" + whole + (fraction == \"0\" ? \"\" : \".\" + fraction); // eslint-disable-line\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nfunction toWei(etherInput, unit) {\n    var ether = numberToString(etherInput); // eslint-disable-line\n    var base = getValueOfUnit(unit);\n    var baseLength = unitMap[unit].length - 1 || 1;\n    // Is it negative?\n    var negative = ether.substring(0, 1) === \"-\"; // eslint-disable-line\n    if (negative) {\n        ether = ether.substring(1);\n    }\n    if (ether === \".\") {\n        throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei, invalid value\");\n    }\n    // Split it into a whole and fractional part\n    var comps = ether.split(\".\"); // eslint-disable-line\n    if (comps.length > 2) {\n        throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei,  too many decimal points\");\n    }\n    var whole = comps[0], fraction = comps[1]; // eslint-disable-line\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    if (fraction.length > baseLength) {\n        throw new Error(\"[ethjs-unit] while converting number \" + etherInput + \" to wei, too many decimal places\");\n    }\n    while(fraction.length < baseLength){\n        fraction += \"0\";\n    }\n    whole = new BN(whole);\n    fraction = new BN(fraction);\n    var wei = whole.mul(base).add(fraction); // eslint-disable-line\n    if (negative) {\n        wei = wei.mul(negative1);\n    }\n    return new BN(wei.toString(10), 10);\n}\nmodule.exports = {\n    unitMap: unitMap,\n    numberToString: numberToString,\n    getValueOfUnit: getValueOfUnit,\n    fromWei: fromWei,\n    toWei: toWei\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vZXRoanMtdW5pdEAwLjEuNi9ub2RlX21vZHVsZXMvZXRoanMtdW5pdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxLQUFLQyxtQkFBT0EsQ0FBQztBQUNqQixJQUFJQyxhQUFhRCxtQkFBT0EsQ0FBQztBQUV6QixJQUFJRSxPQUFPLElBQUlILEdBQUc7QUFDbEIsSUFBSUksWUFBWSxJQUFJSixHQUFHLENBQUM7QUFFeEIsNkJBQTZCO0FBQzdCLElBQUlLLFVBQVU7SUFDWixXQUFXO0lBQ1gsT0FBTztJQUNQLFFBQVE7SUFDUixRQUFRO0lBQ1IsV0FBVztJQUNYLGNBQWM7SUFDZCxRQUFRO0lBQ1IsUUFBUTtJQUNSLFlBQVk7SUFDWixhQUFhO0lBQ2IsUUFBUTtJQUNSLFFBQVE7SUFDUixXQUFXO0lBQ1gsYUFBYTtJQUNiLFFBQVE7SUFDUixTQUFTO0lBQ1QsY0FBYztJQUNkLFNBQVM7SUFDVCxVQUFVO0lBQ1YsY0FBYztJQUNkLFNBQVM7SUFDVCxTQUFTO0lBQ1QsVUFBVTtJQUNWLFNBQVM7SUFDVCxVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7QUFBa0M7QUFFOUM7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLGVBQWVDLFNBQVM7SUFDL0IsSUFBSUMsT0FBT0QsWUFBWUEsVUFBVUUsV0FBVyxLQUFLO0lBQ2pELElBQUlDLFlBQVlMLE9BQU8sQ0FBQ0csS0FBSyxFQUFFLHNCQUFzQjtJQUVyRCxJQUFJLE9BQU9FLGNBQWMsVUFBVTtRQUNqQyxNQUFNLElBQUlDLE1BQU0sb0NBQW9DSixZQUFZLGdFQUFpRUssS0FBS0MsU0FBUyxDQUFDUixTQUFTLE1BQU07SUFDaks7SUFFQSxPQUFPLElBQUlMLEdBQUdVLFdBQVc7QUFDM0I7QUFFQSxTQUFTSSxlQUFlQyxHQUFHO0lBQ3pCLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzNCLElBQUksQ0FBQ0EsSUFBSUMsS0FBSyxDQUFDLGdCQUFnQjtZQUM3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bEIsTUFBTSwwQ0FBMEMrQixhQUFhO0lBQ3pFO0lBRUEsTUFBT1QsU0FBU0gsTUFBTSxHQUFHRCxXQUFZO1FBQ25DSSxZQUFZO0lBQ2Q7SUFFQUcsUUFBUSxJQUFJcEMsR0FBR29DO0lBQ2ZILFdBQVcsSUFBSWpDLEdBQUdpQztJQUNsQixJQUFJUixNQUFNVyxNQUFNSixHQUFHLENBQUNKLE1BQU1tQixHQUFHLENBQUNkLFdBQVcsc0JBQXNCO0lBRS9ELElBQUlQLFVBQVU7UUFDWkQsTUFBTUEsSUFBSU8sR0FBRyxDQUFDNUI7SUFDaEI7SUFFQSxPQUFPLElBQUlKLEdBQUd5QixJQUFJUCxRQUFRLENBQUMsS0FBSztBQUNsQztBQUVBOEIsT0FBT0MsT0FBTyxHQUFHO0lBQ2Y1QyxTQUFTQTtJQUNUUyxnQkFBZ0JBO0lBQ2hCUixnQkFBZ0JBO0lBQ2hCZ0IsU0FBU0E7SUFDVG1CLE9BQU9BO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvLnBucG0vZXRoanMtdW5pdEAwLjEuNi9ub2RlX21vZHVsZXMvZXRoanMtdW5pdC9saWIvaW5kZXguanM/NjZhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBCTiA9IHJlcXVpcmUoJ2JuLmpzJyk7XG52YXIgbnVtYmVyVG9CTiA9IHJlcXVpcmUoJ251bWJlci10by1ibicpO1xuXG52YXIgemVybyA9IG5ldyBCTigwKTtcbnZhciBuZWdhdGl2ZTEgPSBuZXcgQk4oLTEpO1xuXG4vLyBjb21wbGV0ZSBldGhlcmV1bSB1bml0IG1hcFxudmFyIHVuaXRNYXAgPSB7XG4gICdub2V0aGVyJzogJzAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICd3ZWknOiAnMScsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ2t3ZWknOiAnMTAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ0t3ZWknOiAnMTAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ2JhYmJhZ2UnOiAnMTAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ2ZlbXRvZXRoZXInOiAnMTAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ213ZWknOiAnMTAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ013ZWknOiAnMTAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ2xvdmVsYWNlJzogJzEwMDAwMDAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICdwaWNvZXRoZXInOiAnMTAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ2d3ZWknOiAnMTAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ0d3ZWknOiAnMTAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ3NoYW5ub24nOiAnMTAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ25hbm9ldGhlcic6ICcxMDAwMDAwMDAwJywgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAnbmFubyc6ICcxMDAwMDAwMDAwJywgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAnc3phYm8nOiAnMTAwMDAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ21pY3JvZXRoZXInOiAnMTAwMDAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ21pY3JvJzogJzEwMDAwMDAwMDAwMDAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICdmaW5uZXknOiAnMTAwMDAwMDAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ21pbGxpZXRoZXInOiAnMTAwMDAwMDAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ21pbGxpJzogJzEwMDAwMDAwMDAwMDAwMDAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICdldGhlcic6ICcxMDAwMDAwMDAwMDAwMDAwMDAwJywgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAna2V0aGVyJzogJzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICdncmFuZCc6ICcxMDAwMDAwMDAwMDAwMDAwMDAwMDAwJywgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAnbWV0aGVyJzogJzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICdnZXRoZXInOiAnMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgJ3RldGhlcic6ICcxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyB9O1xuXG4vKipcbiAqIFJldHVybnMgdmFsdWUgb2YgdW5pdCBpbiBXZWlcbiAqXG4gKiBAbWV0aG9kIGdldFZhbHVlT2ZVbml0XG4gKiBAcGFyYW0ge1N0cmluZ30gdW5pdCB0aGUgdW5pdCB0byBjb252ZXJ0IHRvLCBkZWZhdWx0IGV0aGVyXG4gKiBAcmV0dXJucyB7QmlnTnVtYmVyfSB2YWx1ZSBvZiB0aGUgdW5pdCAoaW4gV2VpKVxuICogQHRocm93cyBlcnJvciBpZiB0aGUgdW5pdCBpcyBub3QgY29ycmVjdDp3XG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlT2ZVbml0KHVuaXRJbnB1dCkge1xuICB2YXIgdW5pdCA9IHVuaXRJbnB1dCA/IHVuaXRJbnB1dC50b0xvd2VyQ2FzZSgpIDogJ2V0aGVyJztcbiAgdmFyIHVuaXRWYWx1ZSA9IHVuaXRNYXBbdW5pdF07IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICBpZiAodHlwZW9mIHVuaXRWYWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1tldGhqcy11bml0XSB0aGUgdW5pdCBwcm92aWRlZCAnICsgdW5pdElucHV0ICsgJyBkb2VzblxcJ3QgZXhpc3RzLCBwbGVhc2UgdXNlIHRoZSBvbmUgb2YgdGhlIGZvbGxvd2luZyB1bml0cyAnICsgSlNPTi5zdHJpbmdpZnkodW5pdE1hcCwgbnVsbCwgMikpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBCTih1bml0VmFsdWUsIDEwKTtcbn1cblxuZnVuY3Rpb24gbnVtYmVyVG9TdHJpbmcoYXJnKSB7XG4gIGlmICh0eXBlb2YgYXJnID09PSAnc3RyaW5nJykge1xuICAgIGlmICghYXJnLm1hdGNoKC9eLT9bMC05Ll0rJC8pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3doaWxlIGNvbnZlcnRpbmcgbnVtYmVyIHRvIHN0cmluZywgaW52YWxpZCBudW1iZXIgdmFsdWUgXFwnJyArIGFyZyArICdcXCcsIHNob3VsZCBiZSBhIG51bWJlciBtYXRjaGluZyAoXi0/WzAtOS5dKykuJyk7XG4gICAgfVxuICAgIHJldHVybiBhcmc7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gU3RyaW5nKGFyZyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnLnRvU3RyaW5nICYmIChhcmcudG9Ud29zIHx8IGFyZy5kaXZpZGVkVG9JbnRlZ2VyQnkpKSB7XG4gICAgaWYgKGFyZy50b1ByZWNpc2lvbikge1xuICAgICAgcmV0dXJuIFN0cmluZyhhcmcudG9QcmVjaXNpb24oKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgIHJldHVybiBhcmcudG9TdHJpbmcoMTApO1xuICAgIH1cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ3doaWxlIGNvbnZlcnRpbmcgbnVtYmVyIHRvIHN0cmluZywgaW52YWxpZCBudW1iZXIgdmFsdWUgXFwnJyArIGFyZyArICdcXCcgdHlwZSAnICsgdHlwZW9mIGFyZyArICcuJyk7XG59XG5cbmZ1bmN0aW9uIGZyb21XZWkod2VpSW5wdXQsIHVuaXQsIG9wdGlvbnNJbnB1dCkge1xuICB2YXIgd2VpID0gbnVtYmVyVG9CTih3ZWlJbnB1dCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgdmFyIG5lZ2F0aXZlID0gd2VpLmx0KHplcm8pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIHZhciBiYXNlID0gZ2V0VmFsdWVPZlVuaXQodW5pdCk7XG4gIHZhciBiYXNlTGVuZ3RoID0gdW5pdE1hcFt1bml0XS5sZW5ndGggLSAxIHx8IDE7XG4gIHZhciBvcHRpb25zID0gb3B0aW9uc0lucHV0IHx8IHt9O1xuXG4gIGlmIChuZWdhdGl2ZSkge1xuICAgIHdlaSA9IHdlaS5tdWwobmVnYXRpdmUxKTtcbiAgfVxuXG4gIHZhciBmcmFjdGlvbiA9IHdlaS5tb2QoYmFzZSkudG9TdHJpbmcoMTApOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgd2hpbGUgKGZyYWN0aW9uLmxlbmd0aCA8IGJhc2VMZW5ndGgpIHtcbiAgICBmcmFjdGlvbiA9ICcwJyArIGZyYWN0aW9uO1xuICB9XG5cbiAgaWYgKCFvcHRpb25zLnBhZCkge1xuICAgIGZyYWN0aW9uID0gZnJhY3Rpb24ubWF0Y2goL14oWzAtOV0qWzEtOV18MCkoMCopLylbMV07XG4gIH1cblxuICB2YXIgd2hvbGUgPSB3ZWkuZGl2KGJhc2UpLnRvU3RyaW5nKDEwKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gIGlmIChvcHRpb25zLmNvbW1pZnkpIHtcbiAgICB3aG9sZSA9IHdob2xlLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csICcsJyk7XG4gIH1cblxuICB2YXIgdmFsdWUgPSAnJyArIHdob2xlICsgKGZyYWN0aW9uID09ICcwJyA/ICcnIDogJy4nICsgZnJhY3Rpb24pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgaWYgKG5lZ2F0aXZlKSB7XG4gICAgdmFsdWUgPSAnLScgKyB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gdG9XZWkoZXRoZXJJbnB1dCwgdW5pdCkge1xuICB2YXIgZXRoZXIgPSBudW1iZXJUb1N0cmluZyhldGhlcklucHV0KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB2YXIgYmFzZSA9IGdldFZhbHVlT2ZVbml0KHVuaXQpO1xuICB2YXIgYmFzZUxlbmd0aCA9IHVuaXRNYXBbdW5pdF0ubGVuZ3RoIC0gMSB8fCAxO1xuXG4gIC8vIElzIGl0IG5lZ2F0aXZlP1xuICB2YXIgbmVnYXRpdmUgPSBldGhlci5zdWJzdHJpbmcoMCwgMSkgPT09ICctJzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBpZiAobmVnYXRpdmUpIHtcbiAgICBldGhlciA9IGV0aGVyLnN1YnN0cmluZygxKTtcbiAgfVxuXG4gIGlmIChldGhlciA9PT0gJy4nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdbZXRoanMtdW5pdF0gd2hpbGUgY29udmVydGluZyBudW1iZXIgJyArIGV0aGVySW5wdXQgKyAnIHRvIHdlaSwgaW52YWxpZCB2YWx1ZScpO1xuICB9XG5cbiAgLy8gU3BsaXQgaXQgaW50byBhIHdob2xlIGFuZCBmcmFjdGlvbmFsIHBhcnRcbiAgdmFyIGNvbXBzID0gZXRoZXIuc3BsaXQoJy4nKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBpZiAoY29tcHMubGVuZ3RoID4gMikge1xuICAgIHRocm93IG5ldyBFcnJvcignW2V0aGpzLXVuaXRdIHdoaWxlIGNvbnZlcnRpbmcgbnVtYmVyICcgKyBldGhlcklucHV0ICsgJyB0byB3ZWksICB0b28gbWFueSBkZWNpbWFsIHBvaW50cycpO1xuICB9XG5cbiAgdmFyIHdob2xlID0gY29tcHNbMF0sXG4gICAgICBmcmFjdGlvbiA9IGNvbXBzWzFdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgaWYgKCF3aG9sZSkge1xuICAgIHdob2xlID0gJzAnO1xuICB9XG4gIGlmICghZnJhY3Rpb24pIHtcbiAgICBmcmFjdGlvbiA9ICcwJztcbiAgfVxuICBpZiAoZnJhY3Rpb24ubGVuZ3RoID4gYmFzZUxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcignW2V0aGpzLXVuaXRdIHdoaWxlIGNvbnZlcnRpbmcgbnVtYmVyICcgKyBldGhlcklucHV0ICsgJyB0byB3ZWksIHRvbyBtYW55IGRlY2ltYWwgcGxhY2VzJyk7XG4gIH1cblxuICB3aGlsZSAoZnJhY3Rpb24ubGVuZ3RoIDwgYmFzZUxlbmd0aCkge1xuICAgIGZyYWN0aW9uICs9ICcwJztcbiAgfVxuXG4gIHdob2xlID0gbmV3IEJOKHdob2xlKTtcbiAgZnJhY3Rpb24gPSBuZXcgQk4oZnJhY3Rpb24pO1xuICB2YXIgd2VpID0gd2hvbGUubXVsKGJhc2UpLmFkZChmcmFjdGlvbik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICBpZiAobmVnYXRpdmUpIHtcbiAgICB3ZWkgPSB3ZWkubXVsKG5lZ2F0aXZlMSk7XG4gIH1cblxuICByZXR1cm4gbmV3IEJOKHdlaS50b1N0cmluZygxMCksIDEwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHVuaXRNYXA6IHVuaXRNYXAsXG4gIG51bWJlclRvU3RyaW5nOiBudW1iZXJUb1N0cmluZyxcbiAgZ2V0VmFsdWVPZlVuaXQ6IGdldFZhbHVlT2ZVbml0LFxuICBmcm9tV2VpOiBmcm9tV2VpLFxuICB0b1dlaTogdG9XZWlcbn07Il0sIm5hbWVzIjpbIkJOIiwicmVxdWlyZSIsIm51bWJlclRvQk4iLCJ6ZXJvIiwibmVnYXRpdmUxIiwidW5pdE1hcCIsImdldFZhbHVlT2ZVbml0IiwidW5pdElucHV0IiwidW5pdCIsInRvTG93ZXJDYXNlIiwidW5pdFZhbHVlIiwiRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwibnVtYmVyVG9TdHJpbmciLCJhcmciLCJtYXRjaCIsIlN0cmluZyIsInRvU3RyaW5nIiwidG9Ud29zIiwiZGl2aWRlZFRvSW50ZWdlckJ5IiwidG9QcmVjaXNpb24iLCJmcm9tV2VpIiwid2VpSW5wdXQiLCJvcHRpb25zSW5wdXQiLCJ3ZWkiLCJuZWdhdGl2ZSIsImx0IiwiYmFzZSIsImJhc2VMZW5ndGgiLCJsZW5ndGgiLCJvcHRpb25zIiwibXVsIiwiZnJhY3Rpb24iLCJtb2QiLCJwYWQiLCJ3aG9sZSIsImRpdiIsImNvbW1pZnkiLCJyZXBsYWNlIiwidmFsdWUiLCJ0b1dlaSIsImV0aGVySW5wdXQiLCJldGhlciIsInN1YnN0cmluZyIsImNvbXBzIiwic3BsaXQiLCJhZGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/ethjs-unit@0.1.6/node_modules/ethjs-unit/lib/index.js\n");

/***/ })

};
;