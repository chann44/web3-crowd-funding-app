"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@paperxyz+embedded-wallet-service-sdk@1.2.5";
exports.ids = ["vendor-chunks/@paperxyz+embedded-wallet-service-sdk@1.2.5"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_TOKEN_LOCAL_STORAGE_NAME: () => (/* binding */ I),\n/* harmony export */   AuthProvider: () => (/* binding */ Y),\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME: () => (/* binding */ W),\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED: () => (/* binding */ X),\n/* harmony export */   PaperEmbeddedWalletSdk: () => (/* binding */ N),\n/* harmony export */   RecoveryShareManagement: () => (/* binding */ w),\n/* harmony export */   UserStatus: () => (/* binding */ H),\n/* harmony export */   UserWalletStatus: () => (/* binding */ P),\n/* harmony export */   WALLET_USER_DETAILS_LOCAL_STORAGE_NAME: () => (/* binding */ J),\n/* harmony export */   WALLET_USER_ID_LOCAL_STORAGE_NAME: () => (/* binding */ L)\n/* harmony export */ });\n/* harmony import */ var _paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paperxyz/sdk-common-utilities */ \"(ssr)/./node_modules/.pnpm/@paperxyz+sdk-common-utilities@0.1.1/node_modules/@paperxyz/sdk-common-utilities/dist/index.mjs\");\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ \"(ssr)/./node_modules/.pnpm/@ethersproject+providers@5.7.2/node_modules/@ethersproject/providers/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/abstract-signer */ \"(ssr)/./node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"(ssr)/./node_modules/.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/lib.esm/index.js\");\nvar z = Object.defineProperty, q = Object.defineProperties;\nvar Z = Object.getOwnPropertyDescriptors;\nvar x = Object.getOwnPropertySymbols;\nvar $ = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable;\nvar k = (s, e, t)=>e in s ? z(s, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : s[e] = t, u = (s, e)=>{\n    for(var t in e || (e = {}))$.call(e, t) && k(s, t, e[t]);\n    if (x) for (var t of x(e))B.call(e, t) && k(s, t, e[t]);\n    return s;\n}, y = (s, e)=>q(s, Z(e));\nvar i = (s, e, t)=>new Promise((r, a)=>{\n        var o = (l)=>{\n            try {\n                d(t.next(l));\n            } catch (p) {\n                a(p);\n            }\n        }, n = (l)=>{\n            try {\n                d(t.throw(l));\n            } catch (p) {\n                a(p);\n            }\n        }, d = (l)=>l.done ? r(l.value) : Promise.resolve(l.value).then(o, n);\n        d((t = t.apply(s, e)).next());\n    });\nvar E = \"/sdk/2022-08-12/embedded-wallet\", de = `${E}/auth/headless-google-login-managed`, J = (s)=>`paperEwsWalletUserDetails-${s}`, L = (s)=>`paperEwsWalletUserId-${s}`, K = \"walletToken\", I = (s)=>`${K}-${s}`, Q = \"a\", W = (s, e)=>`${Q}-${s}-${e}`, X = (s)=>`${Q}-${s}`;\nvar w = ((t)=>(t.USER_MANAGED = \"USER_MANAGED\", t.AWS_MANAGED = \"AWS_MANAGED\", t))(w || {}), Y = ((n)=>(n.PAPER_EMAIL_OTP = \"PaperEmailOTP\", n.GOOGLE = \"Google\", n.TWITTER = \"Twitter\", n.COGNITO = \"Cognito\", n.AUTH0 = \"Auth0\", n.CUSTOM_JWT = \"CustomJWT\", n))(Y || {});\nvar H = ((t)=>(t.LOGGED_OUT = \"Logged Out\", t.LOGGED_IN_WALLET_INITIALIZED = \"Logged In, Wallet Initialized\", t))(H || {}), P = ((a)=>(a.LOGGED_OUT = \"Logged Out\", a.LOGGED_IN_WALLET_UNINITIALIZED = \"Logged In, Wallet Uninitialized\", a.LOGGED_IN_NEW_DEVICE = \"Logged In, New Device\", a.LOGGED_IN_WALLET_INITIALIZED = \"Logged In, Wallet Initialized\", a))(P || {});\n\nvar F = new Map, h = class {\n    constructor({ clientId: e }){\n        this.isSupported =  false && 0, this.clientId = e;\n    }\n    getItem(e) {\n        return i(this, null, function*() {\n            var t;\n            return this.isSupported ? window.localStorage.getItem(e) : (t = F.get(e)) != null ? t : null;\n        });\n    }\n    setItem(e, t) {\n        return i(this, null, function*() {\n            if (this.isSupported) return window.localStorage.setItem(e, t);\n            F.set(e, t);\n        });\n    }\n    removeItem(e) {\n        return i(this, null, function*() {\n            let t = yield this.getItem(e);\n            return this.isSupported && t ? (window.localStorage.removeItem(e), !0) : !1;\n        });\n    }\n    saveAuthCookie(e) {\n        return i(this, null, function*() {\n            yield this.setItem(I(this.clientId), e);\n        });\n    }\n    getAuthCookie() {\n        return i(this, null, function*() {\n            return this.getItem(I(this.clientId));\n        });\n    }\n    removeAuthCookie() {\n        return i(this, null, function*() {\n            return this.removeItem(I(this.clientId));\n        });\n    }\n    saveDeviceShare(e, t) {\n        return i(this, null, function*() {\n            yield this.saveWalletUserId(t), yield this.setItem(W(this.clientId, t), e);\n        });\n    }\n    getDeviceShare() {\n        return i(this, null, function*() {\n            let e = yield this.getWalletUserId();\n            return e ? this.getItem(W(this.clientId, e)) : null;\n        });\n    }\n    removeDeviceShare() {\n        return i(this, null, function*() {\n            let e = yield this.getWalletUserId();\n            return e ? this.removeItem(W(this.clientId, e)) : !1;\n        });\n    }\n    getWalletUserId() {\n        return i(this, null, function*() {\n            return this.getItem(L(this.clientId));\n        });\n    }\n    saveWalletUserId(e) {\n        return i(this, null, function*() {\n            yield this.setItem(L(this.clientId), e);\n        });\n    }\n    removeWalletUserId() {\n        return i(this, null, function*() {\n            return this.removeItem(L(this.clientId));\n        });\n    }\n};\n\nfunction v(s) {\n    return new Promise((e)=>{\n        setTimeout(e, s * 1e3);\n    });\n}\nvar ee = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    colorScheme: \"light\",\n    position: \"fixed\",\n    top: \"0px\",\n    right: \"0px\",\n    zIndex: \"2147483646\",\n    display: \"none\"\n}, G = new Map, f = class {\n    constructor({ link: e, iframeId: t, container: r = document.body, iframeStyles: a, onIframeInitialize: o }){\n        this.POLLING_INTERVAL_SECONDS = 1.4;\n        this.POST_LOAD_BUFFER_SECONDS = 1;\n        let n = document.getElementById(t), d = new URL(e), l = \"1.2.5\";\n        if (!l) throw new Error(\"Missing SDK_VERSION env var\");\n        if (d.searchParams.set(\"sdkVersion\", l), !n || n.src != d.href) {\n            if (!n) {\n                n = document.createElement(\"iframe\");\n                let p = u(u({}, ee), a);\n                Object.assign(n.style, p), n.setAttribute(\"id\", t), n.setAttribute(\"fetchpriority\", \"high\"), r.appendChild(n);\n            }\n            n.src = d.href, n.setAttribute(\"data-version\", l), n.onload = this.onIframeLoadHandler(n, this.POST_LOAD_BUFFER_SECONDS, o);\n        }\n        this.iframe = n;\n    }\n    onIframeLoadedInitVariables() {\n        return i(this, null, function*() {\n            return {};\n        });\n    }\n    onIframeLoadHandler(e, t, r) {\n        return ()=>i(this, null, function*() {\n                yield new Promise((o, n)=>i(this, null, function*() {\n                        var p;\n                        let d = new MessageChannel;\n                        d.port1.onmessage = (m)=>{\n                            let { data: c } = m;\n                            return d.port1.close(), c.success ? (G.set(e.src, !0), r && r(), o(!0)) : n(new Error(c.error));\n                        }, yield v(t);\n                        let l = \"initIframe\";\n                        (p = e == null ? void 0 : e.contentWindow) == null || p.postMessage({\n                            eventType: l,\n                            data: yield this.onIframeLoadedInitVariables()\n                        }, `${(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()}${E}`, [\n                            d.port2\n                        ]);\n                    }));\n            });\n    }\n    call(o) {\n        return i(this, arguments, function*({ procedureName: e, params: t, showIframe: r = !1, injectRecoveryCode: a = {\n            isInjectRecoveryCode: !1\n        } }) {\n            for(; !G.get(this.iframe.src);)yield v(this.POLLING_INTERVAL_SECONDS);\n            return r && (this.iframe.style.display = \"block\", yield v(.005)), new Promise((d, l)=>{\n                var m;\n                if (a.isInjectRecoveryCode) {\n                    let c = (g)=>i(this, null, function*() {\n                            var U, b;\n                            if (g.origin !== (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)() || g.data.type !== \"paper_getRecoveryCode\" || typeof g.data.userWalletId != \"string\") return;\n                            let V = yield (U = a.getRecoveryCode) == null ? void 0 : U.call(a, g.data.userWalletId);\n                            (b = this.iframe.contentWindow) == null || b.postMessage({\n                                type: \"paper_getRecoveryCode_response\",\n                                recoveryCode: V\n                            }, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()), window.removeEventListener(\"message\", c);\n                        });\n                    window.addEventListener(\"message\", c);\n                }\n                let p = new MessageChannel;\n                p.port1.onmessage = (c)=>i(this, null, function*() {\n                        let { data: g } = c;\n                        p.port1.close(), r && (yield v(.1), this.iframe.style.display = \"none\"), g.success ? d(g.data) : l(new Error(g.error));\n                    }), (m = this.iframe.contentWindow) == null || m.postMessage({\n                    eventType: e,\n                    data: t\n                }, `${(0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()}${E}`, [\n                    p.port2\n                ]);\n            });\n        });\n    }\n    destroy() {\n        G.delete(this.iframe.src);\n    }\n};\nvar _ = class extends f {\n    constructor({ clientId: t, customizationOptions: r }){\n        super({\n            iframeId: ie,\n            link: re({\n                clientId: t,\n                path: E,\n                queryParams: r\n            }).href,\n            container: document.body\n        });\n        this.clientId = t;\n    }\n    onIframeLoadedInitVariables() {\n        return i(this, null, function*() {\n            let t = new h({\n                clientId: this.clientId\n            });\n            return {\n                authCookie: yield t.getAuthCookie(),\n                deviceShareStored: yield t.getDeviceShare(),\n                walletUserId: yield t.getWalletUserId(),\n                clientId: this.clientId\n            };\n        });\n    }\n};\nfunction re({ clientId: s, path: e, queryParams: t }) {\n    var a;\n    let r = new URL(e, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)());\n    if (t) for (let o of Object.keys(t))r.searchParams.set(o, ((a = t[o]) == null ? void 0 : a.toString()) || \"\");\n    return r.searchParams.set(\"clientId\", s), r;\n}\nvar ie = \"paper-embedded-wallet-iframe\";\n\nvar A = class {\n    constructor({ querier: e, preLogin: t, postLogin: r, clientId: a }){\n        this.LoginQuerier = e, this.preLogin = t, this.postLogin = r, this.clientId = a;\n    }\n    sendPaperEmailLoginOtp(r) {\n        return i(this, arguments, function*({ email: e, recoveryShareManagement: t }) {\n            yield this.preLogin();\n            let { isNewUser: a, isNewDevice: o, recoveryShareManagement: n } = yield this.LoginQuerier.call({\n                procedureName: \"sendPaperEmailLoginOtp\",\n                params: {\n                    email: e,\n                    recoveryShareManagement: t\n                }\n            });\n            return {\n                isNewUser: a,\n                isNewDevice: o,\n                recoveryShareManagement: n\n            };\n        });\n    }\n};\nvar C = class extends A {\n    constructor(){\n        super(...arguments);\n        this.closeWindow = ({ isWindowOpenedByFn: t, win: r, closeOpenedWindow: a })=>{\n            t ? r == null || r.close() : r && a ? a(r) : r && r.close();\n        };\n    }\n    loginWithPaperModal() {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let t = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(t);\n        });\n    }\n    getGoogleLoginUrl() {\n        return i(this, null, function*() {\n            return yield this.LoginQuerier.call({\n                procedureName: \"getHeadlessGoogleLoginLink\",\n                params: void 0\n            });\n        });\n    }\n    loginWithGoogle(t) {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let r = t == null ? void 0 : t.openedWindow, a = !1;\n            if (r || (r = window.open(\"\", \"Login\", \"width=350, height=500\"), a = !0), !r) throw new Error(\"Something went wrong opening pop-up\");\n            yield this.preLogin();\n            let { loginLink: o } = yield this.getGoogleLoginUrl();\n            r.location.href = o;\n            let n = yield new Promise((d, l)=>{\n                let p = window.setInterval(()=>i(this, null, function*() {\n                        r && r.closed && (clearInterval(p), window.removeEventListener(\"message\", m), l(new Error(\"User closed login window\")));\n                    }), 1e3), m = (c)=>i(this, null, function*() {\n                        if (c.origin === (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)()) {\n                            if (typeof c.data != \"object\") {\n                                l(new Error(\"Invalid event data\"));\n                                return;\n                            }\n                            switch(c.data.eventType){\n                                case \"userLoginSuccess\":\n                                    {\n                                        window.removeEventListener(\"message\", m), clearInterval(p), this.closeWindow({\n                                            isWindowOpenedByFn: a,\n                                            win: r,\n                                            closeOpenedWindow: t == null ? void 0 : t.closeOpenedWindow\n                                        }), c.data.authResult && d(c.data.authResult);\n                                        break;\n                                    }\n                                case \"userLoginFailed\":\n                                    {\n                                        window.removeEventListener(\"message\", m), clearInterval(p), this.closeWindow({\n                                            isWindowOpenedByFn: a,\n                                            win: r,\n                                            closeOpenedWindow: t == null ? void 0 : t.closeOpenedWindow\n                                        }), l(new Error(c.data.error));\n                                        break;\n                                    }\n                                case \"injectDeveloperClientId\":\n                                    {\n                                        r == null || r.postMessage({\n                                            eventType: \"injectDeveloperClientIdResult\",\n                                            developerClientId: this.clientId\n                                        }, (0,_paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.getPaperOriginUrl)());\n                                        break;\n                                    }\n                            }\n                        }\n                    });\n                window.addEventListener(\"message\", m);\n            });\n            return this.postLogin({\n                storedToken: y(u({}, n.storedToken), {\n                    shouldStoreCookieString: !0\n                }),\n                walletDetails: y(u({}, n.walletDetails), {\n                    isIframeStorageEnabled: !1\n                })\n            });\n        });\n    }\n    loginWithPaperEmailOtp(r) {\n        return i(this, arguments, function*({ email: t }) {\n            yield this.preLogin();\n            let a = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    email: t,\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(a);\n        });\n    }\n    verifyPaperEmailLoginOtp(a) {\n        return i(this, arguments, function*({ email: t, otp: r }) {\n            let o = yield this.LoginQuerier.call({\n                procedureName: \"verifyPaperEmailLoginOtp\",\n                params: {\n                    email: t,\n                    otp: r,\n                    recoveryShareManagement: \"AWS_MANAGED\"\n                },\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n};\nvar D = class extends A {\n    loginWithPaperModal(e) {\n        return i(this, null, function*() {\n            yield this.preLogin();\n            let t = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: void 0,\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0,\n                    getRecoveryCode: e == null ? void 0 : e.getRecoveryCode\n                }\n            });\n            return this.postLogin(t);\n        });\n    }\n    loginWithGoogle(e) {\n        return i(this, null, function*() {\n            throw new Error(\"loginWithGoogle is not yet supported in the RecoveryShareManagement.USER_MANAGED flow. Please use RecoveryShareManagement.AWS_MANAGED instead.\");\n        });\n    }\n    loginWithPaperEmailOtp(r) {\n        return i(this, arguments, function*({ email: e, recoveryCode: t }) {\n            yield this.preLogin();\n            let a = yield this.LoginQuerier.call({\n                procedureName: \"loginWithPaperModal\",\n                params: {\n                    email: e,\n                    recoveryCode: t\n                },\n                showIframe: !0,\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(a);\n        });\n    }\n    verifyPaperEmailLoginOtp(a) {\n        return i(this, arguments, function*({ email: e, otp: t, recoveryCode: r }) {\n            let o = yield this.LoginQuerier.call({\n                procedureName: \"verifyPaperEmailLoginOtp\",\n                params: {\n                    email: e,\n                    otp: t,\n                    recoveryCode: r\n                },\n                injectRecoveryCode: {\n                    isInjectRecoveryCode: !0\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n};\nvar M = class {\n    constructor({ clientId: e, advancedOptions: t, querier: r, onAuthSuccess: a }){\n        var o;\n        this.clientId = e, this.advancedOptions = {\n            recoveryShareManagement: (o = t == null ? void 0 : t.recoveryShareManagement) != null ? o : \"AWS_MANAGED\"\n        }, this.AuthQuerier = r, this.localStorage = new h({\n            clientId: e\n        }), this.onAuthSuccess = a, this.userManagedLogin = new D({\n            postLogin: (n)=>i(this, null, function*() {\n                    return this.postLogin(n);\n                }),\n            preLogin: ()=>i(this, null, function*() {\n                    yield this.preLogin();\n                }),\n            querier: r,\n            clientId: e\n        }), this.awsManagedLogin = new C({\n            postLogin: (n)=>i(this, null, function*() {\n                    return this.postLogin(n);\n                }),\n            preLogin: ()=>i(this, null, function*() {\n                    yield this.preLogin();\n                }),\n            querier: r,\n            clientId: e\n        });\n    }\n    preLogin() {\n        return i(this, null, function*() {\n            yield this.logout();\n        });\n    }\n    postLogin(r) {\n        return i(this, arguments, function*({ storedToken: e, walletDetails: t }) {\n            return e.shouldStoreCookieString && (yield this.localStorage.saveAuthCookie(e.cookieString)), yield this.onAuthSuccess({\n                storedToken: e,\n                walletDetails: t\n            });\n        });\n    }\n    loginWithJwtAuth(a) {\n        return i(this, arguments, function*({ token: e, authProvider: t, recoveryCode: r }) {\n            yield this.preLogin();\n            let o = yield this.AuthQuerier.call({\n                procedureName: \"loginWithJwtAuthCallback\",\n                params: {\n                    token: e,\n                    authProvider: t,\n                    recoveryCode: r\n                }\n            });\n            return this.postLogin(o);\n        });\n    }\n    loginWithPaperModal(e) {\n        return i(this, null, function*() {\n            return yield this.preLogin(), this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithPaperModal() : this.userManagedLogin.loginWithPaperModal(e);\n        });\n    }\n    loginWithPaperEmailOtp(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithPaperEmailOtp({\n                email: e.email\n            }) : this.userManagedLogin.loginWithPaperEmailOtp(e);\n        });\n    }\n    loginWithGoogle(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.loginWithGoogle(e) : this.userManagedLogin.loginWithGoogle();\n        });\n    }\n    sendPaperEmailLoginOtp(t) {\n        return i(this, arguments, function*({ email: e }) {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.sendPaperEmailLoginOtp({\n                email: e,\n                recoveryShareManagement: \"AWS_MANAGED\"\n            }) : this.userManagedLogin.sendPaperEmailLoginOtp({\n                email: e\n            });\n        });\n    }\n    verifyPaperEmailLoginOtp(e) {\n        return i(this, null, function*() {\n            return this.advancedOptions.recoveryShareManagement === \"AWS_MANAGED\" ? this.awsManagedLogin.verifyPaperEmailLoginOtp(e) : this.userManagedLogin.verifyPaperEmailLoginOtp(e);\n        });\n    }\n    logout() {\n        return i(this, null, function*() {\n            let { success: e } = yield this.AuthQuerier.call({\n                procedureName: \"logout\",\n                params: void 0\n            }), t = yield this.localStorage.removeAuthCookie(), r = yield this.localStorage.removeWalletUserId();\n            return {\n                success: e || t || r\n            };\n        });\n    }\n};\n\n\nvar R = class {\n    constructor({ chain: e, clientId: t, querier: r }){\n        this.chain = e, this.clientId = t, this.gaslessTransactionQuerier = r;\n    }\n    callContract(a) {\n        return i(this, arguments, function*({ contractAddress: e, methodArgs: t, methodInterface: r }) {\n            return yield this.gaslessTransactionQuerier.call({\n                procedureName: \"callContract\",\n                params: {\n                    chain: this.chain,\n                    contractAddress: e,\n                    method: {\n                        args: t,\n                        stub: r\n                    }\n                }\n            });\n        });\n    }\n};\n\n\nvar T = class extends _ethersproject_abstract_signer__WEBPACK_IMPORTED_MODULE_1__.Signer {\n    constructor({ provider: t, clientId: r, querier: a }){\n        var o;\n        super();\n        this.DEFAULT_ETHEREUM_CHAIN_ID = 5;\n        this.clientId = r, this.querier = a, this.endpoint = (o = t.connection) == null ? void 0 : o.url, (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"provider\", t);\n    }\n    getAddress() {\n        return i(this, null, function*() {\n            let { address: t } = yield this.querier.call({\n                procedureName: \"getAddress\",\n                params: void 0\n            });\n            return t;\n        });\n    }\n    signMessage(t) {\n        return i(this, null, function*() {\n            var o, n, d, l;\n            let r = yield (o = this.provider) == null ? void 0 : o.getNetwork();\n            r && r._defaultProvider;\n            let { signedMessage: a } = yield this.querier.call({\n                procedureName: \"signMessage\",\n                params: {\n                    message: t,\n                    chainId: (l = (d = yield (n = this.provider) == null ? void 0 : n.getNetwork()) == null ? void 0 : d.chainId) != null ? l : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return a;\n        });\n    }\n    signTransaction(t) {\n        return i(this, null, function*() {\n            var a, o, n;\n            let { signedTransaction: r } = yield this.querier.call({\n                procedureName: \"signTransaction\",\n                params: {\n                    transaction: t,\n                    chainId: (n = (o = yield (a = this.provider) == null ? void 0 : a.getNetwork()) == null ? void 0 : o.chainId) != null ? n : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return r;\n        });\n    }\n    _signTypedData(t, r, a) {\n        return i(this, null, function*() {\n            var n, d, l;\n            let { signedTypedData: o } = yield this.querier.call({\n                procedureName: \"signTypedDataV4\",\n                params: {\n                    domain: t,\n                    types: r,\n                    message: a,\n                    chainId: (l = (d = yield (n = this.provider) == null ? void 0 : n.getNetwork()) == null ? void 0 : d.chainId) != null ? l : this.DEFAULT_ETHEREUM_CHAIN_ID,\n                    rpcEndpoint: this.endpoint\n                }\n            });\n            return o;\n        });\n    }\n    connect(t) {\n        return new T({\n            clientId: this.clientId,\n            provider: t,\n            querier: this.querier\n        });\n    }\n};\nvar O = class {\n    constructor({ clientId: e, chain: t, querier: r }){\n        this.clientId = e, this.chain = t, this.walletManagerQuerier = r, this.gasless = new R({\n            chain: t,\n            clientId: e,\n            querier: r\n        }), this.localStorage = new h({\n            clientId: e\n        });\n    }\n    postWalletSetUp(o) {\n        return i(this, arguments, function*({ deviceShareStored: e, walletAddress: t, isIframeStorageEnabled: r, walletUserId: a }) {\n            return r || (yield this.localStorage.saveDeviceShare(e, a)), {\n                walletAddress: t\n            };\n        });\n    }\n    getUserWalletStatus() {\n        return i(this, null, function*() {\n            let e = yield this.walletManagerQuerier.call({\n                procedureName: \"getUserStatus\",\n                params: void 0\n            });\n            return e.status === \"Logged In, Wallet Initialized\" ? {\n                status: \"Logged In, Wallet Initialized\",\n                user: y(u({}, e.user), {\n                    wallet: this\n                })\n            } : e;\n        });\n    }\n    setChain(t) {\n        return i(this, arguments, function*({ chain: e }) {\n            this.chain = e, this.gasless = new R({\n                chain: e,\n                clientId: this.clientId,\n                querier: this.walletManagerQuerier\n            });\n        });\n    }\n    getEthersJsSigner(e) {\n        return i(this, null, function*() {\n            var r;\n            return new T({\n                clientId: this.clientId,\n                provider: (0,_ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.getDefaultProvider)((r = e == null ? void 0 : e.rpcEndpoint) != null ? r : _paperxyz_sdk_common_utilities__WEBPACK_IMPORTED_MODULE_0__.ChainToPublicRpc[this.chain]),\n                querier: this.walletManagerQuerier\n            });\n        });\n    }\n};\nvar N = class {\n    constructor({ clientId: e, chain: t, styles: r, advancedOptions: a, onAuthSuccess: o }){\n        this.clientId = e, this.querier = new _({\n            clientId: e,\n            customizationOptions: r\n        }), this.wallet = new O({\n            clientId: e,\n            chain: t,\n            querier: this.querier\n        }), this.auth = new M({\n            clientId: e,\n            advancedOptions: u({\n                recoveryShareManagement: \"USER_MANAGED\"\n            }, a != null ? a : {}),\n            querier: this.querier,\n            onAuthSuccess: (n)=>i(this, null, function*() {\n                    return yield this.wallet.postWalletSetUp(y(u({}, n.walletDetails), {\n                        walletUserId: n.storedToken.authDetails.userWalletId\n                    })), yield this.querier.call({\n                        procedureName: \"initIframe\",\n                        params: {\n                            deviceShareStored: n.walletDetails.deviceShareStored,\n                            clientId: this.clientId,\n                            walletUserId: n.storedToken.authDetails.userWalletId,\n                            authCookie: n.storedToken.cookieString\n                        }\n                    }), o == null || o(n), {\n                        user: {\n                            status: \"Logged In, Wallet Initialized\",\n                            authDetails: n.storedToken.authDetails,\n                            wallet: this.wallet,\n                            walletAddress: n.walletDetails.walletAddress\n                        }\n                    };\n                })\n        });\n    }\n    getUser() {\n        return i(this, null, function*() {\n            let e = yield this.wallet.getUserWalletStatus();\n            switch(e.status){\n                case \"Logged In, New Device\":\n                case \"Logged In, Wallet Uninitialized\":\n                    return yield this.auth.logout(), this.getUser();\n                case \"Logged Out\":\n                    return {\n                        status: \"Logged Out\"\n                    };\n                case \"Logged In, Wallet Initialized\":\n                    return u({\n                        status: \"Logged In, Wallet Initialized\"\n                    }, e.user);\n            }\n        });\n    }\n};\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@paperxyz+embedded-wallet-service-sdk@1.2.5/node_modules/@paperxyz/embedded-wallet-service-sdk/dist/index.mjs\n");

/***/ })

};
;