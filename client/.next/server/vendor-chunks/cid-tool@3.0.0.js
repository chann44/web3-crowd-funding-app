"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/cid-tool@3.0.0";
exports.ids = ["vendor-chunks/cid-tool@3.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/base32.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/base32.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CID = __webpack_require__(/*! cids */ \"(ssr)/./node_modules/.pnpm/cids@1.1.9/node_modules/cids/src/index.js\");\n// @ts-ignore no types\nconst explain = __webpack_require__(/*! explain-error */ \"(ssr)/./node_modules/.pnpm/explain-error@1.0.4/node_modules/explain-error/index.js\");\n/**\n * @param {CID | string | Uint8Array} cid\n */ module.exports = function base32(cid) {\n    try {\n        cid = new CID(cid);\n    } catch (err) {\n        throw explain(err, `invalid cid: ${cid}`);\n    }\n    if (cid.version !== 1) {\n        cid = cid.toV1();\n    }\n    return cid.toBaseEncodedString(\"base32\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2Jhc2UzMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBQ3BCLHNCQUFzQjtBQUN0QixNQUFNQyxVQUFVRCxtQkFBT0EsQ0FBQztBQUV4Qjs7Q0FFQyxHQUNERSxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsT0FBUUMsR0FBRztJQUNuQyxJQUFJO1FBQ0ZBLE1BQU0sSUFBSU4sSUFBSU07SUFDaEIsRUFBRSxPQUFPQyxLQUFLO1FBQ1osTUFBTUwsUUFBUUssS0FBSyxDQUFDLGFBQWEsRUFBRUQsSUFBSSxDQUFDO0lBQzFDO0lBRUEsSUFBSUEsSUFBSUUsT0FBTyxLQUFLLEdBQUc7UUFDckJGLE1BQU1BLElBQUlHLElBQUk7SUFDaEI7SUFFQSxPQUFPSCxJQUFJSSxtQkFBbUIsQ0FBQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy8ucG5wbS9jaWQtdG9vbEAzLjAuMC9ub2RlX21vZHVsZXMvY2lkLXRvb2wvc3JjL2NvcmUvYmFzZTMyLmpzPzFhZjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IENJRCA9IHJlcXVpcmUoJ2NpZHMnKVxuLy8gQHRzLWlnbm9yZSBubyB0eXBlc1xuY29uc3QgZXhwbGFpbiA9IHJlcXVpcmUoJ2V4cGxhaW4tZXJyb3InKVxuXG4vKipcbiAqIEBwYXJhbSB7Q0lEIHwgc3RyaW5nIHwgVWludDhBcnJheX0gY2lkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmFzZTMyIChjaWQpIHtcbiAgdHJ5IHtcbiAgICBjaWQgPSBuZXcgQ0lEKGNpZClcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgdGhyb3cgZXhwbGFpbihlcnIsIGBpbnZhbGlkIGNpZDogJHtjaWR9YClcbiAgfVxuXG4gIGlmIChjaWQudmVyc2lvbiAhPT0gMSkge1xuICAgIGNpZCA9IGNpZC50b1YxKClcbiAgfVxuXG4gIHJldHVybiBjaWQudG9CYXNlRW5jb2RlZFN0cmluZygnYmFzZTMyJylcbn1cbiJdLCJuYW1lcyI6WyJDSUQiLCJyZXF1aXJlIiwiZXhwbGFpbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJiYXNlMzIiLCJjaWQiLCJlcnIiLCJ2ZXJzaW9uIiwidG9WMSIsInRvQmFzZUVuY29kZWRTdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/bases.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/bases.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst multibase = __webpack_require__(/*! multibase */ \"(ssr)/./node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/index.js\");\nmodule.exports = function bases() {\n    const output = [];\n    for (const base of Object.values(multibase.names)){\n        output.push({\n            name: base.name,\n            code: base.code\n        });\n    }\n    return output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFFMUJDLE9BQU9DLE9BQU8sR0FBRyxTQUFTQztJQUN4QixNQUFNQyxTQUFTLEVBQUU7SUFFakIsS0FBSyxNQUFNQyxRQUFRQyxPQUFPQyxNQUFNLENBQUNSLFVBQVVTLEtBQUssRUFBRztRQUNqREosT0FBT0ssSUFBSSxDQUFDO1lBQUVDLE1BQU1MLEtBQUtLLElBQUk7WUFBRUMsTUFBTU4sS0FBS00sSUFBSTtRQUFDO0lBQ2pEO0lBRUEsT0FBT1A7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy8ucG5wbS9jaWQtdG9vbEAzLjAuMC9ub2RlX21vZHVsZXMvY2lkLXRvb2wvc3JjL2NvcmUvYmFzZXMuanM/YjlkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgbXVsdGliYXNlID0gcmVxdWlyZSgnbXVsdGliYXNlJylcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBiYXNlcyAoKSB7XG4gIGNvbnN0IG91dHB1dCA9IFtdXG5cbiAgZm9yIChjb25zdCBiYXNlIG9mIE9iamVjdC52YWx1ZXMobXVsdGliYXNlLm5hbWVzKSkge1xuICAgIG91dHB1dC5wdXNoKHsgbmFtZTogYmFzZS5uYW1lLCBjb2RlOiBiYXNlLmNvZGUgfSlcbiAgfVxuXG4gIHJldHVybiBvdXRwdXRcbn1cbiJdLCJuYW1lcyI6WyJtdWx0aWJhc2UiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImJhc2VzIiwib3V0cHV0IiwiYmFzZSIsIk9iamVjdCIsInZhbHVlcyIsIm5hbWVzIiwicHVzaCIsIm5hbWUiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/codecs.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/codecs.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CID = __webpack_require__(/*! cids */ \"(ssr)/./node_modules/.pnpm/cids@1.1.9/node_modules/cids/src/index.js\");\nmodule.exports = function codecs() {\n    const output = [];\n    for (const [key, value] of Object.entries(CID.codecs)){\n        output.push({\n            name: key,\n            code: value\n        });\n    }\n    return output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2NvZGVjcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBRXBCQyxPQUFPQyxPQUFPLEdBQUcsU0FBU0M7SUFDeEIsTUFBTUMsU0FBUyxFQUFFO0lBRWpCLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxNQUFNLElBQUlDLE9BQU9DLE9BQU8sQ0FBQ1QsSUFBSUksTUFBTSxFQUFHO1FBQ3JEQyxPQUFPSyxJQUFJLENBQUM7WUFBRUMsTUFBTUw7WUFBS00sTUFBTUw7UUFBTTtJQUN2QztJQUVBLE9BQU9GO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGllbnQvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2NvZGVjcy5qcz82OTEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBDSUQgPSByZXF1aXJlKCdjaWRzJylcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb2RlY3MgKCkge1xuICBjb25zdCBvdXRwdXQgPSBbXVxuXG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKENJRC5jb2RlY3MpKSB7XG4gICAgb3V0cHV0LnB1c2goeyBuYW1lOiBrZXksIGNvZGU6IHZhbHVlIH0pXG4gIH1cblxuICByZXR1cm4gb3V0cHV0XG59XG4iXSwibmFtZXMiOlsiQ0lEIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb2RlY3MiLCJvdXRwdXQiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImVudHJpZXMiLCJwdXNoIiwibmFtZSIsImNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/codecs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/format.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/format.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst CID = __webpack_require__(/*! cids */ \"(ssr)/./node_modules/.pnpm/cids@1.1.9/node_modules/cids/src/index.js\");\nconst bases = __webpack_require__(/*! ./bases */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/bases.js\");\nconst codecs = __webpack_require__(/*! ./codecs */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/codecs.js\");\n// @ts-ignore no types\nconst explain = __webpack_require__(/*! explain-error */ \"(ssr)/./node_modules/.pnpm/explain-error@1.0.4/node_modules/explain-error/index.js\");\nconst multibase = __webpack_require__(/*! multibase */ \"(ssr)/./node_modules/.pnpm/multibase@4.0.6/node_modules/multibase/src/index.js\");\nconst multihash = __webpack_require__(/*! multihashes */ \"(ssr)/./node_modules/.pnpm/multihashes@4.0.3/node_modules/multihashes/src/index.js\");\nconst uint8ArrayToString = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/to-string.js\");\n/**\n * @typedef {import('multibase').BaseName} BaseName\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\n */ /**\n * @param {CID | string | Uint8Array} cid\n * @param {import('./types').FormatOptions} options\n */ module.exports = function format(cid, options) {\n    options = options || {};\n    let formatStr = options.format || \"%s\";\n    if (formatStr === \"prefix\") {\n        formatStr = \"%P\";\n    }\n    if (!isString(formatStr) || formatStr.indexOf(\"%\") === -1) {\n        throw new Error(`invalid format string: ${formatStr}`);\n    }\n    const originalCid = cid;\n    try {\n        cid = new CID(cid);\n    } catch (err) {\n        throw explain(err, `invalid cid: ${cid}`);\n    }\n    if (options.cidVersion != null && cid.version !== options.cidVersion) {\n        if (options.cidVersion === 0) {\n            cid = cid.toV0();\n        } else if (options.cidVersion === 1) {\n            cid = cid.toV1();\n        } else {\n            throw new Error(`invalid cid version: ${options.cidVersion}`);\n        }\n    }\n    /**\n   * @type {BaseName}\n   */ let base = \"base58btc\";\n    if (options.base) {\n        // Validate passed base name/code\n        base = findBase(options.base).name;\n    } else if (isString(originalCid)) {\n        // Use base of input CID if string\n        base = multibase.isEncoded(originalCid) || base;\n    }\n    return formatStr.replace(/%([a-zA-Z%])/g, replacer(cid, base));\n};\n/**\n * @param {*} obj\n * @returns {obj is String}\n */ function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n}\n/**\n * @param {CID} cid\n * @param {BaseName} base\n * @returns {(match: any, specifier: string) => string}\n */ function replacer(cid, base) {\n    /**\n   * @param {*} match\n   * @param {string} specifier\n   */ const replace = (match, specifier)=>{\n        switch(specifier){\n            case \"%\":\n                return \"%\";\n            case \"b\":\n                return base;\n            case \"B\":\n                return findBase(base).code;\n            case \"v\":\n                return `cidv${cid.version}`;\n            case \"V\":\n                return cid.version.toString();\n            case \"c\":\n                return cid.codec;\n            case \"C\":\n                return findCodec(cid).toString();\n            case \"h\":\n                return multihash.decode(cid.multihash).name;\n            case \"H\":\n                return multihash.decode(cid.multihash).code.toString();\n            case \"L\":\n                return multihash.decode(cid.multihash).length.toString();\n            case \"m\":\n                return uint8ArrayToString(multibase.encode(base, cid.multihash));\n            case \"M\":\n                return uint8ArrayToString(cid.multihash, base);\n            case \"d\":\n                return uint8ArrayToString(multibase.encode(base, multihash.decode(cid.multihash).digest));\n            case \"D\":\n                return uint8ArrayToString(multihash.decode(cid.multihash).digest, base);\n            case \"s\":\n                return cid.toString(base);\n            case \"S\":\n                return cid.version === 1 ? cid.toString(base).slice(1) : uint8ArrayToString(cid.bytes, base);\n            case \"P\":\n                return prefix(cid);\n            default:\n                throw new Error(`unrecognized specifier in format string: ${specifier}`);\n        }\n    };\n    return replace;\n}\n/**\n * @param {BaseNameOrCode} nameOrCode\n */ function findBase(nameOrCode) {\n    const baseNameCode = bases().find((b)=>b.code === nameOrCode || b.name === nameOrCode);\n    if (!baseNameCode) {\n        throw new Error(`invalid multibase: ${nameOrCode}`);\n    }\n    return baseNameCode;\n}\n/**\n * @param {CID} cid\n */ function findCodec(cid) {\n    const codec = codecs().find((c)=>c.name === cid.codec);\n    if (!codec) {\n        throw new Error(`invalid codec: ${cid.codec}`);\n    }\n    return codec.code;\n}\n/**\n * @param {CID} cid\n */ function prefix(cid) {\n    const { name, length } = multihash.decode(cid.multihash);\n    return `cidv${cid.version}-${cid.codec}-${name}-${length}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/hashes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/hashes.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst multihash = __webpack_require__(/*! multihashes */ \"(ssr)/./node_modules/.pnpm/multihashes@4.0.3/node_modules/multihashes/src/index.js\");\n// TODO: list only safe hashes https://github.com/ipfs/go-verifcid\nmodule.exports = function hashes() {\n    const output = [];\n    for (const [name, code] of Object.entries(multihash.names)){\n        output.push({\n            name,\n            code\n        });\n    }\n    return output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2hhc2hlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFlBQVlDLG1CQUFPQSxDQUFDO0FBRTFCLGtFQUFrRTtBQUNsRUMsT0FBT0MsT0FBTyxHQUFHLFNBQVNDO0lBQ3hCLE1BQU1DLFNBQVMsRUFBRTtJQUVqQixLQUFLLE1BQU0sQ0FBQ0MsTUFBTUMsS0FBSyxJQUFJQyxPQUFPQyxPQUFPLENBQUNULFVBQVVVLEtBQUssRUFBRztRQUMxREwsT0FBT00sSUFBSSxDQUFDO1lBQUVMO1lBQU1DO1FBQUs7SUFDM0I7SUFFQSxPQUFPRjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2NpZC10b29sQDMuMC4wL25vZGVfbW9kdWxlcy9jaWQtdG9vbC9zcmMvY29yZS9oYXNoZXMuanM/NDFmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgbXVsdGloYXNoID0gcmVxdWlyZSgnbXVsdGloYXNoZXMnKVxuXG4vLyBUT0RPOiBsaXN0IG9ubHkgc2FmZSBoYXNoZXMgaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvZ28tdmVyaWZjaWRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaGFzaGVzICgpIHtcbiAgY29uc3Qgb3V0cHV0ID0gW11cblxuICBmb3IgKGNvbnN0IFtuYW1lLCBjb2RlXSBvZiBPYmplY3QuZW50cmllcyhtdWx0aWhhc2gubmFtZXMpKSB7XG4gICAgb3V0cHV0LnB1c2goeyBuYW1lLCBjb2RlIH0pXG4gIH1cblxuICByZXR1cm4gb3V0cHV0XG59XG4iXSwibmFtZXMiOlsibXVsdGloYXNoIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJoYXNoZXMiLCJvdXRwdXQiLCJuYW1lIiwiY29kZSIsIk9iamVjdCIsImVudHJpZXMiLCJuYW1lcyIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/hashes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.base32 = __webpack_require__(/*! ./base32 */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/base32.js\");\nexports.bases = __webpack_require__(/*! ./bases */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/bases.js\");\nexports.codecs = __webpack_require__(/*! ./codecs */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/codecs.js\");\nexports.format = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/format.js\");\nexports.hashes = __webpack_require__(/*! ./hashes */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/hashes.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9jb3JlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDBJQUF5QjtBQUN6QkEsdUlBQXdCO0FBQ3hCQSwwSUFBeUI7QUFDekJBLDBJQUF5QjtBQUN6QkEsMElBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2NpZC10b29sQDMuMC4wL25vZGVfbW9kdWxlcy9jaWQtdG9vbC9zcmMvY29yZS9pbmRleC5qcz9kYWJjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJhc2UzMiA9IHJlcXVpcmUoJy4vYmFzZTMyJylcbmV4cG9ydHMuYmFzZXMgPSByZXF1aXJlKCcuL2Jhc2VzJylcbmV4cG9ydHMuY29kZWNzID0gcmVxdWlyZSgnLi9jb2RlY3MnKVxuZXhwb3J0cy5mb3JtYXQgPSByZXF1aXJlKCcuL2Zvcm1hdCcpXG5leHBvcnRzLmhhc2hlcyA9IHJlcXVpcmUoJy4vaGFzaGVzJylcbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiYmFzZTMyIiwicmVxdWlyZSIsImJhc2VzIiwiY29kZWNzIiwiZm9ybWF0IiwiaGFzaGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/index.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * @typedef {import('./core/types').FormatOptions} FormatOptions\n */ module.exports = __webpack_require__(/*! ./core */ \"(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/core/index.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vY2lkLXRvb2xAMy4wLjAvbm9kZV9tb2R1bGVzL2NpZC10b29sL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBRURBLHVJQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy8ucG5wbS9jaWQtdG9vbEAzLjAuMC9ub2RlX21vZHVsZXMvY2lkLXRvb2wvc3JjL2luZGV4LmpzPzdjMmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9jb3JlL3R5cGVzJykuRm9ybWF0T3B0aW9uc30gRm9ybWF0T3B0aW9uc1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9jb3JlJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cid-tool@3.0.0/node_modules/cid-tool/src/index.js\n");

/***/ })

};
;