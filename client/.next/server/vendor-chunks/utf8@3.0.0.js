/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/utf8@3.0.0";
exports.ids = ["vendor-chunks/utf8@3.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/utf8@3.0.0/node_modules/utf8/utf8.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.pnpm/utf8@3.0.0/node_modules/utf8/utf8.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval(";\n(function(root) {\n    var stringFromCharCode = String.fromCharCode;\n    // Taken from https://mths.be/punycode\n    function ucs2decode(string) {\n        var output = [];\n        var counter = 0;\n        var length = string.length;\n        var value;\n        var extra;\n        while(counter < length){\n            value = string.charCodeAt(counter++);\n            if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                // high surrogate, and there is a next character\n                extra = string.charCodeAt(counter++);\n                if ((extra & 0xFC00) == 0xDC00) {\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                }\n            } else {\n                output.push(value);\n            }\n        }\n        return output;\n    }\n    // Taken from https://mths.be/punycode\n    function ucs2encode(array) {\n        var length = array.length;\n        var index = -1;\n        var value;\n        var output = \"\";\n        while(++index < length){\n            value = array[index];\n            if (value > 0xFFFF) {\n                value -= 0x10000;\n                output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                value = 0xDC00 | value & 0x3FF;\n            }\n            output += stringFromCharCode(value);\n        }\n        return output;\n    }\n    function checkScalarValue(codePoint) {\n        if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n            throw Error(\"Lone surrogate U+\" + codePoint.toString(16).toUpperCase() + \" is not a scalar value\");\n        }\n    }\n    /*--------------------------------------------------------------------------*/ function createByte(codePoint, shift) {\n        return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n    }\n    function encodeCodePoint(codePoint) {\n        if ((codePoint & 0xFFFFFF80) == 0) {\n            return stringFromCharCode(codePoint);\n        }\n        var symbol = \"\";\n        if ((codePoint & 0xFFFFF800) == 0) {\n            symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n        } else if ((codePoint & 0xFFFF0000) == 0) {\n            checkScalarValue(codePoint);\n            symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n            symbol += createByte(codePoint, 6);\n        } else if ((codePoint & 0xFFE00000) == 0) {\n            symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n            symbol += createByte(codePoint, 12);\n            symbol += createByte(codePoint, 6);\n        }\n        symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n        return symbol;\n    }\n    function utf8encode(string) {\n        var codePoints = ucs2decode(string);\n        var length = codePoints.length;\n        var index = -1;\n        var codePoint;\n        var byteString = \"\";\n        while(++index < length){\n            codePoint = codePoints[index];\n            byteString += encodeCodePoint(codePoint);\n        }\n        return byteString;\n    }\n    /*--------------------------------------------------------------------------*/ function readContinuationByte() {\n        if (byteIndex >= byteCount) {\n            throw Error(\"Invalid byte index\");\n        }\n        var continuationByte = byteArray[byteIndex] & 0xFF;\n        byteIndex++;\n        if ((continuationByte & 0xC0) == 0x80) {\n            return continuationByte & 0x3F;\n        }\n        // If we end up here, itâ€™s not a continuation byte\n        throw Error(\"Invalid continuation byte\");\n    }\n    function decodeSymbol() {\n        var byte1;\n        var byte2;\n        var byte3;\n        var byte4;\n        var codePoint;\n        if (byteIndex > byteCount) {\n            throw Error(\"Invalid byte index\");\n        }\n        if (byteIndex == byteCount) {\n            return false;\n        }\n        // Read first byte\n        byte1 = byteArray[byteIndex] & 0xFF;\n        byteIndex++;\n        // 1-byte sequence (no continuation bytes)\n        if ((byte1 & 0x80) == 0) {\n            return byte1;\n        }\n        // 2-byte sequence\n        if ((byte1 & 0xE0) == 0xC0) {\n            byte2 = readContinuationByte();\n            codePoint = (byte1 & 0x1F) << 6 | byte2;\n            if (codePoint >= 0x80) {\n                return codePoint;\n            } else {\n                throw Error(\"Invalid continuation byte\");\n            }\n        }\n        // 3-byte sequence (may include unpaired surrogates)\n        if ((byte1 & 0xF0) == 0xE0) {\n            byte2 = readContinuationByte();\n            byte3 = readContinuationByte();\n            codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n            if (codePoint >= 0x0800) {\n                checkScalarValue(codePoint);\n                return codePoint;\n            } else {\n                throw Error(\"Invalid continuation byte\");\n            }\n        }\n        // 4-byte sequence\n        if ((byte1 & 0xF8) == 0xF0) {\n            byte2 = readContinuationByte();\n            byte3 = readContinuationByte();\n            byte4 = readContinuationByte();\n            codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n            if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n                return codePoint;\n            }\n        }\n        throw Error(\"Invalid UTF-8 detected\");\n    }\n    var byteArray;\n    var byteCount;\n    var byteIndex;\n    function utf8decode(byteString) {\n        byteArray = ucs2decode(byteString);\n        byteCount = byteArray.length;\n        byteIndex = 0;\n        var codePoints = [];\n        var tmp;\n        while((tmp = decodeSymbol()) !== false){\n            codePoints.push(tmp);\n        }\n        return ucs2encode(codePoints);\n    }\n    /*--------------------------------------------------------------------------*/ root.version = \"3.0.0\";\n    root.encode = utf8encode;\n    root.decode = utf8decode;\n})( false ? 0 : exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/utf8@3.0.0/node_modules/utf8/utf8.js\n");

/***/ })

};
;