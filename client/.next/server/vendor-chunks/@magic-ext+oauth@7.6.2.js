"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@magic-ext+oauth@7.6.2";
exports.ids = ["vendor-chunks/@magic-ext+oauth@7.6.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAuthErrorCode: () => (/* binding */ ce),\n/* harmony export */   OAuthExtension: () => (/* binding */ Y),\n/* harmony export */   OAuthPayloadMethods: () => (/* binding */ E)\n/* harmony export */ });\n/* harmony import */ var magic_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! magic-sdk */ \"(ssr)/./node_modules/.pnpm/magic-sdk@13.6.2/node_modules/magic-sdk/dist/es/index.mjs\");\nvar te = Object.create;\nvar D = Object.defineProperty;\nvar ne = Object.getOwnPropertyDescriptor;\nvar ie = Object.getOwnPropertyNames;\nvar ae = Object.getPrototypeOf, oe = Object.prototype.hasOwnProperty;\nvar H = (n, r)=>()=>(r || n((r = {\n            exports: {}\n        }).exports, r), r.exports);\nvar se = (n, r, s, m)=>{\n    if (r && typeof r == \"object\" || typeof r == \"function\") for (let h of ie(r))!oe.call(n, h) && h !== s && D(n, h, {\n        get: ()=>r[h],\n        enumerable: !(m = ne(r, h)) || m.enumerable\n    });\n    return n;\n};\nvar T = (n, r, s)=>(s = n != null ? te(ae(n)) : {}, se(r || !n || !n.__esModule ? D(s, \"default\", {\n        value: n,\n        enumerable: !0\n    }) : s, n));\nvar C = (n, r, s)=>new Promise((m, h)=>{\n        var w = (p)=>{\n            try {\n                d(s.next(p));\n            } catch (u) {\n                h(u);\n            }\n        }, R = (p)=>{\n            try {\n                d(s.throw(p));\n            } catch (u) {\n                h(u);\n            }\n        }, d = (p)=>p.done ? m(p.value) : Promise.resolve(p.value).then(w, R);\n        d((s = s.apply(n, r)).next());\n    });\nvar k = H((I, F)=>{\n    (function(n, r) {\n        typeof I == \"object\" ? F.exports = I = r() : typeof define == \"function\" && define.amd ? define([], r) : n.CryptoJS = r();\n    })(I, function() {\n        var n = n || function(r, s) {\n            var m = Object.create || function() {\n                function e() {}\n                return function(t) {\n                    var c;\n                    return e.prototype = t, c = new e, e.prototype = null, c;\n                };\n            }(), h = {}, w = h.lib = {}, R = w.Base = function() {\n                return {\n                    extend: function(e) {\n                        var t = m(this);\n                        return e && t.mixIn(e), (!t.hasOwnProperty(\"init\") || this.init === t.init) && (t.init = function() {\n                            t.$super.init.apply(this, arguments);\n                        }), t.init.prototype = t, t.$super = this, t;\n                    },\n                    create: function() {\n                        var e = this.extend();\n                        return e.init.apply(e, arguments), e;\n                    },\n                    init: function() {},\n                    mixIn: function(e) {\n                        for(var t in e)e.hasOwnProperty(t) && (this[t] = e[t]);\n                        e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n                    },\n                    clone: function() {\n                        return this.init.prototype.extend(this);\n                    }\n                };\n            }(), d = w.WordArray = R.extend({\n                init: function(e, t) {\n                    e = this.words = e || [], t != s ? this.sigBytes = t : this.sigBytes = e.length * 4;\n                },\n                toString: function(e) {\n                    return (e || u).stringify(this);\n                },\n                concat: function(e) {\n                    var t = this.words, c = e.words, i = this.sigBytes, g = e.sigBytes;\n                    if (this.clamp(), i % 4) for(var v = 0; v < g; v++){\n                        var b = c[v >>> 2] >>> 24 - v % 4 * 8 & 255;\n                        t[i + v >>> 2] |= b << 24 - (i + v) % 4 * 8;\n                    }\n                    else for(var v = 0; v < g; v += 4)t[i + v >>> 2] = c[v >>> 2];\n                    return this.sigBytes += g, this;\n                },\n                clamp: function() {\n                    var e = this.words, t = this.sigBytes;\n                    e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4);\n                },\n                clone: function() {\n                    var e = R.clone.call(this);\n                    return e.words = this.words.slice(0), e;\n                },\n                random: function(e) {\n                    for(var t = [], c = function(y) {\n                        var y = y, A = 987654321, B = 4294967295;\n                        return function() {\n                            A = 36969 * (A & 65535) + (A >> 16) & B, y = 18e3 * (y & 65535) + (y >> 16) & B;\n                            var x = (A << 16) + y & B;\n                            return x /= 4294967296, x += .5, x * (r.random() > .5 ? 1 : -1);\n                        };\n                    }, i = 0, g; i < e; i += 4){\n                        var v = c((g || r.random()) * 4294967296);\n                        g = v() * 987654071, t.push(v() * 4294967296 | 0);\n                    }\n                    return new d.init(t, e);\n                }\n            }), p = h.enc = {}, u = p.Hex = {\n                stringify: function(e) {\n                    for(var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++){\n                        var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n                        i.push((v >>> 4).toString(16)), i.push((v & 15).toString(16));\n                    }\n                    return i.join(\"\");\n                },\n                parse: function(e) {\n                    for(var t = e.length, c = [], i = 0; i < t; i += 2)c[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;\n                    return new d.init(c, t / 2);\n                }\n            }, _ = p.Latin1 = {\n                stringify: function(e) {\n                    for(var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++){\n                        var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n                        i.push(String.fromCharCode(v));\n                    }\n                    return i.join(\"\");\n                },\n                parse: function(e) {\n                    for(var t = e.length, c = [], i = 0; i < t; i++)c[i >>> 2] |= (e.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n                    return new d.init(c, t);\n                }\n            }, a = p.Utf8 = {\n                stringify: function(e) {\n                    try {\n                        return decodeURIComponent(escape(_.stringify(e)));\n                    } catch  {\n                        throw new Error(\"Malformed UTF-8 data\");\n                    }\n                },\n                parse: function(e) {\n                    return _.parse(unescape(encodeURIComponent(e)));\n                }\n            }, f = w.BufferedBlockAlgorithm = R.extend({\n                reset: function() {\n                    this._data = new d.init, this._nDataBytes = 0;\n                },\n                _append: function(e) {\n                    typeof e == \"string\" && (e = a.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n                },\n                _process: function(e) {\n                    var t = this._data, c = t.words, i = t.sigBytes, g = this.blockSize, v = g * 4, b = i / v;\n                    e ? b = r.ceil(b) : b = r.max((b | 0) - this._minBufferSize, 0);\n                    var y = b * g, A = r.min(y * 4, i);\n                    if (y) {\n                        for(var B = 0; B < y; B += g)this._doProcessBlock(c, B);\n                        var x = c.splice(0, y);\n                        t.sigBytes -= A;\n                    }\n                    return new d.init(x, A);\n                },\n                clone: function() {\n                    var e = R.clone.call(this);\n                    return e._data = this._data.clone(), e;\n                },\n                _minBufferSize: 0\n            }), o = w.Hasher = f.extend({\n                cfg: R.extend(),\n                init: function(e) {\n                    this.cfg = this.cfg.extend(e), this.reset();\n                },\n                reset: function() {\n                    f.reset.call(this), this._doReset();\n                },\n                update: function(e) {\n                    return this._append(e), this._process(), this;\n                },\n                finalize: function(e) {\n                    e && this._append(e);\n                    var t = this._doFinalize();\n                    return t;\n                },\n                blockSize: 512 / 32,\n                _createHelper: function(e) {\n                    return function(t, c) {\n                        return new e.init(c).finalize(t);\n                    };\n                },\n                _createHmacHelper: function(e) {\n                    return function(t, c) {\n                        return new l.HMAC.init(e, c).finalize(t);\n                    };\n                }\n            }), l = h.algo = {};\n            return h;\n        }(Math);\n        return n;\n    });\n});\nvar z = H((S, W)=>{\n    (function(n, r) {\n        typeof S == \"object\" ? W.exports = S = r(k()) : typeof define == \"function\" && define.amd ? define([\n            \"./core\"\n        ], r) : r(n.CryptoJS);\n    })(S, function(n) {\n        return function(r) {\n            var s = n, m = s.lib, h = m.WordArray, w = m.Hasher, R = s.algo, d = [], p = [];\n            (function() {\n                function a(e) {\n                    for(var t = r.sqrt(e), c = 2; c <= t; c++)if (!(e % c)) return !1;\n                    return !0;\n                }\n                function f(e) {\n                    return (e - (e | 0)) * 4294967296 | 0;\n                }\n                for(var o = 2, l = 0; l < 64;)a(o) && (l < 8 && (d[l] = f(r.pow(o, 1 / 2))), p[l] = f(r.pow(o, 1 / 3)), l++), o++;\n            })();\n            var u = [], _ = R.SHA256 = w.extend({\n                _doReset: function() {\n                    this._hash = new h.init(d.slice(0));\n                },\n                _doProcessBlock: function(a, f) {\n                    for(var o = this._hash.words, l = o[0], e = o[1], t = o[2], c = o[3], i = o[4], g = o[5], v = o[6], b = o[7], y = 0; y < 64; y++){\n                        if (y < 16) u[y] = a[f + y] | 0;\n                        else {\n                            var A = u[y - 15], B = (A << 25 | A >>> 7) ^ (A << 14 | A >>> 18) ^ A >>> 3, x = u[y - 2], G = (x << 15 | x >>> 17) ^ (x << 13 | x >>> 19) ^ x >>> 10;\n                            u[y] = B + u[y - 7] + G + u[y - 16];\n                        }\n                        var Q = i & g ^ ~i & v, X = l & e ^ l & t ^ e & t, Z = (l << 30 | l >>> 2) ^ (l << 19 | l >>> 13) ^ (l << 10 | l >>> 22), ee = (i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25), P = b + ee + Q + p[y] + u[y], re = Z + X;\n                        b = v, v = g, g = i, i = c + P | 0, c = t, t = e, e = l, l = P + re | 0;\n                    }\n                    o[0] = o[0] + l | 0, o[1] = o[1] + e | 0, o[2] = o[2] + t | 0, o[3] = o[3] + c | 0, o[4] = o[4] + i | 0, o[5] = o[5] + g | 0, o[6] = o[6] + v | 0, o[7] = o[7] + b | 0;\n                },\n                _doFinalize: function() {\n                    var a = this._data, f = a.words, o = this._nDataBytes * 8, l = a.sigBytes * 8;\n                    return f[l >>> 5] |= 128 << 24 - l % 32, f[(l + 64 >>> 9 << 4) + 14] = r.floor(o / 4294967296), f[(l + 64 >>> 9 << 4) + 15] = o, a.sigBytes = f.length * 4, this._process(), this._hash;\n                },\n                clone: function() {\n                    var a = w.clone.call(this);\n                    return a._hash = this._hash.clone(), a;\n                }\n            });\n            s.SHA256 = w._createHelper(_), s.HmacSHA256 = w._createHmacHelper(_);\n        }(Math), n.SHA256;\n    });\n});\nvar q = H((U, L)=>{\n    (function(n, r) {\n        typeof U == \"object\" ? L.exports = U = r(k()) : typeof define == \"function\" && define.amd ? define([\n            \"./core\"\n        ], r) : r(n.CryptoJS);\n    })(U, function(n) {\n        return function() {\n            var r = n, s = r.lib, m = s.WordArray, h = r.enc, w = h.Base64 = {\n                stringify: function(d) {\n                    var p = d.words, u = d.sigBytes, _ = this._map;\n                    d.clamp();\n                    for(var a = [], f = 0; f < u; f += 3)for(var o = p[f >>> 2] >>> 24 - f % 4 * 8 & 255, l = p[f + 1 >>> 2] >>> 24 - (f + 1) % 4 * 8 & 255, e = p[f + 2 >>> 2] >>> 24 - (f + 2) % 4 * 8 & 255, t = o << 16 | l << 8 | e, c = 0; c < 4 && f + c * .75 < u; c++)a.push(_.charAt(t >>> 6 * (3 - c) & 63));\n                    var i = _.charAt(64);\n                    if (i) for(; a.length % 4;)a.push(i);\n                    return a.join(\"\");\n                },\n                parse: function(d) {\n                    var p = d.length, u = this._map, _ = this._reverseMap;\n                    if (!_) {\n                        _ = this._reverseMap = [];\n                        for(var a = 0; a < u.length; a++)_[u.charCodeAt(a)] = a;\n                    }\n                    var f = u.charAt(64);\n                    if (f) {\n                        var o = d.indexOf(f);\n                        o !== -1 && (p = o);\n                    }\n                    return R(d, p, _);\n                },\n                _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n            };\n            function R(d, p, u) {\n                for(var _ = [], a = 0, f = 0; f < p; f++)if (f % 4) {\n                    var o = u[d.charCodeAt(f - 1)] << f % 4 * 2, l = u[d.charCodeAt(f)] >>> 6 - f % 4 * 2;\n                    _[a >>> 2] |= (o | l) << 24 - a % 4 * 8, a++;\n                }\n                return m.create(_, a);\n            }\n        }(), n.enc.Base64;\n    });\n});\n\nvar E = ((r)=>(r.ParseRedirectResult = \"magic_oauth_parse_redirect_result\", r))(E || {}), ce = ((a)=>(a.InvalidRequest = \"invalid_request\", a.InvalidClient = \"invalid_client\", a.InvalidScope = \"invalid_scope\", a.InvalidGrant = \"invalid_grant\", a.UnauthorizedClient = \"unauthorized_client\", a.UnsupportedResponseType = \"unsupported_response_type\", a.UnsupportedGrantType = \"unsupported_grant_type\", a.UnsupportedTokenType = \"unsupported_token_type\", a.AccessDenied = \"access_denied\", a.ServerError = \"server_error\", a.TemporarilyUnavailable = \"temporarily_unavailable\", a))(ce || {});\nvar j = T(z()), J = T(q());\nvar $ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\", V =  false && 0, fe = V && !!window.crypto.subtle;\nfunction ue(n) {\n    return Array.from(n).map((r)=>$[r % $.length]).join(\"\");\n}\nfunction M(n) {\n    let r = (s)=>s.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n    if (n instanceof ArrayBuffer) {\n        let s = new Uint8Array(n), m = Array.from(s).map((w)=>String.fromCharCode(w)).join(\"\"), h = btoa(m);\n        return r(h);\n    }\n    return r(J.default.stringify(n));\n}\nfunction de(n) {\n    return C(this, null, function*() {\n        if (fe) {\n            let r = new TextEncoder().encode(n);\n            return crypto.subtle.digest(\"SHA-256\", r).then(M);\n        }\n        return M((0, j.default)(n));\n    });\n}\nfunction N(n) {\n    let r = new Uint8Array(n);\n    if (V) window.crypto.getRandomValues(r);\n    else for(let s = 0; s < n; s += 1)r[s] = Math.floor(Math.random() * Math.floor(255));\n    return ue(r);\n}\nfunction K() {\n    return C(this, null, function*() {\n        let n = N(128), r = N(128), s = yield de(r);\n        return {\n            verifier: r,\n            challenge: s,\n            state: n\n        };\n    });\n}\nvar Y = class extends magic_sdk__WEBPACK_IMPORTED_MODULE_0__.Extension.Internal {\n    constructor(){\n        super(...arguments);\n        this.name = \"oauth\";\n        this.config = {};\n        this.compat = {\n            \"magic-sdk\": \">=2.4.6\",\n            \"@magic-sdk/react-native\": !1,\n            \"@magic-sdk/react-native-bare\": !1,\n            \"@magic-sdk/react-native-expo\": !1\n        };\n    }\n    loginWithRedirect(s) {\n        return this.utils.createPromiEvent((m)=>C(this, null, function*() {\n                let { provider: h, query: w } = yield pe.call(this, s);\n                window.location.href = new URL(`/v1/oauth2/${h}/start?${w}`, this.sdk.endpoint).href, m();\n            }));\n    }\n    getRedirectResult() {\n        let s = window.location.search, m = window.location.origin + window.location.pathname;\n        return window.history.replaceState(null, \"\", m), he.call(this, s);\n    }\n}, O = \"oauth_redirect_metadata\";\nfunction pe(n) {\n    return C(this, null, function*() {\n        yield this.utils.storage.removeItem(O);\n        let { provider: r, redirectURI: s, scope: m, loginHint: h } = n, { verifier: w, challenge: R, state: d } = yield K(), p = JSON.stringify({\n            verifier: w,\n            state: d\n        });\n        return yield this.utils.storage.setItem(O, p), {\n            query: [\n                `magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`,\n                `magic_challenge=${encodeURIComponent(R)}`,\n                `state=${encodeURIComponent(d)}`,\n                `platform=${encodeURIComponent(\"web\")}`,\n                m && `scope=${encodeURIComponent(m.join(\" \"))}`,\n                s && `redirect_uri=${encodeURIComponent(s)}`,\n                h && `login_hint=${encodeURIComponent(h)}`\n            ].reduce((_, a)=>a ? `${_}&${a}` : _),\n            provider: r,\n            redirectURI: s\n        };\n    });\n}\nfunction he(n) {\n    return this.utils.createPromiEvent((r, s)=>C(this, null, function*() {\n            var _;\n            let m = yield this.utils.storage.getItem(O), { verifier: h, state: w } = JSON.parse(m);\n            this.utils.storage.removeItem(O);\n            let R = this.utils.createJsonRpcRequestPayload(\"magic_oauth_parse_redirect_result\", [\n                n,\n                h,\n                w\n            ]), d = yield this.request(R), p = d, u = d;\n            u.error && s(this.createError(u.error, (_ = u.error_description) != null ? _ : \"An error occurred.\", {\n                errorURI: u.error_uri,\n                provider: u.provider\n            })), r(p);\n        }));\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@magic-ext+oauth@7.6.2/node_modules/@magic-ext/oauth/dist/es/index.mjs\n");

/***/ })

};
;