"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uint8arrays@2.1.10";
exports.ids = ["vendor-chunks/uint8arrays@2.1.10"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/to-string.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/to-string.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst bases = __webpack_require__(/*! ./util/bases */ \"(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/util/bases.js\");\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */ /**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {SupportedEncodings} [encoding=utf8] - The encoding to use\n * @returns {string}\n */ function toString(array, encoding = \"utf8\") {\n    const base = bases[encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\nmodule.exports = toString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdWludDhhcnJheXNAMi4xLjEwL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy90by1zdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUV0Qjs7Q0FFQyxHQUVEOzs7Ozs7Ozs7O0NBVUMsR0FDRCxTQUFTQyxTQUFVQyxLQUFLLEVBQUVDLFdBQVcsTUFBTTtJQUN6QyxNQUFNQyxPQUFPTCxLQUFLLENBQUNJLFNBQVM7SUFFNUIsSUFBSSxDQUFDQyxNQUFNO1FBQ1QsTUFBTSxJQUFJQyxNQUFNLENBQUMsc0JBQXNCLEVBQUVGLFNBQVMsQ0FBQyxDQUFDO0lBQ3REO0lBRUEseUJBQXlCO0lBQ3pCLE9BQU9DLEtBQUtFLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDTCxPQUFPTSxTQUFTLENBQUM7QUFDOUM7QUFFQUMsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWVudC8uL25vZGVfbW9kdWxlcy8ucG5wbS91aW50OGFycmF5c0AyLjEuMTAvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL3RvLXN0cmluZy5qcz9jNGU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBiYXNlcyA9IHJlcXVpcmUoJy4vdXRpbC9iYXNlcycpXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi91dGlsL2Jhc2VzJykuU3VwcG9ydGVkRW5jb2RpbmdzfSBTdXBwb3J0ZWRFbmNvZGluZ3NcbiAqL1xuXG4vKipcbiAqIFR1cm5zIGEgYFVpbnQ4QXJyYXlgIGludG8gYSBzdHJpbmcuXG4gKlxuICogU3VwcG9ydHMgYHV0ZjhgLCBgdXRmLThgIGFuZCBhbnkgZW5jb2Rpbmcgc3VwcG9ydGVkIGJ5IHRoZSBtdWx0aWJhc2UgbW9kdWxlLlxuICpcbiAqIEFsc28gYGFzY2lpYCB3aGljaCBpcyBzaW1pbGFyIHRvIG5vZGUncyAnYmluYXJ5JyBlbmNvZGluZy5cbiAqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGFycmF5IC0gVGhlIGFycmF5IHRvIHR1cm4gaW50byBhIHN0cmluZ1xuICogQHBhcmFtIHtTdXBwb3J0ZWRFbmNvZGluZ3N9IFtlbmNvZGluZz11dGY4XSAtIFRoZSBlbmNvZGluZyB0byB1c2VcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIHRvU3RyaW5nIChhcnJheSwgZW5jb2RpbmcgPSAndXRmOCcpIHtcbiAgY29uc3QgYmFzZSA9IGJhc2VzW2VuY29kaW5nXVxuXG4gIGlmICghYmFzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jb2RpbmcgXCIke2VuY29kaW5nfVwiYClcbiAgfVxuXG4gIC8vIHN0cmlwIG11bHRpYmFzZSBwcmVmaXhcbiAgcmV0dXJuIGJhc2UuZW5jb2Rlci5lbmNvZGUoYXJyYXkpLnN1YnN0cmluZygxKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvU3RyaW5nXG4iXSwibmFtZXMiOlsiYmFzZXMiLCJyZXF1aXJlIiwidG9TdHJpbmciLCJhcnJheSIsImVuY29kaW5nIiwiYmFzZSIsIkVycm9yIiwiZW5jb2RlciIsImVuY29kZSIsInN1YnN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/to-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/util/bases.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/util/bases.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { bases } = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/cjs/src/basics.js\");\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */ /**\n * @param {string} name\n * @param {string} prefix\n * @param {(buf: Uint8Array) => string} encode\n * @param {(str: string) => Uint8Array} decode\n * @returns {MultibaseCodec}\n */ function createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec(\"utf8\", \"u\", (buf)=>{\n    const decoder = new TextDecoder(\"utf8\");\n    return \"u\" + decoder.decode(buf);\n}, (str)=>{\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec(\"ascii\", \"a\", (buf)=>{\n    let string = \"a\";\n    for(let i = 0; i < buf.length; i++){\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str)=>{\n    str = str.substring(1);\n    const buf = new Uint8Array(str.length);\n    for(let i = 0; i < str.length; i++){\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\n/**\n * @typedef {'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof bases } SupportedEncodings\n */ /**\n * @type {Record<SupportedEncodings, MultibaseCodec>}\n */ const BASES = {\n    \"utf8\": string,\n    \"utf-8\": string,\n    \"hex\": bases.base16,\n    \"latin1\": ascii,\n    \"ascii\": ascii,\n    \"binary\": ascii,\n    ...bases\n};\nmodule.exports = BASES;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdWludDhhcnJheXNAMi4xLjEwL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiJBQUFFO0FBRUYsTUFBTSxFQUFFQSxLQUFLLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFFMUI7O0NBRUMsR0FFRDs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxZQUFhQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxNQUFNO0lBQ2hELE9BQU87UUFDTEg7UUFDQUM7UUFDQUcsU0FBUztZQUNQSjtZQUNBQztZQUNBQztRQUNGO1FBQ0FHLFNBQVM7WUFDUEY7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxNQUFNRyxTQUFTUCxZQUFZLFFBQVEsS0FBSyxDQUFDUTtJQUN2QyxNQUFNRixVQUFVLElBQUlHLFlBQVk7SUFDaEMsT0FBTyxNQUFNSCxRQUFRRixNQUFNLENBQUNJO0FBQzlCLEdBQUcsQ0FBQ0U7SUFDRixNQUFNTCxVQUFVLElBQUlNO0lBQ3BCLE9BQU9OLFFBQVFGLE1BQU0sQ0FBQ08sSUFBSUUsU0FBUyxDQUFDO0FBQ3RDO0FBRUEsTUFBTUMsUUFBUWIsWUFBWSxTQUFTLEtBQUssQ0FBQ1E7SUFDdkMsSUFBSUQsU0FBUztJQUViLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELElBQUs7UUFDbkNQLFVBQVVTLE9BQU9DLFlBQVksQ0FBQ1QsR0FBRyxDQUFDTSxFQUFFO0lBQ3RDO0lBQ0EsT0FBT1A7QUFDVCxHQUFHLENBQUNHO0lBQ0ZBLE1BQU1BLElBQUlFLFNBQVMsQ0FBQztJQUNwQixNQUFNSixNQUFNLElBQUlVLFdBQVdSLElBQUlLLE1BQU07SUFFckMsSUFBSyxJQUFJRCxJQUFJLEdBQUdBLElBQUlKLElBQUlLLE1BQU0sRUFBRUQsSUFBSztRQUNuQ04sR0FBRyxDQUFDTSxFQUFFLEdBQUdKLElBQUlTLFVBQVUsQ0FBQ0w7SUFDMUI7SUFFQSxPQUFPTjtBQUNUO0FBRUE7O0NBRUMsR0FFRDs7Q0FFQyxHQUNELE1BQU1ZLFFBQVE7SUFDWixRQUFRYjtJQUNSLFNBQVNBO0lBQ1QsT0FBT1QsTUFBTXVCLE1BQU07SUFDbkIsVUFBVVI7SUFDVixTQUFTQTtJQUNULFVBQVVBO0lBRVYsR0FBR2YsS0FBSztBQUNWO0FBRUF3QixPQUFPQyxPQUFPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3VpbnQ4YXJyYXlzQDIuMS4xMC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvdXRpbC9iYXNlcy5qcz8xZTcwIl0sInNvdXJjZXNDb250ZW50IjpbIiAgJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHsgYmFzZXMgfSA9IHJlcXVpcmUoJ211bHRpZm9ybWF0cy9iYXNpY3MnKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ211bHRpZm9ybWF0cy9iYXNlcy9pbnRlcmZhY2UnKS5NdWx0aWJhc2VDb2RlYzxhbnk+fSBNdWx0aWJhc2VDb2RlY1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcmVmaXhcbiAqIEBwYXJhbSB7KGJ1ZjogVWludDhBcnJheSkgPT4gc3RyaW5nfSBlbmNvZGVcbiAqIEBwYXJhbSB7KHN0cjogc3RyaW5nKSA9PiBVaW50OEFycmF5fSBkZWNvZGVcbiAqIEByZXR1cm5zIHtNdWx0aWJhc2VDb2RlY31cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ29kZWMgKG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHByZWZpeCxcbiAgICBlbmNvZGVyOiB7XG4gICAgICBuYW1lLFxuICAgICAgcHJlZml4LFxuICAgICAgZW5jb2RlXG4gICAgfSxcbiAgICBkZWNvZGVyOiB7XG4gICAgICBkZWNvZGVcbiAgICB9XG4gIH1cbn1cblxuY29uc3Qgc3RyaW5nID0gY3JlYXRlQ29kZWMoJ3V0ZjgnLCAndScsIChidWYpID0+IHtcbiAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmOCcpXG4gIHJldHVybiAndScgKyBkZWNvZGVyLmRlY29kZShidWYpXG59LCAoc3RyKSA9PiB7XG4gIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoc3RyLnN1YnN0cmluZygxKSlcbn0pXG5cbmNvbnN0IGFzY2lpID0gY3JlYXRlQ29kZWMoJ2FzY2lpJywgJ2EnLCAoYnVmKSA9PiB7XG4gIGxldCBzdHJpbmcgPSAnYSdcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSlcbiAgfVxuICByZXR1cm4gc3RyaW5nXG59LCAoc3RyKSA9PiB7XG4gIHN0ciA9IHN0ci5zdWJzdHJpbmcoMSlcbiAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoc3RyLmxlbmd0aClcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGJ1ZltpXSA9IHN0ci5jaGFyQ29kZUF0KGkpXG4gIH1cblxuICByZXR1cm4gYnVmXG59KVxuXG4vKipcbiAqIEB0eXBlZGVmIHsndXRmOCcgfCAndXRmLTgnIHwgJ2hleCcgfCAnbGF0aW4xJyB8ICdhc2NpaScgfCAnYmluYXJ5JyB8IGtleW9mIGJhc2VzIH0gU3VwcG9ydGVkRW5jb2RpbmdzXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7UmVjb3JkPFN1cHBvcnRlZEVuY29kaW5ncywgTXVsdGliYXNlQ29kZWM+fVxuICovXG5jb25zdCBCQVNFUyA9IHtcbiAgJ3V0ZjgnOiBzdHJpbmcsXG4gICd1dGYtOCc6IHN0cmluZyxcbiAgJ2hleCc6IGJhc2VzLmJhc2UxNixcbiAgJ2xhdGluMSc6IGFzY2lpLFxuICAnYXNjaWknOiBhc2NpaSxcbiAgJ2JpbmFyeSc6IGFzY2lpLFxuXG4gIC4uLmJhc2VzXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQkFTRVNcbiJdLCJuYW1lcyI6WyJiYXNlcyIsInJlcXVpcmUiLCJjcmVhdGVDb2RlYyIsIm5hbWUiLCJwcmVmaXgiLCJlbmNvZGUiLCJkZWNvZGUiLCJlbmNvZGVyIiwiZGVjb2RlciIsInN0cmluZyIsImJ1ZiIsIlRleHREZWNvZGVyIiwic3RyIiwiVGV4dEVuY29kZXIiLCJzdWJzdHJpbmciLCJhc2NpaSIsImkiLCJsZW5ndGgiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJVaW50OEFycmF5IiwiY2hhckNvZGVBdCIsIkJBU0VTIiwiYmFzZTE2IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/uint8arrays@2.1.10/node_modules/uint8arrays/util/bases.js\n");

/***/ })

};
;